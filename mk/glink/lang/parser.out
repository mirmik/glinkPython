Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    OR
    POINT
    SEMI
    DOUBLECOLON
    WRONGSTRING
    AMPERSAND
    SUPERWORD
    HEXNUMBER
    IN
    MPROD
    BINNUMBER

Grammar

Rule 0     S' -> inblock
Rule 1     dblock -> block
Rule 2     dblock -> divider block
Rule 3     block -> LBRACE inblock RBRACE
Rule 4     inblock -> <empty>
Rule 5     inblock -> metaexpr
Rule 6     inblock -> inblock divider metaexpr
Rule 7     inblock -> divider inblock
Rule 8     inblock -> inblock divider
Rule 9     print -> PRINT expr
Rule 10    module -> MODULE WORD COLON dblock
Rule 11    deffunc -> DEFFUNC func COLON dblock
Rule 12    application -> APPLICATION WORD COLON dblock
Rule 13    define -> DEFINE WORD expr
Rule 14    declare -> WORD COLON expr
Rule 15    if -> IF expr QUESTION expr COLON expr
Rule 16    divider -> DIVIDER
Rule 17    input -> INPUT
Rule 18    func -> WORD LPAREN args RPAREN
Rule 19    func -> WORD LPAREN args RPAREN block
Rule 20    metaexpr -> expr
Rule 21    metaexpr -> deffunc
Rule 22    metaexpr -> module
Rule 23    metaexpr -> application
Rule 24    metaexpr -> declare
Rule 25    metaexpr -> define
Rule 26    metaexpr -> downlevel
Rule 27    metaexpr -> if
Rule 28    list -> LBRACKET comms RBRACKET
Rule 29    list -> LBRACKET RBRACKET
Rule 30    break -> BREAK
Rule 31    args -> <empty>
Rule 32    args -> comms
Rule 33    comms -> expr
Rule 34    comms -> comms COMMA expr
Rule 35    equal -> WORD EQUALS expr
Rule 36    expr -> exprnoalg
Rule 37    expr -> alg0
Rule 38    expr -> print
Rule 39    expr -> variables
Rule 40    expr -> python
Rule 41    expr -> execfile
Rule 42    expr -> break
Rule 43    expr -> exectext
Rule 44    expr -> equal
Rule 45    expr -> element
Rule 46    expr -> yield
Rule 47    expr -> repeat
Rule 48    expr -> return
Rule 49    expr -> input
Rule 50    exprnoalg -> term
Rule 51    exprnoalg -> func
Rule 52    exprnoalg -> block
Rule 53    exprnoalg -> list
Rule 54    return -> RETURN expr
Rule 55    term -> str
Rule 56    term -> float
Rule 57    term -> int
Rule 58    term -> var
Rule 59    int -> NUMBER
Rule 60    python -> PYTHON str
Rule 61    execfile -> EXECFILE str
Rule 62    exectext -> EXECTEXT str
Rule 63    downlevel -> DOWNLEVEL expr
Rule 64    float -> FLOAT
Rule 65    yield -> YIELD
Rule 66    str -> STRING
Rule 67    repeat -> REPEAT
Rule 68    element -> expr LBRACKET expr RBRACKET
Rule 69    var -> WORD
Rule 70    variables -> VARIABLES expr
Rule 71    alg0 -> alg1
Rule 72    alg0 -> alg0 PLUSMINUS alg1
Rule 73    alg0 -> PLUSMINUS alg1
Rule 74    alg1 -> alg2
Rule 75    alg1 -> alg1 DIVMUL alg2
Rule 76    alg2 -> alg3
Rule 77    alg2 -> alg2 DPROD alg3
Rule 78    alg3 -> exprnoalg

Terminals, with rules where they appear

AMPERSAND            : 
APPLICATION          : 12
BINNUMBER            : 
BREAK                : 30
COLON                : 10 11 12 14 15
COMMA                : 34
DEFFUNC              : 11
DEFINE               : 13
DIVIDER              : 16
DIVMUL               : 75
DOUBLECOLON          : 
DOWNLEVEL            : 63
DPROD                : 77
EQUALS               : 35
EXECFILE             : 61
EXECTEXT             : 62
FLOAT                : 64
HEXNUMBER            : 
IF                   : 15
IN                   : 
INPUT                : 17
LBRACE               : 3
LBRACKET             : 28 29 68
LPAREN               : 18 19
MODULE               : 10
MPROD                : 
NUMBER               : 59
OR                   : 
PLUSMINUS            : 72 73
POINT                : 
PRINT                : 9
PYTHON               : 60
QUESTION             : 15
RBRACE               : 3
RBRACKET             : 28 29 68
REPEAT               : 67
RETURN               : 54
RPAREN               : 18 19
SEMI                 : 
STRING               : 66
SUPERWORD            : 
VARIABLES            : 70
WORD                 : 10 12 13 14 18 19 35 69
WRONGSTRING          : 
YIELD                : 65
error                : 

Nonterminals, with rules where they appear

alg0                 : 37 72
alg1                 : 71 72 73 75
alg2                 : 74 75 77
alg3                 : 76 77
application          : 23
args                 : 18 19
block                : 1 2 19 52
break                : 42
comms                : 28 32 34
dblock               : 10 11 12
declare              : 24
deffunc              : 21
define               : 25
divider              : 2 6 7 8
downlevel            : 26
element              : 45
equal                : 44
execfile             : 41
exectext             : 43
expr                 : 9 13 14 15 15 15 20 33 34 35 54 63 68 68 70
exprnoalg            : 36 78
float                : 56
func                 : 11 51
if                   : 27
inblock              : 3 6 7 8 0
input                : 49
int                  : 57
list                 : 53
metaexpr             : 5 6
module               : 22
print                : 38
python               : 40
repeat               : 47
return               : 48
str                  : 55 60 61 62
term                 : 50
var                  : 58
variables            : 39
yield                : 46

Parsing method: LALR

state 0

    (0) S' -> . inblock
    (4) inblock -> .
    (5) inblock -> . metaexpr
    (6) inblock -> . inblock divider metaexpr
    (7) inblock -> . divider inblock
    (8) inblock -> . inblock divider
    (20) metaexpr -> . expr
    (21) metaexpr -> . deffunc
    (22) metaexpr -> . module
    (23) metaexpr -> . application
    (24) metaexpr -> . declare
    (25) metaexpr -> . define
    (26) metaexpr -> . downlevel
    (27) metaexpr -> . if
    (16) divider -> . DIVIDER
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (11) deffunc -> . DEFFUNC func COLON dblock
    (10) module -> . MODULE WORD COLON dblock
    (12) application -> . APPLICATION WORD COLON dblock
    (14) declare -> . WORD COLON expr
    (13) define -> . DEFINE WORD expr
    (63) downlevel -> . DOWNLEVEL expr
    (15) if -> . IF expr QUESTION expr COLON expr
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

  ! shift/reduce conflict for DIVIDER resolved as shift
    $end            reduce using rule 4 (inblock -> .)
    DIVIDER         shift and go to state 40
    DEFFUNC         shift and go to state 20
    MODULE          shift and go to state 21
    APPLICATION     shift and go to state 16
    WORD            shift and go to state 24
    DEFINE          shift and go to state 10
    DOWNLEVEL       shift and go to state 14
    IF              shift and go to state 41
    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

  ! DIVIDER         [ reduce using rule 4 (inblock -> .) ]

    float                          shift and go to state 1
    element                        shift and go to state 44
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    int                            shift and go to state 4
    inblock                        shift and go to state 32
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    downlevel                      shift and go to state 26
    module                         shift and go to state 8
    define                         shift and go to state 35
    print                          shift and go to state 9
    var                            shift and go to state 47
    block                          shift and go to state 11
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    alg3                           shift and go to state 36
    metaexpr                       shift and go to state 15
    input                          shift and go to state 43
    declare                        shift and go to state 30
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 5
    variables                      shift and go to state 25
    deffunc                        shift and go to state 23
    execfile                       shift and go to state 51
    list                           shift and go to state 53
    alg1                           shift and go to state 54
    application                    shift and go to state 55
    if                             shift and go to state 29
    func                           shift and go to state 39
    str                            shift and go to state 27
    yield                          shift and go to state 58
    divider                        shift and go to state 45

state 1

    (56) term -> float .

    LBRACKET        reduce using rule 56 (term -> float .)
    DIVIDER         reduce using rule 56 (term -> float .)
    $end            reduce using rule 56 (term -> float .)
    RBRACE          reduce using rule 56 (term -> float .)
    DPROD           reduce using rule 56 (term -> float .)
    DIVMUL          reduce using rule 56 (term -> float .)
    PLUSMINUS       reduce using rule 56 (term -> float .)
    QUESTION        reduce using rule 56 (term -> float .)
    RBRACKET        reduce using rule 56 (term -> float .)
    COMMA           reduce using rule 56 (term -> float .)
    RPAREN          reduce using rule 56 (term -> float .)
    COLON           reduce using rule 56 (term -> float .)


state 2

    (67) repeat -> REPEAT .

    LBRACKET        reduce using rule 67 (repeat -> REPEAT .)
    DIVIDER         reduce using rule 67 (repeat -> REPEAT .)
    $end            reduce using rule 67 (repeat -> REPEAT .)
    RBRACE          reduce using rule 67 (repeat -> REPEAT .)
    QUESTION        reduce using rule 67 (repeat -> REPEAT .)
    RBRACKET        reduce using rule 67 (repeat -> REPEAT .)
    COMMA           reduce using rule 67 (repeat -> REPEAT .)
    RPAREN          reduce using rule 67 (repeat -> REPEAT .)
    COLON           reduce using rule 67 (repeat -> REPEAT .)


state 3

    (40) expr -> python .

    COLON           reduce using rule 40 (expr -> python .)
    LBRACKET        reduce using rule 40 (expr -> python .)
    QUESTION        reduce using rule 40 (expr -> python .)
    RBRACE          reduce using rule 40 (expr -> python .)
    DIVIDER         reduce using rule 40 (expr -> python .)
    RBRACKET        reduce using rule 40 (expr -> python .)
    $end            reduce using rule 40 (expr -> python .)
    COMMA           reduce using rule 40 (expr -> python .)
    RPAREN          reduce using rule 40 (expr -> python .)


state 4

    (57) term -> int .

    LBRACKET        reduce using rule 57 (term -> int .)
    DIVIDER         reduce using rule 57 (term -> int .)
    $end            reduce using rule 57 (term -> int .)
    RBRACE          reduce using rule 57 (term -> int .)
    DPROD           reduce using rule 57 (term -> int .)
    DIVMUL          reduce using rule 57 (term -> int .)
    PLUSMINUS       reduce using rule 57 (term -> int .)
    QUESTION        reduce using rule 57 (term -> int .)
    RBRACKET        reduce using rule 57 (term -> int .)
    COMMA           reduce using rule 57 (term -> int .)
    RPAREN          reduce using rule 57 (term -> int .)
    COLON           reduce using rule 57 (term -> int .)


state 5

    (20) metaexpr -> expr .
    (68) element -> expr . LBRACKET expr RBRACKET

    DIVIDER         reduce using rule 20 (metaexpr -> expr .)
    $end            reduce using rule 20 (metaexpr -> expr .)
    RBRACE          reduce using rule 20 (metaexpr -> expr .)
    LBRACKET        shift and go to state 61


state 6

    (70) variables -> VARIABLES . expr
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    WORD            shift and go to state 63
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    print                          shift and go to state 9
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    str                            shift and go to state 27
    element                        shift and go to state 44
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 62
    variables                      shift and go to state 25
    execfile                       shift and go to state 51
    alg1                           shift and go to state 54
    func                           shift and go to state 39
    input                          shift and go to state 43
    yield                          shift and go to state 58

state 7

    (73) alg0 -> PLUSMINUS . alg1
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD

    WORD            shift and go to state 65
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    exprnoalg                      shift and go to state 64
    alg2                           shift and go to state 52
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    alg1                           shift and go to state 66
    term                           shift and go to state 38
    func                           shift and go to state 39
    str                            shift and go to state 27

state 8

    (22) metaexpr -> module .

    DIVIDER         reduce using rule 22 (metaexpr -> module .)
    $end            reduce using rule 22 (metaexpr -> module .)
    RBRACE          reduce using rule 22 (metaexpr -> module .)


state 9

    (38) expr -> print .

    COLON           reduce using rule 38 (expr -> print .)
    LBRACKET        reduce using rule 38 (expr -> print .)
    QUESTION        reduce using rule 38 (expr -> print .)
    RBRACE          reduce using rule 38 (expr -> print .)
    DIVIDER         reduce using rule 38 (expr -> print .)
    RBRACKET        reduce using rule 38 (expr -> print .)
    $end            reduce using rule 38 (expr -> print .)
    COMMA           reduce using rule 38 (expr -> print .)
    RPAREN          reduce using rule 38 (expr -> print .)


state 10

    (13) define -> DEFINE . WORD expr

    WORD            shift and go to state 67


state 11

    (52) exprnoalg -> block .

    LBRACKET        reduce using rule 52 (exprnoalg -> block .)
    DIVIDER         reduce using rule 52 (exprnoalg -> block .)
    $end            reduce using rule 52 (exprnoalg -> block .)
    RBRACE          reduce using rule 52 (exprnoalg -> block .)
    QUESTION        reduce using rule 52 (exprnoalg -> block .)
    RBRACKET        reduce using rule 52 (exprnoalg -> block .)
    COMMA           reduce using rule 52 (exprnoalg -> block .)
    RPAREN          reduce using rule 52 (exprnoalg -> block .)
    COLON           reduce using rule 52 (exprnoalg -> block .)
    DPROD           reduce using rule 52 (exprnoalg -> block .)
    DIVMUL          reduce using rule 52 (exprnoalg -> block .)
    PLUSMINUS       reduce using rule 52 (exprnoalg -> block .)


state 12

    (62) exectext -> EXECTEXT . str
    (66) str -> . STRING

    STRING          shift and go to state 17

    str                            shift and go to state 68

state 13

    (43) expr -> exectext .

    COLON           reduce using rule 43 (expr -> exectext .)
    LBRACKET        reduce using rule 43 (expr -> exectext .)
    QUESTION        reduce using rule 43 (expr -> exectext .)
    RBRACE          reduce using rule 43 (expr -> exectext .)
    DIVIDER         reduce using rule 43 (expr -> exectext .)
    RBRACKET        reduce using rule 43 (expr -> exectext .)
    $end            reduce using rule 43 (expr -> exectext .)
    COMMA           reduce using rule 43 (expr -> exectext .)
    RPAREN          reduce using rule 43 (expr -> exectext .)


state 14

    (63) downlevel -> DOWNLEVEL . expr
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    WORD            shift and go to state 63
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    print                          shift and go to state 9
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    str                            shift and go to state 27
    element                        shift and go to state 44
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 69
    variables                      shift and go to state 25
    execfile                       shift and go to state 51
    alg1                           shift and go to state 54
    func                           shift and go to state 39
    input                          shift and go to state 43
    yield                          shift and go to state 58

state 15

    (5) inblock -> metaexpr .

    DIVIDER         reduce using rule 5 (inblock -> metaexpr .)
    $end            reduce using rule 5 (inblock -> metaexpr .)
    RBRACE          reduce using rule 5 (inblock -> metaexpr .)


state 16

    (12) application -> APPLICATION . WORD COLON dblock

    WORD            shift and go to state 70


state 17

    (66) str -> STRING .

    LBRACKET        reduce using rule 66 (str -> STRING .)
    DIVIDER         reduce using rule 66 (str -> STRING .)
    $end            reduce using rule 66 (str -> STRING .)
    RBRACE          reduce using rule 66 (str -> STRING .)
    DPROD           reduce using rule 66 (str -> STRING .)
    DIVMUL          reduce using rule 66 (str -> STRING .)
    PLUSMINUS       reduce using rule 66 (str -> STRING .)
    QUESTION        reduce using rule 66 (str -> STRING .)
    RBRACKET        reduce using rule 66 (str -> STRING .)
    COMMA           reduce using rule 66 (str -> STRING .)
    RPAREN          reduce using rule 66 (str -> STRING .)
    COLON           reduce using rule 66 (str -> STRING .)


state 18

    (64) float -> FLOAT .

    LBRACKET        reduce using rule 64 (float -> FLOAT .)
    COMMA           reduce using rule 64 (float -> FLOAT .)
    RPAREN          reduce using rule 64 (float -> FLOAT .)
    DPROD           reduce using rule 64 (float -> FLOAT .)
    DIVMUL          reduce using rule 64 (float -> FLOAT .)
    PLUSMINUS       reduce using rule 64 (float -> FLOAT .)
    DIVIDER         reduce using rule 64 (float -> FLOAT .)
    $end            reduce using rule 64 (float -> FLOAT .)
    RBRACE          reduce using rule 64 (float -> FLOAT .)
    QUESTION        reduce using rule 64 (float -> FLOAT .)
    RBRACKET        reduce using rule 64 (float -> FLOAT .)
    COLON           reduce using rule 64 (float -> FLOAT .)


state 19

    (59) int -> NUMBER .

    LBRACKET        reduce using rule 59 (int -> NUMBER .)
    RBRACE          reduce using rule 59 (int -> NUMBER .)
    DIVIDER         reduce using rule 59 (int -> NUMBER .)
    DPROD           reduce using rule 59 (int -> NUMBER .)
    DIVMUL          reduce using rule 59 (int -> NUMBER .)
    PLUSMINUS       reduce using rule 59 (int -> NUMBER .)
    $end            reduce using rule 59 (int -> NUMBER .)
    COMMA           reduce using rule 59 (int -> NUMBER .)
    RPAREN          reduce using rule 59 (int -> NUMBER .)
    QUESTION        reduce using rule 59 (int -> NUMBER .)
    RBRACKET        reduce using rule 59 (int -> NUMBER .)
    COLON           reduce using rule 59 (int -> NUMBER .)


state 20

    (11) deffunc -> DEFFUNC . func COLON dblock
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block

    WORD            shift and go to state 71

    func                           shift and go to state 72

state 21

    (10) module -> MODULE . WORD COLON dblock

    WORD            shift and go to state 73


state 22

    (44) expr -> equal .

    COLON           reduce using rule 44 (expr -> equal .)
    LBRACKET        reduce using rule 44 (expr -> equal .)
    QUESTION        reduce using rule 44 (expr -> equal .)
    RBRACE          reduce using rule 44 (expr -> equal .)
    DIVIDER         reduce using rule 44 (expr -> equal .)
    RBRACKET        reduce using rule 44 (expr -> equal .)
    $end            reduce using rule 44 (expr -> equal .)
    COMMA           reduce using rule 44 (expr -> equal .)
    RPAREN          reduce using rule 44 (expr -> equal .)


state 23

    (21) metaexpr -> deffunc .

    DIVIDER         reduce using rule 21 (metaexpr -> deffunc .)
    $end            reduce using rule 21 (metaexpr -> deffunc .)
    RBRACE          reduce using rule 21 (metaexpr -> deffunc .)


state 24

    (14) declare -> WORD . COLON expr
    (35) equal -> WORD . EQUALS expr
    (18) func -> WORD . LPAREN args RPAREN
    (19) func -> WORD . LPAREN args RPAREN block
    (69) var -> WORD .

    COLON           shift and go to state 75
    EQUALS          shift and go to state 74
    LPAREN          shift and go to state 76
    LBRACKET        reduce using rule 69 (var -> WORD .)
    DIVIDER         reduce using rule 69 (var -> WORD .)
    $end            reduce using rule 69 (var -> WORD .)
    RBRACE          reduce using rule 69 (var -> WORD .)
    DPROD           reduce using rule 69 (var -> WORD .)
    DIVMUL          reduce using rule 69 (var -> WORD .)
    PLUSMINUS       reduce using rule 69 (var -> WORD .)


state 25

    (39) expr -> variables .

    COLON           reduce using rule 39 (expr -> variables .)
    LBRACKET        reduce using rule 39 (expr -> variables .)
    QUESTION        reduce using rule 39 (expr -> variables .)
    RBRACE          reduce using rule 39 (expr -> variables .)
    DIVIDER         reduce using rule 39 (expr -> variables .)
    RBRACKET        reduce using rule 39 (expr -> variables .)
    $end            reduce using rule 39 (expr -> variables .)
    COMMA           reduce using rule 39 (expr -> variables .)
    RPAREN          reduce using rule 39 (expr -> variables .)


state 26

    (26) metaexpr -> downlevel .

    DIVIDER         reduce using rule 26 (metaexpr -> downlevel .)
    $end            reduce using rule 26 (metaexpr -> downlevel .)
    RBRACE          reduce using rule 26 (metaexpr -> downlevel .)


state 27

    (55) term -> str .

    LBRACKET        reduce using rule 55 (term -> str .)
    DIVIDER         reduce using rule 55 (term -> str .)
    $end            reduce using rule 55 (term -> str .)
    RBRACE          reduce using rule 55 (term -> str .)
    DPROD           reduce using rule 55 (term -> str .)
    DIVMUL          reduce using rule 55 (term -> str .)
    PLUSMINUS       reduce using rule 55 (term -> str .)
    QUESTION        reduce using rule 55 (term -> str .)
    RBRACKET        reduce using rule 55 (term -> str .)
    COMMA           reduce using rule 55 (term -> str .)
    RPAREN          reduce using rule 55 (term -> str .)
    COLON           reduce using rule 55 (term -> str .)


state 28

    (60) python -> PYTHON . str
    (66) str -> . STRING

    STRING          shift and go to state 17

    str                            shift and go to state 77

state 29

    (27) metaexpr -> if .

    DIVIDER         reduce using rule 27 (metaexpr -> if .)
    $end            reduce using rule 27 (metaexpr -> if .)
    RBRACE          reduce using rule 27 (metaexpr -> if .)


state 30

    (24) metaexpr -> declare .

    DIVIDER         reduce using rule 24 (metaexpr -> declare .)
    $end            reduce using rule 24 (metaexpr -> declare .)
    RBRACE          reduce using rule 24 (metaexpr -> declare .)


state 31

    (47) expr -> repeat .

    COLON           reduce using rule 47 (expr -> repeat .)
    LBRACKET        reduce using rule 47 (expr -> repeat .)
    QUESTION        reduce using rule 47 (expr -> repeat .)
    RBRACE          reduce using rule 47 (expr -> repeat .)
    DIVIDER         reduce using rule 47 (expr -> repeat .)
    RBRACKET        reduce using rule 47 (expr -> repeat .)
    $end            reduce using rule 47 (expr -> repeat .)
    COMMA           reduce using rule 47 (expr -> repeat .)
    RPAREN          reduce using rule 47 (expr -> repeat .)


state 32

    (0) S' -> inblock .
    (6) inblock -> inblock . divider metaexpr
    (8) inblock -> inblock . divider
    (16) divider -> . DIVIDER

    DIVIDER         shift and go to state 40

    divider                        shift and go to state 78

state 33

    (42) expr -> break .

    COLON           reduce using rule 42 (expr -> break .)
    LBRACKET        reduce using rule 42 (expr -> break .)
    QUESTION        reduce using rule 42 (expr -> break .)
    RBRACE          reduce using rule 42 (expr -> break .)
    DIVIDER         reduce using rule 42 (expr -> break .)
    RBRACKET        reduce using rule 42 (expr -> break .)
    $end            reduce using rule 42 (expr -> break .)
    COMMA           reduce using rule 42 (expr -> break .)
    RPAREN          reduce using rule 42 (expr -> break .)


state 34

    (48) expr -> return .

    COLON           reduce using rule 48 (expr -> return .)
    LBRACKET        reduce using rule 48 (expr -> return .)
    QUESTION        reduce using rule 48 (expr -> return .)
    RBRACE          reduce using rule 48 (expr -> return .)
    DIVIDER         reduce using rule 48 (expr -> return .)
    RBRACKET        reduce using rule 48 (expr -> return .)
    $end            reduce using rule 48 (expr -> return .)
    COMMA           reduce using rule 48 (expr -> return .)
    RPAREN          reduce using rule 48 (expr -> return .)


state 35

    (25) metaexpr -> define .

    DIVIDER         reduce using rule 25 (metaexpr -> define .)
    $end            reduce using rule 25 (metaexpr -> define .)
    RBRACE          reduce using rule 25 (metaexpr -> define .)


state 36

    (76) alg2 -> alg3 .

    DPROD           reduce using rule 76 (alg2 -> alg3 .)
    DIVMUL          reduce using rule 76 (alg2 -> alg3 .)
    PLUSMINUS       reduce using rule 76 (alg2 -> alg3 .)
    LBRACKET        reduce using rule 76 (alg2 -> alg3 .)
    COMMA           reduce using rule 76 (alg2 -> alg3 .)
    RPAREN          reduce using rule 76 (alg2 -> alg3 .)
    RBRACKET        reduce using rule 76 (alg2 -> alg3 .)
    DIVIDER         reduce using rule 76 (alg2 -> alg3 .)
    $end            reduce using rule 76 (alg2 -> alg3 .)
    RBRACE          reduce using rule 76 (alg2 -> alg3 .)
    QUESTION        reduce using rule 76 (alg2 -> alg3 .)
    COLON           reduce using rule 76 (alg2 -> alg3 .)


state 37

    (3) block -> LBRACE . inblock RBRACE
    (4) inblock -> .
    (5) inblock -> . metaexpr
    (6) inblock -> . inblock divider metaexpr
    (7) inblock -> . divider inblock
    (8) inblock -> . inblock divider
    (20) metaexpr -> . expr
    (21) metaexpr -> . deffunc
    (22) metaexpr -> . module
    (23) metaexpr -> . application
    (24) metaexpr -> . declare
    (25) metaexpr -> . define
    (26) metaexpr -> . downlevel
    (27) metaexpr -> . if
    (16) divider -> . DIVIDER
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (11) deffunc -> . DEFFUNC func COLON dblock
    (10) module -> . MODULE WORD COLON dblock
    (12) application -> . APPLICATION WORD COLON dblock
    (14) declare -> . WORD COLON expr
    (13) define -> . DEFINE WORD expr
    (63) downlevel -> . DOWNLEVEL expr
    (15) if -> . IF expr QUESTION expr COLON expr
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

  ! shift/reduce conflict for DIVIDER resolved as shift
    RBRACE          reduce using rule 4 (inblock -> .)
    DIVIDER         shift and go to state 40
    DEFFUNC         shift and go to state 20
    MODULE          shift and go to state 21
    APPLICATION     shift and go to state 16
    WORD            shift and go to state 24
    DEFINE          shift and go to state 10
    DOWNLEVEL       shift and go to state 14
    IF              shift and go to state 41
    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

  ! DIVIDER         [ reduce using rule 4 (inblock -> .) ]

    float                          shift and go to state 1
    element                        shift and go to state 44
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    int                            shift and go to state 4
    inblock                        shift and go to state 79
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    downlevel                      shift and go to state 26
    module                         shift and go to state 8
    define                         shift and go to state 35
    print                          shift and go to state 9
    var                            shift and go to state 47
    block                          shift and go to state 11
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    alg3                           shift and go to state 36
    metaexpr                       shift and go to state 15
    input                          shift and go to state 43
    declare                        shift and go to state 30
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 5
    variables                      shift and go to state 25
    deffunc                        shift and go to state 23
    execfile                       shift and go to state 51
    list                           shift and go to state 53
    alg1                           shift and go to state 54
    application                    shift and go to state 55
    if                             shift and go to state 29
    func                           shift and go to state 39
    str                            shift and go to state 27
    yield                          shift and go to state 58
    divider                        shift and go to state 45

state 38

    (50) exprnoalg -> term .

    LBRACKET        reduce using rule 50 (exprnoalg -> term .)
    DIVIDER         reduce using rule 50 (exprnoalg -> term .)
    $end            reduce using rule 50 (exprnoalg -> term .)
    RBRACE          reduce using rule 50 (exprnoalg -> term .)
    QUESTION        reduce using rule 50 (exprnoalg -> term .)
    RBRACKET        reduce using rule 50 (exprnoalg -> term .)
    COMMA           reduce using rule 50 (exprnoalg -> term .)
    RPAREN          reduce using rule 50 (exprnoalg -> term .)
    COLON           reduce using rule 50 (exprnoalg -> term .)
    DPROD           reduce using rule 50 (exprnoalg -> term .)
    DIVMUL          reduce using rule 50 (exprnoalg -> term .)
    PLUSMINUS       reduce using rule 50 (exprnoalg -> term .)


state 39

    (51) exprnoalg -> func .

    LBRACKET        reduce using rule 51 (exprnoalg -> func .)
    DIVIDER         reduce using rule 51 (exprnoalg -> func .)
    $end            reduce using rule 51 (exprnoalg -> func .)
    RBRACE          reduce using rule 51 (exprnoalg -> func .)
    QUESTION        reduce using rule 51 (exprnoalg -> func .)
    RBRACKET        reduce using rule 51 (exprnoalg -> func .)
    COMMA           reduce using rule 51 (exprnoalg -> func .)
    RPAREN          reduce using rule 51 (exprnoalg -> func .)
    COLON           reduce using rule 51 (exprnoalg -> func .)
    DPROD           reduce using rule 51 (exprnoalg -> func .)
    DIVMUL          reduce using rule 51 (exprnoalg -> func .)
    PLUSMINUS       reduce using rule 51 (exprnoalg -> func .)


state 40

    (16) divider -> DIVIDER .

    DIVIDER         reduce using rule 16 (divider -> DIVIDER .)
    DEFFUNC         reduce using rule 16 (divider -> DIVIDER .)
    MODULE          reduce using rule 16 (divider -> DIVIDER .)
    APPLICATION     reduce using rule 16 (divider -> DIVIDER .)
    WORD            reduce using rule 16 (divider -> DIVIDER .)
    DEFINE          reduce using rule 16 (divider -> DIVIDER .)
    DOWNLEVEL       reduce using rule 16 (divider -> DIVIDER .)
    IF              reduce using rule 16 (divider -> DIVIDER .)
    PLUSMINUS       reduce using rule 16 (divider -> DIVIDER .)
    PRINT           reduce using rule 16 (divider -> DIVIDER .)
    VARIABLES       reduce using rule 16 (divider -> DIVIDER .)
    PYTHON          reduce using rule 16 (divider -> DIVIDER .)
    EXECFILE        reduce using rule 16 (divider -> DIVIDER .)
    BREAK           reduce using rule 16 (divider -> DIVIDER .)
    EXECTEXT        reduce using rule 16 (divider -> DIVIDER .)
    YIELD           reduce using rule 16 (divider -> DIVIDER .)
    REPEAT          reduce using rule 16 (divider -> DIVIDER .)
    RETURN          reduce using rule 16 (divider -> DIVIDER .)
    INPUT           reduce using rule 16 (divider -> DIVIDER .)
    LBRACE          reduce using rule 16 (divider -> DIVIDER .)
    LBRACKET        reduce using rule 16 (divider -> DIVIDER .)
    STRING          reduce using rule 16 (divider -> DIVIDER .)
    FLOAT           reduce using rule 16 (divider -> DIVIDER .)
    NUMBER          reduce using rule 16 (divider -> DIVIDER .)
    $end            reduce using rule 16 (divider -> DIVIDER .)
    RBRACE          reduce using rule 16 (divider -> DIVIDER .)


state 41

    (15) if -> IF . expr QUESTION expr COLON expr
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    WORD            shift and go to state 63
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    print                          shift and go to state 9
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    str                            shift and go to state 27
    element                        shift and go to state 44
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 80
    variables                      shift and go to state 25
    execfile                       shift and go to state 51
    alg1                           shift and go to state 54
    func                           shift and go to state 39
    input                          shift and go to state 43
    yield                          shift and go to state 58

state 42

    (61) execfile -> EXECFILE . str
    (66) str -> . STRING

    STRING          shift and go to state 17

    str                            shift and go to state 81

state 43

    (49) expr -> input .

    COLON           reduce using rule 49 (expr -> input .)
    LBRACKET        reduce using rule 49 (expr -> input .)
    QUESTION        reduce using rule 49 (expr -> input .)
    RBRACE          reduce using rule 49 (expr -> input .)
    DIVIDER         reduce using rule 49 (expr -> input .)
    RBRACKET        reduce using rule 49 (expr -> input .)
    $end            reduce using rule 49 (expr -> input .)
    COMMA           reduce using rule 49 (expr -> input .)
    RPAREN          reduce using rule 49 (expr -> input .)


state 44

    (45) expr -> element .

    COLON           reduce using rule 45 (expr -> element .)
    LBRACKET        reduce using rule 45 (expr -> element .)
    QUESTION        reduce using rule 45 (expr -> element .)
    RBRACE          reduce using rule 45 (expr -> element .)
    DIVIDER         reduce using rule 45 (expr -> element .)
    RBRACKET        reduce using rule 45 (expr -> element .)
    $end            reduce using rule 45 (expr -> element .)
    COMMA           reduce using rule 45 (expr -> element .)
    RPAREN          reduce using rule 45 (expr -> element .)


state 45

    (7) inblock -> divider . inblock
    (4) inblock -> .
    (5) inblock -> . metaexpr
    (6) inblock -> . inblock divider metaexpr
    (7) inblock -> . divider inblock
    (8) inblock -> . inblock divider
    (20) metaexpr -> . expr
    (21) metaexpr -> . deffunc
    (22) metaexpr -> . module
    (23) metaexpr -> . application
    (24) metaexpr -> . declare
    (25) metaexpr -> . define
    (26) metaexpr -> . downlevel
    (27) metaexpr -> . if
    (16) divider -> . DIVIDER
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (11) deffunc -> . DEFFUNC func COLON dblock
    (10) module -> . MODULE WORD COLON dblock
    (12) application -> . APPLICATION WORD COLON dblock
    (14) declare -> . WORD COLON expr
    (13) define -> . DEFINE WORD expr
    (63) downlevel -> . DOWNLEVEL expr
    (15) if -> . IF expr QUESTION expr COLON expr
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

  ! shift/reduce conflict for DIVIDER resolved as shift
    $end            reduce using rule 4 (inblock -> .)
    RBRACE          reduce using rule 4 (inblock -> .)
    DIVIDER         shift and go to state 40
    DEFFUNC         shift and go to state 20
    MODULE          shift and go to state 21
    APPLICATION     shift and go to state 16
    WORD            shift and go to state 24
    DEFINE          shift and go to state 10
    DOWNLEVEL       shift and go to state 14
    IF              shift and go to state 41
    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

  ! DIVIDER         [ reduce using rule 4 (inblock -> .) ]

    float                          shift and go to state 1
    element                        shift and go to state 44
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    int                            shift and go to state 4
    inblock                        shift and go to state 82
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    downlevel                      shift and go to state 26
    module                         shift and go to state 8
    define                         shift and go to state 35
    print                          shift and go to state 9
    var                            shift and go to state 47
    block                          shift and go to state 11
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    alg3                           shift and go to state 36
    divider                        shift and go to state 45
    input                          shift and go to state 43
    declare                        shift and go to state 30
    metaexpr                       shift and go to state 15
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 5
    variables                      shift and go to state 25
    deffunc                        shift and go to state 23
    execfile                       shift and go to state 51
    list                           shift and go to state 53
    alg1                           shift and go to state 54
    application                    shift and go to state 55
    func                           shift and go to state 39
    str                            shift and go to state 27
    yield                          shift and go to state 58
    if                             shift and go to state 29

state 46

    (36) expr -> exprnoalg .
    (78) alg3 -> exprnoalg .

  ! reduce/reduce conflict for LBRACKET resolved using rule 36 (expr -> exprnoalg .)
  ! reduce/reduce conflict for DIVIDER resolved using rule 36 (expr -> exprnoalg .)
  ! reduce/reduce conflict for $end resolved using rule 36 (expr -> exprnoalg .)
  ! reduce/reduce conflict for RBRACE resolved using rule 36 (expr -> exprnoalg .)
  ! reduce/reduce conflict for QUESTION resolved using rule 36 (expr -> exprnoalg .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 36 (expr -> exprnoalg .)
  ! reduce/reduce conflict for COMMA resolved using rule 36 (expr -> exprnoalg .)
  ! reduce/reduce conflict for RPAREN resolved using rule 36 (expr -> exprnoalg .)
  ! reduce/reduce conflict for COLON resolved using rule 36 (expr -> exprnoalg .)
    COLON           reduce using rule 36 (expr -> exprnoalg .)
    LBRACKET        reduce using rule 36 (expr -> exprnoalg .)
    QUESTION        reduce using rule 36 (expr -> exprnoalg .)
    RBRACE          reduce using rule 36 (expr -> exprnoalg .)
    DIVIDER         reduce using rule 36 (expr -> exprnoalg .)
    RBRACKET        reduce using rule 36 (expr -> exprnoalg .)
    $end            reduce using rule 36 (expr -> exprnoalg .)
    COMMA           reduce using rule 36 (expr -> exprnoalg .)
    RPAREN          reduce using rule 36 (expr -> exprnoalg .)
    DPROD           reduce using rule 78 (alg3 -> exprnoalg .)
    DIVMUL          reduce using rule 78 (alg3 -> exprnoalg .)
    PLUSMINUS       reduce using rule 78 (alg3 -> exprnoalg .)

  ! LBRACKET        [ reduce using rule 78 (alg3 -> exprnoalg .) ]
  ! DIVIDER         [ reduce using rule 78 (alg3 -> exprnoalg .) ]
  ! $end            [ reduce using rule 78 (alg3 -> exprnoalg .) ]
  ! RBRACE          [ reduce using rule 78 (alg3 -> exprnoalg .) ]
  ! QUESTION        [ reduce using rule 78 (alg3 -> exprnoalg .) ]
  ! RBRACKET        [ reduce using rule 78 (alg3 -> exprnoalg .) ]
  ! COMMA           [ reduce using rule 78 (alg3 -> exprnoalg .) ]
  ! RPAREN          [ reduce using rule 78 (alg3 -> exprnoalg .) ]
  ! COLON           [ reduce using rule 78 (alg3 -> exprnoalg .) ]


state 47

    (58) term -> var .

    LBRACKET        reduce using rule 58 (term -> var .)
    DIVIDER         reduce using rule 58 (term -> var .)
    $end            reduce using rule 58 (term -> var .)
    RBRACE          reduce using rule 58 (term -> var .)
    DPROD           reduce using rule 58 (term -> var .)
    DIVMUL          reduce using rule 58 (term -> var .)
    PLUSMINUS       reduce using rule 58 (term -> var .)
    QUESTION        reduce using rule 58 (term -> var .)
    RBRACKET        reduce using rule 58 (term -> var .)
    COMMA           reduce using rule 58 (term -> var .)
    RPAREN          reduce using rule 58 (term -> var .)
    COLON           reduce using rule 58 (term -> var .)


state 48

    (37) expr -> alg0 .
    (72) alg0 -> alg0 . PLUSMINUS alg1

    COLON           reduce using rule 37 (expr -> alg0 .)
    LBRACKET        reduce using rule 37 (expr -> alg0 .)
    QUESTION        reduce using rule 37 (expr -> alg0 .)
    RBRACE          reduce using rule 37 (expr -> alg0 .)
    DIVIDER         reduce using rule 37 (expr -> alg0 .)
    RBRACKET        reduce using rule 37 (expr -> alg0 .)
    $end            reduce using rule 37 (expr -> alg0 .)
    COMMA           reduce using rule 37 (expr -> alg0 .)
    RPAREN          reduce using rule 37 (expr -> alg0 .)
    PLUSMINUS       shift and go to state 83


state 49

    (54) return -> RETURN . expr
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    WORD            shift and go to state 63
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    print                          shift and go to state 9
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    str                            shift and go to state 27
    element                        shift and go to state 44
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 84
    variables                      shift and go to state 25
    execfile                       shift and go to state 51
    alg1                           shift and go to state 54
    func                           shift and go to state 39
    input                          shift and go to state 43
    yield                          shift and go to state 58

state 50

    (28) list -> LBRACKET . comms RBRACKET
    (29) list -> LBRACKET . RBRACKET
    (33) comms -> . expr
    (34) comms -> . comms COMMA expr
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    RBRACKET        shift and go to state 87
    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    WORD            shift and go to state 63
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    print                          shift and go to state 9
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    input                          shift and go to state 43
    element                        shift and go to state 44
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 85
    variables                      shift and go to state 25
    execfile                       shift and go to state 51
    comms                          shift and go to state 86
    alg1                           shift and go to state 54
    func                           shift and go to state 39
    str                            shift and go to state 27
    yield                          shift and go to state 58

state 51

    (41) expr -> execfile .

    COLON           reduce using rule 41 (expr -> execfile .)
    LBRACKET        reduce using rule 41 (expr -> execfile .)
    QUESTION        reduce using rule 41 (expr -> execfile .)
    RBRACE          reduce using rule 41 (expr -> execfile .)
    DIVIDER         reduce using rule 41 (expr -> execfile .)
    RBRACKET        reduce using rule 41 (expr -> execfile .)
    $end            reduce using rule 41 (expr -> execfile .)
    COMMA           reduce using rule 41 (expr -> execfile .)
    RPAREN          reduce using rule 41 (expr -> execfile .)


state 52

    (74) alg1 -> alg2 .
    (77) alg2 -> alg2 . DPROD alg3

    DIVMUL          reduce using rule 74 (alg1 -> alg2 .)
    PLUSMINUS       reduce using rule 74 (alg1 -> alg2 .)
    LBRACKET        reduce using rule 74 (alg1 -> alg2 .)
    DIVIDER         reduce using rule 74 (alg1 -> alg2 .)
    $end            reduce using rule 74 (alg1 -> alg2 .)
    RBRACKET        reduce using rule 74 (alg1 -> alg2 .)
    COMMA           reduce using rule 74 (alg1 -> alg2 .)
    RPAREN          reduce using rule 74 (alg1 -> alg2 .)
    RBRACE          reduce using rule 74 (alg1 -> alg2 .)
    COLON           reduce using rule 74 (alg1 -> alg2 .)
    QUESTION        reduce using rule 74 (alg1 -> alg2 .)
    DPROD           shift and go to state 88


state 53

    (53) exprnoalg -> list .

    LBRACKET        reduce using rule 53 (exprnoalg -> list .)
    DIVIDER         reduce using rule 53 (exprnoalg -> list .)
    $end            reduce using rule 53 (exprnoalg -> list .)
    RBRACE          reduce using rule 53 (exprnoalg -> list .)
    QUESTION        reduce using rule 53 (exprnoalg -> list .)
    RBRACKET        reduce using rule 53 (exprnoalg -> list .)
    COMMA           reduce using rule 53 (exprnoalg -> list .)
    RPAREN          reduce using rule 53 (exprnoalg -> list .)
    COLON           reduce using rule 53 (exprnoalg -> list .)
    DPROD           reduce using rule 53 (exprnoalg -> list .)
    DIVMUL          reduce using rule 53 (exprnoalg -> list .)
    PLUSMINUS       reduce using rule 53 (exprnoalg -> list .)


state 54

    (71) alg0 -> alg1 .
    (75) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 71 (alg0 -> alg1 .)
    LBRACKET        reduce using rule 71 (alg0 -> alg1 .)
    DIVIDER         reduce using rule 71 (alg0 -> alg1 .)
    $end            reduce using rule 71 (alg0 -> alg1 .)
    RBRACE          reduce using rule 71 (alg0 -> alg1 .)
    QUESTION        reduce using rule 71 (alg0 -> alg1 .)
    RBRACKET        reduce using rule 71 (alg0 -> alg1 .)
    COMMA           reduce using rule 71 (alg0 -> alg1 .)
    RPAREN          reduce using rule 71 (alg0 -> alg1 .)
    COLON           reduce using rule 71 (alg0 -> alg1 .)
    DIVMUL          shift and go to state 89


state 55

    (23) metaexpr -> application .

    DIVIDER         reduce using rule 23 (metaexpr -> application .)
    $end            reduce using rule 23 (metaexpr -> application .)
    RBRACE          reduce using rule 23 (metaexpr -> application .)


state 56

    (30) break -> BREAK .

    LBRACKET        reduce using rule 30 (break -> BREAK .)
    DIVIDER         reduce using rule 30 (break -> BREAK .)
    $end            reduce using rule 30 (break -> BREAK .)
    RBRACE          reduce using rule 30 (break -> BREAK .)
    QUESTION        reduce using rule 30 (break -> BREAK .)
    RBRACKET        reduce using rule 30 (break -> BREAK .)
    COMMA           reduce using rule 30 (break -> BREAK .)
    RPAREN          reduce using rule 30 (break -> BREAK .)
    COLON           reduce using rule 30 (break -> BREAK .)


state 57

    (9) print -> PRINT . expr
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    WORD            shift and go to state 63
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    print                          shift and go to state 9
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    str                            shift and go to state 27
    element                        shift and go to state 44
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 90
    variables                      shift and go to state 25
    execfile                       shift and go to state 51
    alg1                           shift and go to state 54
    func                           shift and go to state 39
    input                          shift and go to state 43
    yield                          shift and go to state 58

state 58

    (46) expr -> yield .

    COLON           reduce using rule 46 (expr -> yield .)
    LBRACKET        reduce using rule 46 (expr -> yield .)
    QUESTION        reduce using rule 46 (expr -> yield .)
    RBRACE          reduce using rule 46 (expr -> yield .)
    DIVIDER         reduce using rule 46 (expr -> yield .)
    RBRACKET        reduce using rule 46 (expr -> yield .)
    $end            reduce using rule 46 (expr -> yield .)
    COMMA           reduce using rule 46 (expr -> yield .)
    RPAREN          reduce using rule 46 (expr -> yield .)


state 59

    (65) yield -> YIELD .

    RBRACKET        reduce using rule 65 (yield -> YIELD .)
    LBRACKET        reduce using rule 65 (yield -> YIELD .)
    COMMA           reduce using rule 65 (yield -> YIELD .)
    RPAREN          reduce using rule 65 (yield -> YIELD .)
    DIVIDER         reduce using rule 65 (yield -> YIELD .)
    $end            reduce using rule 65 (yield -> YIELD .)
    QUESTION        reduce using rule 65 (yield -> YIELD .)
    RBRACE          reduce using rule 65 (yield -> YIELD .)
    COLON           reduce using rule 65 (yield -> YIELD .)


state 60

    (17) input -> INPUT .

    COLON           reduce using rule 17 (input -> INPUT .)
    LBRACKET        reduce using rule 17 (input -> INPUT .)
    RBRACKET        reduce using rule 17 (input -> INPUT .)
    COMMA           reduce using rule 17 (input -> INPUT .)
    RBRACE          reduce using rule 17 (input -> INPUT .)
    DIVIDER         reduce using rule 17 (input -> INPUT .)
    $end            reduce using rule 17 (input -> INPUT .)
    QUESTION        reduce using rule 17 (input -> INPUT .)
    RPAREN          reduce using rule 17 (input -> INPUT .)


state 61

    (68) element -> expr LBRACKET . expr RBRACKET
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    WORD            shift and go to state 63
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    print                          shift and go to state 9
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    str                            shift and go to state 27
    element                        shift and go to state 44
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 91
    variables                      shift and go to state 25
    execfile                       shift and go to state 51
    alg1                           shift and go to state 54
    func                           shift and go to state 39
    input                          shift and go to state 43
    yield                          shift and go to state 58

state 62

    (70) variables -> VARIABLES expr .
    (68) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 70 (variables -> VARIABLES expr .)
    $end            reduce using rule 70 (variables -> VARIABLES expr .)
    RBRACE          reduce using rule 70 (variables -> VARIABLES expr .)
    COLON           reduce using rule 70 (variables -> VARIABLES expr .)
    QUESTION        reduce using rule 70 (variables -> VARIABLES expr .)
    RBRACKET        reduce using rule 70 (variables -> VARIABLES expr .)
    COMMA           reduce using rule 70 (variables -> VARIABLES expr .)
    RPAREN          reduce using rule 70 (variables -> VARIABLES expr .)
    LBRACKET        shift and go to state 61

  ! LBRACKET        [ reduce using rule 70 (variables -> VARIABLES expr .) ]


state 63

    (35) equal -> WORD . EQUALS expr
    (18) func -> WORD . LPAREN args RPAREN
    (19) func -> WORD . LPAREN args RPAREN block
    (69) var -> WORD .

    EQUALS          shift and go to state 74
    LPAREN          shift and go to state 76
    LBRACKET        reduce using rule 69 (var -> WORD .)
    DIVIDER         reduce using rule 69 (var -> WORD .)
    $end            reduce using rule 69 (var -> WORD .)
    RBRACE          reduce using rule 69 (var -> WORD .)
    QUESTION        reduce using rule 69 (var -> WORD .)
    RBRACKET        reduce using rule 69 (var -> WORD .)
    COMMA           reduce using rule 69 (var -> WORD .)
    RPAREN          reduce using rule 69 (var -> WORD .)
    COLON           reduce using rule 69 (var -> WORD .)
    DPROD           reduce using rule 69 (var -> WORD .)
    DIVMUL          reduce using rule 69 (var -> WORD .)
    PLUSMINUS       reduce using rule 69 (var -> WORD .)


state 64

    (78) alg3 -> exprnoalg .

    DPROD           reduce using rule 78 (alg3 -> exprnoalg .)
    DIVMUL          reduce using rule 78 (alg3 -> exprnoalg .)
    PLUSMINUS       reduce using rule 78 (alg3 -> exprnoalg .)
    LBRACKET        reduce using rule 78 (alg3 -> exprnoalg .)
    DIVIDER         reduce using rule 78 (alg3 -> exprnoalg .)
    $end            reduce using rule 78 (alg3 -> exprnoalg .)
    RBRACE          reduce using rule 78 (alg3 -> exprnoalg .)
    QUESTION        reduce using rule 78 (alg3 -> exprnoalg .)
    RBRACKET        reduce using rule 78 (alg3 -> exprnoalg .)
    COMMA           reduce using rule 78 (alg3 -> exprnoalg .)
    RPAREN          reduce using rule 78 (alg3 -> exprnoalg .)
    COLON           reduce using rule 78 (alg3 -> exprnoalg .)


state 65

    (18) func -> WORD . LPAREN args RPAREN
    (19) func -> WORD . LPAREN args RPAREN block
    (69) var -> WORD .

    LPAREN          shift and go to state 76
    DPROD           reduce using rule 69 (var -> WORD .)
    DIVMUL          reduce using rule 69 (var -> WORD .)
    PLUSMINUS       reduce using rule 69 (var -> WORD .)
    LBRACKET        reduce using rule 69 (var -> WORD .)
    DIVIDER         reduce using rule 69 (var -> WORD .)
    $end            reduce using rule 69 (var -> WORD .)
    RBRACE          reduce using rule 69 (var -> WORD .)
    QUESTION        reduce using rule 69 (var -> WORD .)
    RBRACKET        reduce using rule 69 (var -> WORD .)
    COMMA           reduce using rule 69 (var -> WORD .)
    RPAREN          reduce using rule 69 (var -> WORD .)
    COLON           reduce using rule 69 (var -> WORD .)


state 66

    (73) alg0 -> PLUSMINUS alg1 .
    (75) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 73 (alg0 -> PLUSMINUS alg1 .)
    LBRACKET        reduce using rule 73 (alg0 -> PLUSMINUS alg1 .)
    DIVIDER         reduce using rule 73 (alg0 -> PLUSMINUS alg1 .)
    $end            reduce using rule 73 (alg0 -> PLUSMINUS alg1 .)
    RBRACE          reduce using rule 73 (alg0 -> PLUSMINUS alg1 .)
    QUESTION        reduce using rule 73 (alg0 -> PLUSMINUS alg1 .)
    RBRACKET        reduce using rule 73 (alg0 -> PLUSMINUS alg1 .)
    COMMA           reduce using rule 73 (alg0 -> PLUSMINUS alg1 .)
    RPAREN          reduce using rule 73 (alg0 -> PLUSMINUS alg1 .)
    COLON           reduce using rule 73 (alg0 -> PLUSMINUS alg1 .)
    DIVMUL          shift and go to state 89


state 67

    (13) define -> DEFINE WORD . expr
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    WORD            shift and go to state 63
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    print                          shift and go to state 9
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    str                            shift and go to state 27
    element                        shift and go to state 44
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 92
    variables                      shift and go to state 25
    execfile                       shift and go to state 51
    alg1                           shift and go to state 54
    func                           shift and go to state 39
    input                          shift and go to state 43
    yield                          shift and go to state 58

state 68

    (62) exectext -> EXECTEXT str .

    LBRACKET        reduce using rule 62 (exectext -> EXECTEXT str .)
    DIVIDER         reduce using rule 62 (exectext -> EXECTEXT str .)
    $end            reduce using rule 62 (exectext -> EXECTEXT str .)
    RBRACE          reduce using rule 62 (exectext -> EXECTEXT str .)
    QUESTION        reduce using rule 62 (exectext -> EXECTEXT str .)
    RBRACKET        reduce using rule 62 (exectext -> EXECTEXT str .)
    COMMA           reduce using rule 62 (exectext -> EXECTEXT str .)
    RPAREN          reduce using rule 62 (exectext -> EXECTEXT str .)
    COLON           reduce using rule 62 (exectext -> EXECTEXT str .)


state 69

    (63) downlevel -> DOWNLEVEL expr .
    (68) element -> expr . LBRACKET expr RBRACKET

    RBRACE          reduce using rule 63 (downlevel -> DOWNLEVEL expr .)
    DIVIDER         reduce using rule 63 (downlevel -> DOWNLEVEL expr .)
    $end            reduce using rule 63 (downlevel -> DOWNLEVEL expr .)
    LBRACKET        shift and go to state 61


state 70

    (12) application -> APPLICATION WORD . COLON dblock

    COLON           shift and go to state 93


state 71

    (18) func -> WORD . LPAREN args RPAREN
    (19) func -> WORD . LPAREN args RPAREN block

    LPAREN          shift and go to state 76


state 72

    (11) deffunc -> DEFFUNC func . COLON dblock

    COLON           shift and go to state 94


state 73

    (10) module -> MODULE WORD . COLON dblock

    COLON           shift and go to state 95


state 74

    (35) equal -> WORD EQUALS . expr
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    WORD            shift and go to state 63
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    print                          shift and go to state 9
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    str                            shift and go to state 27
    element                        shift and go to state 44
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 96
    variables                      shift and go to state 25
    execfile                       shift and go to state 51
    alg1                           shift and go to state 54
    func                           shift and go to state 39
    input                          shift and go to state 43
    yield                          shift and go to state 58

state 75

    (14) declare -> WORD COLON . expr
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    WORD            shift and go to state 63
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    print                          shift and go to state 9
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    str                            shift and go to state 27
    element                        shift and go to state 44
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 97
    variables                      shift and go to state 25
    execfile                       shift and go to state 51
    alg1                           shift and go to state 54
    func                           shift and go to state 39
    input                          shift and go to state 43
    yield                          shift and go to state 58

state 76

    (18) func -> WORD LPAREN . args RPAREN
    (19) func -> WORD LPAREN . args RPAREN block
    (31) args -> .
    (32) args -> . comms
    (33) comms -> . expr
    (34) comms -> . comms COMMA expr
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    RPAREN          reduce using rule 31 (args -> .)
    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    WORD            shift and go to state 63
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    args                           shift and go to state 99
    print                          shift and go to state 9
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    input                          shift and go to state 43
    element                        shift and go to state 44
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 85
    variables                      shift and go to state 25
    execfile                       shift and go to state 51
    comms                          shift and go to state 98
    alg1                           shift and go to state 54
    func                           shift and go to state 39
    str                            shift and go to state 27
    yield                          shift and go to state 58

state 77

    (60) python -> PYTHON str .

    LBRACKET        reduce using rule 60 (python -> PYTHON str .)
    RBRACKET        reduce using rule 60 (python -> PYTHON str .)
    COMMA           reduce using rule 60 (python -> PYTHON str .)
    DIVIDER         reduce using rule 60 (python -> PYTHON str .)
    $end            reduce using rule 60 (python -> PYTHON str .)
    RBRACE          reduce using rule 60 (python -> PYTHON str .)
    COLON           reduce using rule 60 (python -> PYTHON str .)
    QUESTION        reduce using rule 60 (python -> PYTHON str .)
    RPAREN          reduce using rule 60 (python -> PYTHON str .)


state 78

    (6) inblock -> inblock divider . metaexpr
    (8) inblock -> inblock divider .
    (20) metaexpr -> . expr
    (21) metaexpr -> . deffunc
    (22) metaexpr -> . module
    (23) metaexpr -> . application
    (24) metaexpr -> . declare
    (25) metaexpr -> . define
    (26) metaexpr -> . downlevel
    (27) metaexpr -> . if
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (11) deffunc -> . DEFFUNC func COLON dblock
    (10) module -> . MODULE WORD COLON dblock
    (12) application -> . APPLICATION WORD COLON dblock
    (14) declare -> . WORD COLON expr
    (13) define -> . DEFINE WORD expr
    (63) downlevel -> . DOWNLEVEL expr
    (15) if -> . IF expr QUESTION expr COLON expr
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    DIVIDER         reduce using rule 8 (inblock -> inblock divider .)
    $end            reduce using rule 8 (inblock -> inblock divider .)
    RBRACE          reduce using rule 8 (inblock -> inblock divider .)
    DEFFUNC         shift and go to state 20
    MODULE          shift and go to state 21
    APPLICATION     shift and go to state 16
    WORD            shift and go to state 24
    DEFINE          shift and go to state 10
    DOWNLEVEL       shift and go to state 14
    IF              shift and go to state 41
    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    element                        shift and go to state 44
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    int                            shift and go to state 4
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    downlevel                      shift and go to state 26
    module                         shift and go to state 8
    define                         shift and go to state 35
    print                          shift and go to state 9
    var                            shift and go to state 47
    block                          shift and go to state 11
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    alg3                           shift and go to state 36
    input                          shift and go to state 43
    declare                        shift and go to state 30
    metaexpr                       shift and go to state 100
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 5
    variables                      shift and go to state 25
    deffunc                        shift and go to state 23
    execfile                       shift and go to state 51
    list                           shift and go to state 53
    alg1                           shift and go to state 54
    application                    shift and go to state 55
    func                           shift and go to state 39
    str                            shift and go to state 27
    yield                          shift and go to state 58
    if                             shift and go to state 29

state 79

    (3) block -> LBRACE inblock . RBRACE
    (6) inblock -> inblock . divider metaexpr
    (8) inblock -> inblock . divider
    (16) divider -> . DIVIDER

    RBRACE          shift and go to state 101
    DIVIDER         shift and go to state 40

    divider                        shift and go to state 78

state 80

    (15) if -> IF expr . QUESTION expr COLON expr
    (68) element -> expr . LBRACKET expr RBRACKET

    QUESTION        shift and go to state 102
    LBRACKET        shift and go to state 61


state 81

    (61) execfile -> EXECFILE str .

    LBRACKET        reduce using rule 61 (execfile -> EXECFILE str .)
    DIVIDER         reduce using rule 61 (execfile -> EXECFILE str .)
    $end            reduce using rule 61 (execfile -> EXECFILE str .)
    RBRACE          reduce using rule 61 (execfile -> EXECFILE str .)
    QUESTION        reduce using rule 61 (execfile -> EXECFILE str .)
    RBRACKET        reduce using rule 61 (execfile -> EXECFILE str .)
    COMMA           reduce using rule 61 (execfile -> EXECFILE str .)
    RPAREN          reduce using rule 61 (execfile -> EXECFILE str .)
    COLON           reduce using rule 61 (execfile -> EXECFILE str .)


state 82

    (7) inblock -> divider inblock .
    (6) inblock -> inblock . divider metaexpr
    (8) inblock -> inblock . divider
    (16) divider -> . DIVIDER

  ! shift/reduce conflict for DIVIDER resolved as shift
    $end            reduce using rule 7 (inblock -> divider inblock .)
    RBRACE          reduce using rule 7 (inblock -> divider inblock .)
    DIVIDER         shift and go to state 40

  ! DIVIDER         [ reduce using rule 7 (inblock -> divider inblock .) ]

    divider                        shift and go to state 78

state 83

    (72) alg0 -> alg0 PLUSMINUS . alg1
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD

    WORD            shift and go to state 65
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    exprnoalg                      shift and go to state 64
    alg2                           shift and go to state 52
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    alg1                           shift and go to state 103
    term                           shift and go to state 38
    func                           shift and go to state 39
    str                            shift and go to state 27

state 84

    (54) return -> RETURN expr .
    (68) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 54 (return -> RETURN expr .)
    $end            reduce using rule 54 (return -> RETURN expr .)
    RBRACE          reduce using rule 54 (return -> RETURN expr .)
    QUESTION        reduce using rule 54 (return -> RETURN expr .)
    RBRACKET        reduce using rule 54 (return -> RETURN expr .)
    COMMA           reduce using rule 54 (return -> RETURN expr .)
    RPAREN          reduce using rule 54 (return -> RETURN expr .)
    COLON           reduce using rule 54 (return -> RETURN expr .)
    LBRACKET        shift and go to state 61

  ! LBRACKET        [ reduce using rule 54 (return -> RETURN expr .) ]


state 85

    (33) comms -> expr .
    (68) element -> expr . LBRACKET expr RBRACKET

    RBRACKET        reduce using rule 33 (comms -> expr .)
    COMMA           reduce using rule 33 (comms -> expr .)
    RPAREN          reduce using rule 33 (comms -> expr .)
    LBRACKET        shift and go to state 61


state 86

    (28) list -> LBRACKET comms . RBRACKET
    (34) comms -> comms . COMMA expr

    RBRACKET        shift and go to state 105
    COMMA           shift and go to state 104


state 87

    (29) list -> LBRACKET RBRACKET .

    DPROD           reduce using rule 29 (list -> LBRACKET RBRACKET .)
    DIVMUL          reduce using rule 29 (list -> LBRACKET RBRACKET .)
    PLUSMINUS       reduce using rule 29 (list -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 29 (list -> LBRACKET RBRACKET .)
    DIVIDER         reduce using rule 29 (list -> LBRACKET RBRACKET .)
    $end            reduce using rule 29 (list -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 29 (list -> LBRACKET RBRACKET .)
    QUESTION        reduce using rule 29 (list -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 29 (list -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 29 (list -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 29 (list -> LBRACKET RBRACKET .)
    COLON           reduce using rule 29 (list -> LBRACKET RBRACKET .)


state 88

    (77) alg2 -> alg2 DPROD . alg3
    (78) alg3 -> . exprnoalg
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD

    WORD            shift and go to state 65
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    exprnoalg                      shift and go to state 64
    alg3                           shift and go to state 106
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    func                           shift and go to state 39
    str                            shift and go to state 27

state 89

    (75) alg1 -> alg1 DIVMUL . alg2
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD

    WORD            shift and go to state 65
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    exprnoalg                      shift and go to state 64
    alg2                           shift and go to state 107
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    func                           shift and go to state 39
    str                            shift and go to state 27

state 90

    (9) print -> PRINT expr .
    (68) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 9 (print -> PRINT expr .)
    $end            reduce using rule 9 (print -> PRINT expr .)
    RBRACE          reduce using rule 9 (print -> PRINT expr .)
    QUESTION        reduce using rule 9 (print -> PRINT expr .)
    RBRACKET        reduce using rule 9 (print -> PRINT expr .)
    COMMA           reduce using rule 9 (print -> PRINT expr .)
    RPAREN          reduce using rule 9 (print -> PRINT expr .)
    COLON           reduce using rule 9 (print -> PRINT expr .)
    LBRACKET        shift and go to state 61

  ! LBRACKET        [ reduce using rule 9 (print -> PRINT expr .) ]


state 91

    (68) element -> expr LBRACKET expr . RBRACKET
    (68) element -> expr . LBRACKET expr RBRACKET

    RBRACKET        shift and go to state 108
    LBRACKET        shift and go to state 61


state 92

    (13) define -> DEFINE WORD expr .
    (68) element -> expr . LBRACKET expr RBRACKET

    DIVIDER         reduce using rule 13 (define -> DEFINE WORD expr .)
    $end            reduce using rule 13 (define -> DEFINE WORD expr .)
    RBRACE          reduce using rule 13 (define -> DEFINE WORD expr .)
    LBRACKET        shift and go to state 61


state 93

    (12) application -> APPLICATION WORD COLON . dblock
    (1) dblock -> . block
    (2) dblock -> . divider block
    (3) block -> . LBRACE inblock RBRACE
    (16) divider -> . DIVIDER

    LBRACE          shift and go to state 37
    DIVIDER         shift and go to state 40

    block                          shift and go to state 109
    dblock                         shift and go to state 110
    divider                        shift and go to state 111

state 94

    (11) deffunc -> DEFFUNC func COLON . dblock
    (1) dblock -> . block
    (2) dblock -> . divider block
    (3) block -> . LBRACE inblock RBRACE
    (16) divider -> . DIVIDER

    LBRACE          shift and go to state 37
    DIVIDER         shift and go to state 40

    block                          shift and go to state 109
    dblock                         shift and go to state 112
    divider                        shift and go to state 111

state 95

    (10) module -> MODULE WORD COLON . dblock
    (1) dblock -> . block
    (2) dblock -> . divider block
    (3) block -> . LBRACE inblock RBRACE
    (16) divider -> . DIVIDER

    LBRACE          shift and go to state 37
    DIVIDER         shift and go to state 40

    block                          shift and go to state 109
    dblock                         shift and go to state 113
    divider                        shift and go to state 111

state 96

    (35) equal -> WORD EQUALS expr .
    (68) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 35 (equal -> WORD EQUALS expr .)
    $end            reduce using rule 35 (equal -> WORD EQUALS expr .)
    RBRACE          reduce using rule 35 (equal -> WORD EQUALS expr .)
    QUESTION        reduce using rule 35 (equal -> WORD EQUALS expr .)
    COLON           reduce using rule 35 (equal -> WORD EQUALS expr .)
    RBRACKET        reduce using rule 35 (equal -> WORD EQUALS expr .)
    COMMA           reduce using rule 35 (equal -> WORD EQUALS expr .)
    RPAREN          reduce using rule 35 (equal -> WORD EQUALS expr .)
    LBRACKET        shift and go to state 61

  ! LBRACKET        [ reduce using rule 35 (equal -> WORD EQUALS expr .) ]


state 97

    (14) declare -> WORD COLON expr .
    (68) element -> expr . LBRACKET expr RBRACKET

    DIVIDER         reduce using rule 14 (declare -> WORD COLON expr .)
    $end            reduce using rule 14 (declare -> WORD COLON expr .)
    RBRACE          reduce using rule 14 (declare -> WORD COLON expr .)
    LBRACKET        shift and go to state 61


state 98

    (32) args -> comms .
    (34) comms -> comms . COMMA expr

    RPAREN          reduce using rule 32 (args -> comms .)
    COMMA           shift and go to state 104


state 99

    (18) func -> WORD LPAREN args . RPAREN
    (19) func -> WORD LPAREN args . RPAREN block

    RPAREN          shift and go to state 114


state 100

    (6) inblock -> inblock divider metaexpr .

    DIVIDER         reduce using rule 6 (inblock -> inblock divider metaexpr .)
    $end            reduce using rule 6 (inblock -> inblock divider metaexpr .)
    RBRACE          reduce using rule 6 (inblock -> inblock divider metaexpr .)


state 101

    (3) block -> LBRACE inblock RBRACE .

    LBRACKET        reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    DIVIDER         reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    $end            reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    RBRACE          reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    QUESTION        reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    RBRACKET        reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    COMMA           reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    RPAREN          reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    COLON           reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    DPROD           reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    DIVMUL          reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    PLUSMINUS       reduce using rule 3 (block -> LBRACE inblock RBRACE .)


state 102

    (15) if -> IF expr QUESTION . expr COLON expr
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    WORD            shift and go to state 63
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    print                          shift and go to state 9
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    str                            shift and go to state 27
    element                        shift and go to state 44
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 115
    variables                      shift and go to state 25
    execfile                       shift and go to state 51
    alg1                           shift and go to state 54
    func                           shift and go to state 39
    input                          shift and go to state 43
    yield                          shift and go to state 58

state 103

    (72) alg0 -> alg0 PLUSMINUS alg1 .
    (75) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 72 (alg0 -> alg0 PLUSMINUS alg1 .)
    LBRACKET        reduce using rule 72 (alg0 -> alg0 PLUSMINUS alg1 .)
    DIVIDER         reduce using rule 72 (alg0 -> alg0 PLUSMINUS alg1 .)
    $end            reduce using rule 72 (alg0 -> alg0 PLUSMINUS alg1 .)
    RBRACE          reduce using rule 72 (alg0 -> alg0 PLUSMINUS alg1 .)
    QUESTION        reduce using rule 72 (alg0 -> alg0 PLUSMINUS alg1 .)
    RBRACKET        reduce using rule 72 (alg0 -> alg0 PLUSMINUS alg1 .)
    COMMA           reduce using rule 72 (alg0 -> alg0 PLUSMINUS alg1 .)
    RPAREN          reduce using rule 72 (alg0 -> alg0 PLUSMINUS alg1 .)
    COLON           reduce using rule 72 (alg0 -> alg0 PLUSMINUS alg1 .)
    DIVMUL          shift and go to state 89


state 104

    (34) comms -> comms COMMA . expr
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    WORD            shift and go to state 63
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    print                          shift and go to state 9
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    input                          shift and go to state 43
    element                        shift and go to state 44
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 116
    variables                      shift and go to state 25
    execfile                       shift and go to state 51
    alg1                           shift and go to state 54
    func                           shift and go to state 39
    str                            shift and go to state 27
    yield                          shift and go to state 58

state 105

    (28) list -> LBRACKET comms RBRACKET .

    DPROD           reduce using rule 28 (list -> LBRACKET comms RBRACKET .)
    DIVMUL          reduce using rule 28 (list -> LBRACKET comms RBRACKET .)
    PLUSMINUS       reduce using rule 28 (list -> LBRACKET comms RBRACKET .)
    LBRACKET        reduce using rule 28 (list -> LBRACKET comms RBRACKET .)
    DIVIDER         reduce using rule 28 (list -> LBRACKET comms RBRACKET .)
    $end            reduce using rule 28 (list -> LBRACKET comms RBRACKET .)
    RBRACE          reduce using rule 28 (list -> LBRACKET comms RBRACKET .)
    QUESTION        reduce using rule 28 (list -> LBRACKET comms RBRACKET .)
    RBRACKET        reduce using rule 28 (list -> LBRACKET comms RBRACKET .)
    COMMA           reduce using rule 28 (list -> LBRACKET comms RBRACKET .)
    RPAREN          reduce using rule 28 (list -> LBRACKET comms RBRACKET .)
    COLON           reduce using rule 28 (list -> LBRACKET comms RBRACKET .)


state 106

    (77) alg2 -> alg2 DPROD alg3 .

    DPROD           reduce using rule 77 (alg2 -> alg2 DPROD alg3 .)
    DIVMUL          reduce using rule 77 (alg2 -> alg2 DPROD alg3 .)
    PLUSMINUS       reduce using rule 77 (alg2 -> alg2 DPROD alg3 .)
    LBRACKET        reduce using rule 77 (alg2 -> alg2 DPROD alg3 .)
    COMMA           reduce using rule 77 (alg2 -> alg2 DPROD alg3 .)
    RPAREN          reduce using rule 77 (alg2 -> alg2 DPROD alg3 .)
    RBRACKET        reduce using rule 77 (alg2 -> alg2 DPROD alg3 .)
    DIVIDER         reduce using rule 77 (alg2 -> alg2 DPROD alg3 .)
    $end            reduce using rule 77 (alg2 -> alg2 DPROD alg3 .)
    RBRACE          reduce using rule 77 (alg2 -> alg2 DPROD alg3 .)
    QUESTION        reduce using rule 77 (alg2 -> alg2 DPROD alg3 .)
    COLON           reduce using rule 77 (alg2 -> alg2 DPROD alg3 .)


state 107

    (75) alg1 -> alg1 DIVMUL alg2 .
    (77) alg2 -> alg2 . DPROD alg3

    DIVMUL          reduce using rule 75 (alg1 -> alg1 DIVMUL alg2 .)
    PLUSMINUS       reduce using rule 75 (alg1 -> alg1 DIVMUL alg2 .)
    LBRACKET        reduce using rule 75 (alg1 -> alg1 DIVMUL alg2 .)
    DIVIDER         reduce using rule 75 (alg1 -> alg1 DIVMUL alg2 .)
    $end            reduce using rule 75 (alg1 -> alg1 DIVMUL alg2 .)
    RBRACKET        reduce using rule 75 (alg1 -> alg1 DIVMUL alg2 .)
    COMMA           reduce using rule 75 (alg1 -> alg1 DIVMUL alg2 .)
    RPAREN          reduce using rule 75 (alg1 -> alg1 DIVMUL alg2 .)
    RBRACE          reduce using rule 75 (alg1 -> alg1 DIVMUL alg2 .)
    COLON           reduce using rule 75 (alg1 -> alg1 DIVMUL alg2 .)
    QUESTION        reduce using rule 75 (alg1 -> alg1 DIVMUL alg2 .)
    DPROD           shift and go to state 88


state 108

    (68) element -> expr LBRACKET expr RBRACKET .

    LBRACKET        reduce using rule 68 (element -> expr LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 68 (element -> expr LBRACKET expr RBRACKET .)
    COMMA           reduce using rule 68 (element -> expr LBRACKET expr RBRACKET .)
    DIVIDER         reduce using rule 68 (element -> expr LBRACKET expr RBRACKET .)
    $end            reduce using rule 68 (element -> expr LBRACKET expr RBRACKET .)
    RBRACE          reduce using rule 68 (element -> expr LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 68 (element -> expr LBRACKET expr RBRACKET .)
    QUESTION        reduce using rule 68 (element -> expr LBRACKET expr RBRACKET .)
    COLON           reduce using rule 68 (element -> expr LBRACKET expr RBRACKET .)


state 109

    (1) dblock -> block .

    DIVIDER         reduce using rule 1 (dblock -> block .)
    $end            reduce using rule 1 (dblock -> block .)
    RBRACE          reduce using rule 1 (dblock -> block .)


state 110

    (12) application -> APPLICATION WORD COLON dblock .

    DIVIDER         reduce using rule 12 (application -> APPLICATION WORD COLON dblock .)
    $end            reduce using rule 12 (application -> APPLICATION WORD COLON dblock .)
    RBRACE          reduce using rule 12 (application -> APPLICATION WORD COLON dblock .)


state 111

    (2) dblock -> divider . block
    (3) block -> . LBRACE inblock RBRACE

    LBRACE          shift and go to state 37

    block                          shift and go to state 117

state 112

    (11) deffunc -> DEFFUNC func COLON dblock .

    RBRACE          reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)
    DIVIDER         reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)
    $end            reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)


state 113

    (10) module -> MODULE WORD COLON dblock .

    RBRACE          reduce using rule 10 (module -> MODULE WORD COLON dblock .)
    DIVIDER         reduce using rule 10 (module -> MODULE WORD COLON dblock .)
    $end            reduce using rule 10 (module -> MODULE WORD COLON dblock .)


state 114

    (18) func -> WORD LPAREN args RPAREN .
    (19) func -> WORD LPAREN args RPAREN . block
    (3) block -> . LBRACE inblock RBRACE

    LBRACKET        reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    DIVIDER         reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    $end            reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    RBRACE          reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    QUESTION        reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    RBRACKET        reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    COMMA           reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    RPAREN          reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    COLON           reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    DPROD           reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    DIVMUL          reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    PLUSMINUS       reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    LBRACE          shift and go to state 37

    block                          shift and go to state 118

state 115

    (15) if -> IF expr QUESTION expr . COLON expr
    (68) element -> expr . LBRACKET expr RBRACKET

    COLON           shift and go to state 119
    LBRACKET        shift and go to state 61


state 116

    (34) comms -> comms COMMA expr .
    (68) element -> expr . LBRACKET expr RBRACKET

    RBRACKET        reduce using rule 34 (comms -> comms COMMA expr .)
    COMMA           reduce using rule 34 (comms -> comms COMMA expr .)
    RPAREN          reduce using rule 34 (comms -> comms COMMA expr .)
    LBRACKET        shift and go to state 61


state 117

    (2) dblock -> divider block .

    DIVIDER         reduce using rule 2 (dblock -> divider block .)
    $end            reduce using rule 2 (dblock -> divider block .)
    RBRACE          reduce using rule 2 (dblock -> divider block .)


state 118

    (19) func -> WORD LPAREN args RPAREN block .

    LBRACKET        reduce using rule 19 (func -> WORD LPAREN args RPAREN block .)
    DIVIDER         reduce using rule 19 (func -> WORD LPAREN args RPAREN block .)
    $end            reduce using rule 19 (func -> WORD LPAREN args RPAREN block .)
    RBRACE          reduce using rule 19 (func -> WORD LPAREN args RPAREN block .)
    QUESTION        reduce using rule 19 (func -> WORD LPAREN args RPAREN block .)
    RBRACKET        reduce using rule 19 (func -> WORD LPAREN args RPAREN block .)
    COMMA           reduce using rule 19 (func -> WORD LPAREN args RPAREN block .)
    RPAREN          reduce using rule 19 (func -> WORD LPAREN args RPAREN block .)
    COLON           reduce using rule 19 (func -> WORD LPAREN args RPAREN block .)
    DPROD           reduce using rule 19 (func -> WORD LPAREN args RPAREN block .)
    DIVMUL          reduce using rule 19 (func -> WORD LPAREN args RPAREN block .)
    PLUSMINUS       reduce using rule 19 (func -> WORD LPAREN args RPAREN block .)


state 119

    (15) if -> IF expr QUESTION expr COLON . expr
    (36) expr -> . exprnoalg
    (37) expr -> . alg0
    (38) expr -> . print
    (39) expr -> . variables
    (40) expr -> . python
    (41) expr -> . execfile
    (42) expr -> . break
    (43) expr -> . exectext
    (44) expr -> . equal
    (45) expr -> . element
    (46) expr -> . yield
    (47) expr -> . repeat
    (48) expr -> . return
    (49) expr -> . input
    (50) exprnoalg -> . term
    (51) exprnoalg -> . func
    (52) exprnoalg -> . block
    (53) exprnoalg -> . list
    (71) alg0 -> . alg1
    (72) alg0 -> . alg0 PLUSMINUS alg1
    (73) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (70) variables -> . VARIABLES expr
    (60) python -> . PYTHON str
    (61) execfile -> . EXECFILE str
    (30) break -> . BREAK
    (62) exectext -> . EXECTEXT str
    (35) equal -> . WORD EQUALS expr
    (68) element -> . expr LBRACKET expr RBRACKET
    (65) yield -> . YIELD
    (67) repeat -> . REPEAT
    (54) return -> . RETURN expr
    (17) input -> . INPUT
    (55) term -> . str
    (56) term -> . float
    (57) term -> . int
    (58) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (19) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (28) list -> . LBRACKET comms RBRACKET
    (29) list -> . LBRACKET RBRACKET
    (74) alg1 -> . alg2
    (75) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (64) float -> . FLOAT
    (59) int -> . NUMBER
    (69) var -> . WORD
    (76) alg2 -> . alg3
    (77) alg2 -> . alg2 DPROD alg3
    (78) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 7
    PRINT           shift and go to state 57
    VARIABLES       shift and go to state 6
    PYTHON          shift and go to state 28
    EXECFILE        shift and go to state 42
    BREAK           shift and go to state 56
    EXECTEXT        shift and go to state 12
    WORD            shift and go to state 63
    YIELD           shift and go to state 59
    REPEAT          shift and go to state 2
    RETURN          shift and go to state 49
    INPUT           shift and go to state 60
    LBRACE          shift and go to state 37
    LBRACKET        shift and go to state 50
    STRING          shift and go to state 17
    FLOAT           shift and go to state 18
    NUMBER          shift and go to state 19

    float                          shift and go to state 1
    int                            shift and go to state 4
    repeat                         shift and go to state 31
    python                         shift and go to state 3
    break                          shift and go to state 33
    return                         shift and go to state 34
    equal                          shift and go to state 22
    print                          shift and go to state 9
    alg3                           shift and go to state 36
    var                            shift and go to state 47
    block                          shift and go to state 11
    list                           shift and go to state 53
    term                           shift and go to state 38
    exectext                       shift and go to state 13
    str                            shift and go to state 27
    element                        shift and go to state 44
    exprnoalg                      shift and go to state 46
    alg2                           shift and go to state 52
    alg0                           shift and go to state 48
    expr                           shift and go to state 120
    variables                      shift and go to state 25
    execfile                       shift and go to state 51
    alg1                           shift and go to state 54
    func                           shift and go to state 39
    input                          shift and go to state 43
    yield                          shift and go to state 58

state 120

    (15) if -> IF expr QUESTION expr COLON expr .
    (68) element -> expr . LBRACKET expr RBRACKET

    DIVIDER         reduce using rule 15 (if -> IF expr QUESTION expr COLON expr .)
    $end            reduce using rule 15 (if -> IF expr QUESTION expr COLON expr .)
    RBRACE          reduce using rule 15 (if -> IF expr QUESTION expr COLON expr .)
    LBRACKET        shift and go to state 61

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DIVIDER in state 0 resolved as shift
WARNING: shift/reduce conflict for DIVIDER in state 37 resolved as shift
WARNING: shift/reduce conflict for DIVIDER in state 45 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDER in state 82 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 84 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 90 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 96 resolved as shift
WARNING: reduce/reduce conflict in state 46 resolved using rule (expr -> exprnoalg)
WARNING: rejected rule (alg3 -> exprnoalg) in state 46
