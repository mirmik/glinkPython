Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    SUPERWORD
    AMPERSAND
    MPROD
    DOUBLECOLON
    POINT
    IN
    BINNUMBER
    HEXNUMBER
    WRONGSTRING
    SEMI
    OR
    FOR

Grammar

Rule 0     S' -> inblock
Rule 1     dblock -> block
Rule 2     dblock -> divider block
Rule 3     block -> LBRACE inblock RBRACE
Rule 4     inblock -> <empty>
Rule 5     inblock -> metaexpr
Rule 6     inblock -> inblock divider metaexpr
Rule 7     inblock -> divider inblock
Rule 8     inblock -> inblock divider
Rule 9     print -> PRINT expr
Rule 10    module -> MODULE WORD COLON dblock
Rule 11    deffunc -> DEFFUNC func COLON dblock
Rule 12    application -> APPLICATION WORD COLON dblock
Rule 13    define -> DEFINE WORD expr
Rule 14    declare -> WORD COLON expr
Rule 15    if -> IF expr QUESTION expr COLON expr
Rule 16    divider -> DIVIDER
Rule 17    input -> INPUT
Rule 18    func -> WORD LPAREN args RPAREN
Rule 19    metaexpr -> expr
Rule 20    metaexpr -> deffunc
Rule 21    metaexpr -> module
Rule 22    metaexpr -> application
Rule 23    metaexpr -> declare
Rule 24    metaexpr -> define
Rule 25    metaexpr -> downlevel
Rule 26    metaexpr -> if
Rule 27    metaexpr -> while
Rule 28    metaexpr -> loop
Rule 29    metaexpr -> input
Rule 30    list -> LBRACKET comms RBRACKET
Rule 31    list -> LBRACKET RBRACKET
Rule 32    while -> WHILE expr COLON expr
Rule 33    loop -> LOOP COLON expr
Rule 34    break -> BREAK
Rule 35    args -> <empty>
Rule 36    args -> comms
Rule 37    comms -> expr
Rule 38    comms -> comms COMMA expr
Rule 39    equal -> WORD EQUALS expr
Rule 40    expr -> exprnoalg
Rule 41    expr -> alg0
Rule 42    expr -> print
Rule 43    expr -> variables
Rule 44    expr -> python
Rule 45    expr -> execfile
Rule 46    expr -> break
Rule 47    expr -> exectext
Rule 48    expr -> equal
Rule 49    expr -> element
Rule 50    expr -> return
Rule 51    exprnoalg -> term
Rule 52    exprnoalg -> func
Rule 53    exprnoalg -> block
Rule 54    exprnoalg -> list
Rule 55    return -> RETURN expr
Rule 56    term -> str
Rule 57    term -> float
Rule 58    term -> int
Rule 59    term -> var
Rule 60    int -> NUMBER
Rule 61    python -> PYTHON str
Rule 62    execfile -> EXECFILE str
Rule 63    exectext -> EXECTEXT str
Rule 64    downlevel -> DOWNLEVEL expr
Rule 65    float -> FLOAT
Rule 66    str -> STRING
Rule 67    element -> expr LBRACKET expr RBRACKET
Rule 68    var -> WORD
Rule 69    variables -> VARIABLES expr
Rule 70    alg0 -> alg1
Rule 71    alg0 -> alg0 PLUSMINUS alg1
Rule 72    alg0 -> PLUSMINUS alg1
Rule 73    alg1 -> alg2
Rule 74    alg1 -> alg1 DIVMUL alg2
Rule 75    alg2 -> alg3
Rule 76    alg2 -> alg2 DPROD alg3
Rule 77    alg3 -> exprnoalg

Terminals, with rules where they appear

AMPERSAND            : 
APPLICATION          : 12
BINNUMBER            : 
BREAK                : 34
COLON                : 10 11 12 14 15 32 33
COMMA                : 38
DEFFUNC              : 11
DEFINE               : 13
DIVIDER              : 16
DIVMUL               : 74
DOUBLECOLON          : 
DOWNLEVEL            : 64
DPROD                : 76
EQUALS               : 39
EXECFILE             : 62
EXECTEXT             : 63
FLOAT                : 65
FOR                  : 
HEXNUMBER            : 
IF                   : 15
IN                   : 
INPUT                : 17
LBRACE               : 3
LBRACKET             : 30 31 67
LOOP                 : 33
LPAREN               : 18
MODULE               : 10
MPROD                : 
NUMBER               : 60
OR                   : 
PLUSMINUS            : 71 72
POINT                : 
PRINT                : 9
PYTHON               : 61
QUESTION             : 15
RBRACE               : 3
RBRACKET             : 30 31 67
RETURN               : 55
RPAREN               : 18
SEMI                 : 
STRING               : 66
SUPERWORD            : 
VARIABLES            : 69
WHILE                : 32
WORD                 : 10 12 13 14 18 39 68
WRONGSTRING          : 
error                : 

Nonterminals, with rules where they appear

alg0                 : 41 71
alg1                 : 70 71 72 74
alg2                 : 73 74 76
alg3                 : 75 76
application          : 22
args                 : 18
block                : 1 2 53
break                : 46
comms                : 30 36 38
dblock               : 10 11 12
declare              : 23
deffunc              : 20
define               : 24
divider              : 2 6 7 8
downlevel            : 25
element              : 49
equal                : 48
execfile             : 45
exectext             : 47
expr                 : 9 13 14 15 15 15 19 32 32 33 37 38 39 55 64 67 67 69
exprnoalg            : 40 77
float                : 57
func                 : 11 52
if                   : 26
inblock              : 3 6 7 8 0
input                : 29
int                  : 58
list                 : 54
loop                 : 28
metaexpr             : 5 6
module               : 21
print                : 42
python               : 44
return               : 50
str                  : 56 61 62 63
term                 : 51
var                  : 59
variables            : 43
while                : 27

Parsing method: LALR

state 0

    (0) S' -> . inblock
    (4) inblock -> .
    (5) inblock -> . metaexpr
    (6) inblock -> . inblock divider metaexpr
    (7) inblock -> . divider inblock
    (8) inblock -> . inblock divider
    (19) metaexpr -> . expr
    (20) metaexpr -> . deffunc
    (21) metaexpr -> . module
    (22) metaexpr -> . application
    (23) metaexpr -> . declare
    (24) metaexpr -> . define
    (25) metaexpr -> . downlevel
    (26) metaexpr -> . if
    (27) metaexpr -> . while
    (28) metaexpr -> . loop
    (29) metaexpr -> . input
    (16) divider -> . DIVIDER
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (11) deffunc -> . DEFFUNC func COLON dblock
    (10) module -> . MODULE WORD COLON dblock
    (12) application -> . APPLICATION WORD COLON dblock
    (14) declare -> . WORD COLON expr
    (13) define -> . DEFINE WORD expr
    (64) downlevel -> . DOWNLEVEL expr
    (15) if -> . IF expr QUESTION expr COLON expr
    (32) while -> . WHILE expr COLON expr
    (33) loop -> . LOOP COLON expr
    (17) input -> . INPUT
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

  ! shift/reduce conflict for DIVIDER resolved as shift
    $end            reduce using rule 4 (inblock -> .)
    DIVIDER         shift and go to state 5
    DEFFUNC         shift and go to state 21
    MODULE          shift and go to state 9
    APPLICATION     shift and go to state 26
    WORD            shift and go to state 34
    DEFINE          shift and go to state 45
    DOWNLEVEL       shift and go to state 41
    IF              shift and go to state 20
    WHILE           shift and go to state 10
    LOOP            shift and go to state 27
    INPUT           shift and go to state 59
    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

  ! DIVIDER         [ reduce using rule 4 (inblock -> .) ]

    downlevel                      shift and go to state 31
    list                           shift and go to state 32
    element                        shift and go to state 2
    term                           shift and go to state 19
    application                    shift and go to state 4
    input                          shift and go to state 6
    str                            shift and go to state 37
    print                          shift and go to state 38
    var                            shift and go to state 46
    block                          shift and go to state 35
    alg3                           shift and go to state 42
    loop                           shift and go to state 40
    while                          shift and go to state 8
    float                          shift and go to state 7
    func                           shift and go to state 3
    exectext                       shift and go to state 49
    alg0                           shift and go to state 11
    divider                        shift and go to state 43
    deffunc                        shift and go to state 15
    exprnoalg                      shift and go to state 16
    execfile                       shift and go to state 47
    expr                           shift and go to state 48
    alg2                           shift and go to state 18
    return                         shift and go to state 24
    inblock                        shift and go to state 54
    equal                          shift and go to state 50
    metaexpr                       shift and go to state 52
    define                         shift and go to state 53
    alg1                           shift and go to state 23
    if                             shift and go to state 29
    int                            shift and go to state 55
    module                         shift and go to state 25
    python                         shift and go to state 56
    declare                        shift and go to state 57
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 1

    (60) int -> NUMBER .

    LBRACKET        reduce using rule 60 (int -> NUMBER .)
    RBRACKET        reduce using rule 60 (int -> NUMBER .)
    COMMA           reduce using rule 60 (int -> NUMBER .)
    RPAREN          reduce using rule 60 (int -> NUMBER .)
    DPROD           reduce using rule 60 (int -> NUMBER .)
    DIVMUL          reduce using rule 60 (int -> NUMBER .)
    PLUSMINUS       reduce using rule 60 (int -> NUMBER .)
    DIVIDER         reduce using rule 60 (int -> NUMBER .)
    $end            reduce using rule 60 (int -> NUMBER .)
    COLON           reduce using rule 60 (int -> NUMBER .)
    QUESTION        reduce using rule 60 (int -> NUMBER .)
    RBRACE          reduce using rule 60 (int -> NUMBER .)


state 2

    (49) expr -> element .

    LBRACKET        reduce using rule 49 (expr -> element .)
    RBRACKET        reduce using rule 49 (expr -> element .)
    COMMA           reduce using rule 49 (expr -> element .)
    RPAREN          reduce using rule 49 (expr -> element .)
    COLON           reduce using rule 49 (expr -> element .)
    DIVIDER         reduce using rule 49 (expr -> element .)
    $end            reduce using rule 49 (expr -> element .)
    RBRACE          reduce using rule 49 (expr -> element .)
    QUESTION        reduce using rule 49 (expr -> element .)


state 3

    (52) exprnoalg -> func .

    DPROD           reduce using rule 52 (exprnoalg -> func .)
    DIVMUL          reduce using rule 52 (exprnoalg -> func .)
    PLUSMINUS       reduce using rule 52 (exprnoalg -> func .)
    LBRACKET        reduce using rule 52 (exprnoalg -> func .)
    DIVIDER         reduce using rule 52 (exprnoalg -> func .)
    $end            reduce using rule 52 (exprnoalg -> func .)
    COLON           reduce using rule 52 (exprnoalg -> func .)
    QUESTION        reduce using rule 52 (exprnoalg -> func .)
    RBRACKET        reduce using rule 52 (exprnoalg -> func .)
    COMMA           reduce using rule 52 (exprnoalg -> func .)
    RBRACE          reduce using rule 52 (exprnoalg -> func .)
    RPAREN          reduce using rule 52 (exprnoalg -> func .)


state 4

    (22) metaexpr -> application .

    RBRACE          reduce using rule 22 (metaexpr -> application .)
    DIVIDER         reduce using rule 22 (metaexpr -> application .)
    $end            reduce using rule 22 (metaexpr -> application .)


state 5

    (16) divider -> DIVIDER .

    DEFFUNC         reduce using rule 16 (divider -> DIVIDER .)
    MODULE          reduce using rule 16 (divider -> DIVIDER .)
    APPLICATION     reduce using rule 16 (divider -> DIVIDER .)
    WORD            reduce using rule 16 (divider -> DIVIDER .)
    DEFINE          reduce using rule 16 (divider -> DIVIDER .)
    DOWNLEVEL       reduce using rule 16 (divider -> DIVIDER .)
    IF              reduce using rule 16 (divider -> DIVIDER .)
    WHILE           reduce using rule 16 (divider -> DIVIDER .)
    LOOP            reduce using rule 16 (divider -> DIVIDER .)
    INPUT           reduce using rule 16 (divider -> DIVIDER .)
    PLUSMINUS       reduce using rule 16 (divider -> DIVIDER .)
    PRINT           reduce using rule 16 (divider -> DIVIDER .)
    VARIABLES       reduce using rule 16 (divider -> DIVIDER .)
    PYTHON          reduce using rule 16 (divider -> DIVIDER .)
    EXECFILE        reduce using rule 16 (divider -> DIVIDER .)
    BREAK           reduce using rule 16 (divider -> DIVIDER .)
    EXECTEXT        reduce using rule 16 (divider -> DIVIDER .)
    RETURN          reduce using rule 16 (divider -> DIVIDER .)
    LBRACE          reduce using rule 16 (divider -> DIVIDER .)
    LBRACKET        reduce using rule 16 (divider -> DIVIDER .)
    STRING          reduce using rule 16 (divider -> DIVIDER .)
    FLOAT           reduce using rule 16 (divider -> DIVIDER .)
    NUMBER          reduce using rule 16 (divider -> DIVIDER .)
    DIVIDER         reduce using rule 16 (divider -> DIVIDER .)
    $end            reduce using rule 16 (divider -> DIVIDER .)
    RBRACE          reduce using rule 16 (divider -> DIVIDER .)


state 6

    (29) metaexpr -> input .

    RBRACE          reduce using rule 29 (metaexpr -> input .)
    DIVIDER         reduce using rule 29 (metaexpr -> input .)
    $end            reduce using rule 29 (metaexpr -> input .)


state 7

    (57) term -> float .

    LBRACKET        reduce using rule 57 (term -> float .)
    DIVIDER         reduce using rule 57 (term -> float .)
    $end            reduce using rule 57 (term -> float .)
    COLON           reduce using rule 57 (term -> float .)
    QUESTION        reduce using rule 57 (term -> float .)
    RBRACKET        reduce using rule 57 (term -> float .)
    COMMA           reduce using rule 57 (term -> float .)
    RBRACE          reduce using rule 57 (term -> float .)
    RPAREN          reduce using rule 57 (term -> float .)
    DPROD           reduce using rule 57 (term -> float .)
    DIVMUL          reduce using rule 57 (term -> float .)
    PLUSMINUS       reduce using rule 57 (term -> float .)


state 8

    (27) metaexpr -> while .

    RBRACE          reduce using rule 27 (metaexpr -> while .)
    DIVIDER         reduce using rule 27 (metaexpr -> while .)
    $end            reduce using rule 27 (metaexpr -> while .)


state 9

    (10) module -> MODULE . WORD COLON dblock

    WORD            shift and go to state 61


state 10

    (32) while -> WHILE . expr COLON expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 63
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 11

    (41) expr -> alg0 .
    (71) alg0 -> alg0 . PLUSMINUS alg1

    LBRACKET        reduce using rule 41 (expr -> alg0 .)
    RBRACKET        reduce using rule 41 (expr -> alg0 .)
    COMMA           reduce using rule 41 (expr -> alg0 .)
    RPAREN          reduce using rule 41 (expr -> alg0 .)
    COLON           reduce using rule 41 (expr -> alg0 .)
    DIVIDER         reduce using rule 41 (expr -> alg0 .)
    $end            reduce using rule 41 (expr -> alg0 .)
    RBRACE          reduce using rule 41 (expr -> alg0 .)
    QUESTION        reduce using rule 41 (expr -> alg0 .)
    PLUSMINUS       shift and go to state 64


state 12

    (65) float -> FLOAT .

    LBRACKET        reduce using rule 65 (float -> FLOAT .)
    DIVIDER         reduce using rule 65 (float -> FLOAT .)
    $end            reduce using rule 65 (float -> FLOAT .)
    COLON           reduce using rule 65 (float -> FLOAT .)
    QUESTION        reduce using rule 65 (float -> FLOAT .)
    RBRACKET        reduce using rule 65 (float -> FLOAT .)
    COMMA           reduce using rule 65 (float -> FLOAT .)
    RBRACE          reduce using rule 65 (float -> FLOAT .)
    RPAREN          reduce using rule 65 (float -> FLOAT .)
    DPROD           reduce using rule 65 (float -> FLOAT .)
    DIVMUL          reduce using rule 65 (float -> FLOAT .)
    PLUSMINUS       reduce using rule 65 (float -> FLOAT .)


state 13

    (62) execfile -> EXECFILE . str
    (66) str -> . STRING

    STRING          shift and go to state 28

    str                            shift and go to state 65

state 14

    (69) variables -> VARIABLES . expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 66
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 15

    (20) metaexpr -> deffunc .

    RBRACE          reduce using rule 20 (metaexpr -> deffunc .)
    DIVIDER         reduce using rule 20 (metaexpr -> deffunc .)
    $end            reduce using rule 20 (metaexpr -> deffunc .)


state 16

    (40) expr -> exprnoalg .
    (77) alg3 -> exprnoalg .

  ! reduce/reduce conflict for LBRACKET resolved using rule 40 (expr -> exprnoalg .)
  ! reduce/reduce conflict for DIVIDER resolved using rule 40 (expr -> exprnoalg .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expr -> exprnoalg .)
  ! reduce/reduce conflict for RBRACE resolved using rule 40 (expr -> exprnoalg .)
  ! reduce/reduce conflict for COLON resolved using rule 40 (expr -> exprnoalg .)
  ! reduce/reduce conflict for QUESTION resolved using rule 40 (expr -> exprnoalg .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 40 (expr -> exprnoalg .)
  ! reduce/reduce conflict for COMMA resolved using rule 40 (expr -> exprnoalg .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (expr -> exprnoalg .)
    LBRACKET        reduce using rule 40 (expr -> exprnoalg .)
    RBRACKET        reduce using rule 40 (expr -> exprnoalg .)
    COMMA           reduce using rule 40 (expr -> exprnoalg .)
    RPAREN          reduce using rule 40 (expr -> exprnoalg .)
    COLON           reduce using rule 40 (expr -> exprnoalg .)
    DIVIDER         reduce using rule 40 (expr -> exprnoalg .)
    $end            reduce using rule 40 (expr -> exprnoalg .)
    RBRACE          reduce using rule 40 (expr -> exprnoalg .)
    QUESTION        reduce using rule 40 (expr -> exprnoalg .)
    DPROD           reduce using rule 77 (alg3 -> exprnoalg .)
    DIVMUL          reduce using rule 77 (alg3 -> exprnoalg .)
    PLUSMINUS       reduce using rule 77 (alg3 -> exprnoalg .)

  ! LBRACKET        [ reduce using rule 77 (alg3 -> exprnoalg .) ]
  ! DIVIDER         [ reduce using rule 77 (alg3 -> exprnoalg .) ]
  ! $end            [ reduce using rule 77 (alg3 -> exprnoalg .) ]
  ! RBRACE          [ reduce using rule 77 (alg3 -> exprnoalg .) ]
  ! COLON           [ reduce using rule 77 (alg3 -> exprnoalg .) ]
  ! QUESTION        [ reduce using rule 77 (alg3 -> exprnoalg .) ]
  ! RBRACKET        [ reduce using rule 77 (alg3 -> exprnoalg .) ]
  ! COMMA           [ reduce using rule 77 (alg3 -> exprnoalg .) ]
  ! RPAREN          [ reduce using rule 77 (alg3 -> exprnoalg .) ]


state 17

    (9) print -> PRINT . expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 67
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 18

    (73) alg1 -> alg2 .
    (76) alg2 -> alg2 . DPROD alg3

    DIVMUL          reduce using rule 73 (alg1 -> alg2 .)
    PLUSMINUS       reduce using rule 73 (alg1 -> alg2 .)
    LBRACKET        reduce using rule 73 (alg1 -> alg2 .)
    DIVIDER         reduce using rule 73 (alg1 -> alg2 .)
    $end            reduce using rule 73 (alg1 -> alg2 .)
    RBRACE          reduce using rule 73 (alg1 -> alg2 .)
    COLON           reduce using rule 73 (alg1 -> alg2 .)
    QUESTION        reduce using rule 73 (alg1 -> alg2 .)
    RBRACKET        reduce using rule 73 (alg1 -> alg2 .)
    COMMA           reduce using rule 73 (alg1 -> alg2 .)
    RPAREN          reduce using rule 73 (alg1 -> alg2 .)
    DPROD           shift and go to state 68


state 19

    (51) exprnoalg -> term .

    DPROD           reduce using rule 51 (exprnoalg -> term .)
    DIVMUL          reduce using rule 51 (exprnoalg -> term .)
    PLUSMINUS       reduce using rule 51 (exprnoalg -> term .)
    LBRACKET        reduce using rule 51 (exprnoalg -> term .)
    DIVIDER         reduce using rule 51 (exprnoalg -> term .)
    $end            reduce using rule 51 (exprnoalg -> term .)
    COLON           reduce using rule 51 (exprnoalg -> term .)
    QUESTION        reduce using rule 51 (exprnoalg -> term .)
    RBRACKET        reduce using rule 51 (exprnoalg -> term .)
    COMMA           reduce using rule 51 (exprnoalg -> term .)
    RBRACE          reduce using rule 51 (exprnoalg -> term .)
    RPAREN          reduce using rule 51 (exprnoalg -> term .)


state 20

    (15) if -> IF . expr QUESTION expr COLON expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 69
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 21

    (11) deffunc -> DEFFUNC . func COLON dblock
    (18) func -> . WORD LPAREN args RPAREN

    WORD            shift and go to state 70

    func                           shift and go to state 71

state 22

    (30) list -> LBRACKET . comms RBRACKET
    (31) list -> LBRACKET . RBRACKET
    (37) comms -> . expr
    (38) comms -> . comms COMMA expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    RBRACKET        shift and go to state 72
    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 74
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    comms                          shift and go to state 73
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 23

    (70) alg0 -> alg1 .
    (74) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 70 (alg0 -> alg1 .)
    RBRACKET        reduce using rule 70 (alg0 -> alg1 .)
    LBRACKET        reduce using rule 70 (alg0 -> alg1 .)
    DIVIDER         reduce using rule 70 (alg0 -> alg1 .)
    $end            reduce using rule 70 (alg0 -> alg1 .)
    RBRACE          reduce using rule 70 (alg0 -> alg1 .)
    COLON           reduce using rule 70 (alg0 -> alg1 .)
    QUESTION        reduce using rule 70 (alg0 -> alg1 .)
    COMMA           reduce using rule 70 (alg0 -> alg1 .)
    RPAREN          reduce using rule 70 (alg0 -> alg1 .)
    DIVMUL          shift and go to state 75


state 24

    (50) expr -> return .

    LBRACKET        reduce using rule 50 (expr -> return .)
    RBRACKET        reduce using rule 50 (expr -> return .)
    COMMA           reduce using rule 50 (expr -> return .)
    RPAREN          reduce using rule 50 (expr -> return .)
    COLON           reduce using rule 50 (expr -> return .)
    DIVIDER         reduce using rule 50 (expr -> return .)
    $end            reduce using rule 50 (expr -> return .)
    RBRACE          reduce using rule 50 (expr -> return .)
    QUESTION        reduce using rule 50 (expr -> return .)


state 25

    (21) metaexpr -> module .

    RBRACE          reduce using rule 21 (metaexpr -> module .)
    DIVIDER         reduce using rule 21 (metaexpr -> module .)
    $end            reduce using rule 21 (metaexpr -> module .)


state 26

    (12) application -> APPLICATION . WORD COLON dblock

    WORD            shift and go to state 76


state 27

    (33) loop -> LOOP . COLON expr

    COLON           shift and go to state 77


state 28

    (66) str -> STRING .

    LBRACKET        reduce using rule 66 (str -> STRING .)
    RBRACE          reduce using rule 66 (str -> STRING .)
    DIVIDER         reduce using rule 66 (str -> STRING .)
    DPROD           reduce using rule 66 (str -> STRING .)
    DIVMUL          reduce using rule 66 (str -> STRING .)
    PLUSMINUS       reduce using rule 66 (str -> STRING .)
    RBRACKET        reduce using rule 66 (str -> STRING .)
    COMMA           reduce using rule 66 (str -> STRING .)
    RPAREN          reduce using rule 66 (str -> STRING .)
    $end            reduce using rule 66 (str -> STRING .)
    COLON           reduce using rule 66 (str -> STRING .)
    QUESTION        reduce using rule 66 (str -> STRING .)


state 29

    (26) metaexpr -> if .

    RBRACE          reduce using rule 26 (metaexpr -> if .)
    DIVIDER         reduce using rule 26 (metaexpr -> if .)
    $end            reduce using rule 26 (metaexpr -> if .)


state 30

    (46) expr -> break .

    LBRACKET        reduce using rule 46 (expr -> break .)
    RBRACKET        reduce using rule 46 (expr -> break .)
    COMMA           reduce using rule 46 (expr -> break .)
    RPAREN          reduce using rule 46 (expr -> break .)
    COLON           reduce using rule 46 (expr -> break .)
    DIVIDER         reduce using rule 46 (expr -> break .)
    $end            reduce using rule 46 (expr -> break .)
    RBRACE          reduce using rule 46 (expr -> break .)
    QUESTION        reduce using rule 46 (expr -> break .)


state 31

    (25) metaexpr -> downlevel .

    RBRACE          reduce using rule 25 (metaexpr -> downlevel .)
    DIVIDER         reduce using rule 25 (metaexpr -> downlevel .)
    $end            reduce using rule 25 (metaexpr -> downlevel .)


state 32

    (54) exprnoalg -> list .

    DPROD           reduce using rule 54 (exprnoalg -> list .)
    DIVMUL          reduce using rule 54 (exprnoalg -> list .)
    PLUSMINUS       reduce using rule 54 (exprnoalg -> list .)
    LBRACKET        reduce using rule 54 (exprnoalg -> list .)
    DIVIDER         reduce using rule 54 (exprnoalg -> list .)
    $end            reduce using rule 54 (exprnoalg -> list .)
    COLON           reduce using rule 54 (exprnoalg -> list .)
    QUESTION        reduce using rule 54 (exprnoalg -> list .)
    RBRACKET        reduce using rule 54 (exprnoalg -> list .)
    COMMA           reduce using rule 54 (exprnoalg -> list .)
    RBRACE          reduce using rule 54 (exprnoalg -> list .)
    RPAREN          reduce using rule 54 (exprnoalg -> list .)


state 33

    (63) exectext -> EXECTEXT . str
    (66) str -> . STRING

    STRING          shift and go to state 28

    str                            shift and go to state 78

state 34

    (14) declare -> WORD . COLON expr
    (39) equal -> WORD . EQUALS expr
    (18) func -> WORD . LPAREN args RPAREN
    (68) var -> WORD .

    COLON           shift and go to state 79
    EQUALS          shift and go to state 81
    LPAREN          shift and go to state 80
    LBRACKET        reduce using rule 68 (var -> WORD .)
    DIVIDER         reduce using rule 68 (var -> WORD .)
    $end            reduce using rule 68 (var -> WORD .)
    RBRACE          reduce using rule 68 (var -> WORD .)
    DPROD           reduce using rule 68 (var -> WORD .)
    DIVMUL          reduce using rule 68 (var -> WORD .)
    PLUSMINUS       reduce using rule 68 (var -> WORD .)


state 35

    (53) exprnoalg -> block .

    DPROD           reduce using rule 53 (exprnoalg -> block .)
    DIVMUL          reduce using rule 53 (exprnoalg -> block .)
    PLUSMINUS       reduce using rule 53 (exprnoalg -> block .)
    LBRACKET        reduce using rule 53 (exprnoalg -> block .)
    DIVIDER         reduce using rule 53 (exprnoalg -> block .)
    $end            reduce using rule 53 (exprnoalg -> block .)
    COLON           reduce using rule 53 (exprnoalg -> block .)
    QUESTION        reduce using rule 53 (exprnoalg -> block .)
    RBRACKET        reduce using rule 53 (exprnoalg -> block .)
    COMMA           reduce using rule 53 (exprnoalg -> block .)
    RBRACE          reduce using rule 53 (exprnoalg -> block .)
    RPAREN          reduce using rule 53 (exprnoalg -> block .)


state 36

    (61) python -> PYTHON . str
    (66) str -> . STRING

    STRING          shift and go to state 28

    str                            shift and go to state 82

state 37

    (56) term -> str .

    LBRACKET        reduce using rule 56 (term -> str .)
    DIVIDER         reduce using rule 56 (term -> str .)
    $end            reduce using rule 56 (term -> str .)
    COLON           reduce using rule 56 (term -> str .)
    QUESTION        reduce using rule 56 (term -> str .)
    RBRACKET        reduce using rule 56 (term -> str .)
    COMMA           reduce using rule 56 (term -> str .)
    RBRACE          reduce using rule 56 (term -> str .)
    RPAREN          reduce using rule 56 (term -> str .)
    DPROD           reduce using rule 56 (term -> str .)
    DIVMUL          reduce using rule 56 (term -> str .)
    PLUSMINUS       reduce using rule 56 (term -> str .)


state 38

    (42) expr -> print .

    LBRACKET        reduce using rule 42 (expr -> print .)
    RBRACKET        reduce using rule 42 (expr -> print .)
    COMMA           reduce using rule 42 (expr -> print .)
    RPAREN          reduce using rule 42 (expr -> print .)
    COLON           reduce using rule 42 (expr -> print .)
    DIVIDER         reduce using rule 42 (expr -> print .)
    $end            reduce using rule 42 (expr -> print .)
    RBRACE          reduce using rule 42 (expr -> print .)
    QUESTION        reduce using rule 42 (expr -> print .)


state 39

    (72) alg0 -> PLUSMINUS . alg1
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD

    WORD            shift and go to state 83
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    exprnoalg                      shift and go to state 84
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    list                           shift and go to state 32
    float                          shift and go to state 7
    alg1                           shift and go to state 85
    term                           shift and go to state 19
    int                            shift and go to state 55
    func                           shift and go to state 3
    alg2                           shift and go to state 18
    var                            shift and go to state 46

state 40

    (28) metaexpr -> loop .

    RBRACE          reduce using rule 28 (metaexpr -> loop .)
    DIVIDER         reduce using rule 28 (metaexpr -> loop .)
    $end            reduce using rule 28 (metaexpr -> loop .)


state 41

    (64) downlevel -> DOWNLEVEL . expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 86
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 42

    (75) alg2 -> alg3 .

    DPROD           reduce using rule 75 (alg2 -> alg3 .)
    DIVMUL          reduce using rule 75 (alg2 -> alg3 .)
    PLUSMINUS       reduce using rule 75 (alg2 -> alg3 .)
    LBRACKET        reduce using rule 75 (alg2 -> alg3 .)
    RBRACE          reduce using rule 75 (alg2 -> alg3 .)
    DIVIDER         reduce using rule 75 (alg2 -> alg3 .)
    COLON           reduce using rule 75 (alg2 -> alg3 .)
    RBRACKET        reduce using rule 75 (alg2 -> alg3 .)
    COMMA           reduce using rule 75 (alg2 -> alg3 .)
    RPAREN          reduce using rule 75 (alg2 -> alg3 .)
    $end            reduce using rule 75 (alg2 -> alg3 .)
    QUESTION        reduce using rule 75 (alg2 -> alg3 .)


state 43

    (7) inblock -> divider . inblock
    (4) inblock -> .
    (5) inblock -> . metaexpr
    (6) inblock -> . inblock divider metaexpr
    (7) inblock -> . divider inblock
    (8) inblock -> . inblock divider
    (19) metaexpr -> . expr
    (20) metaexpr -> . deffunc
    (21) metaexpr -> . module
    (22) metaexpr -> . application
    (23) metaexpr -> . declare
    (24) metaexpr -> . define
    (25) metaexpr -> . downlevel
    (26) metaexpr -> . if
    (27) metaexpr -> . while
    (28) metaexpr -> . loop
    (29) metaexpr -> . input
    (16) divider -> . DIVIDER
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (11) deffunc -> . DEFFUNC func COLON dblock
    (10) module -> . MODULE WORD COLON dblock
    (12) application -> . APPLICATION WORD COLON dblock
    (14) declare -> . WORD COLON expr
    (13) define -> . DEFINE WORD expr
    (64) downlevel -> . DOWNLEVEL expr
    (15) if -> . IF expr QUESTION expr COLON expr
    (32) while -> . WHILE expr COLON expr
    (33) loop -> . LOOP COLON expr
    (17) input -> . INPUT
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

  ! shift/reduce conflict for DIVIDER resolved as shift
    $end            reduce using rule 4 (inblock -> .)
    RBRACE          reduce using rule 4 (inblock -> .)
    DIVIDER         shift and go to state 5
    DEFFUNC         shift and go to state 21
    MODULE          shift and go to state 9
    APPLICATION     shift and go to state 26
    WORD            shift and go to state 34
    DEFINE          shift and go to state 45
    DOWNLEVEL       shift and go to state 41
    IF              shift and go to state 20
    WHILE           shift and go to state 10
    LOOP            shift and go to state 27
    INPUT           shift and go to state 59
    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

  ! DIVIDER         [ reduce using rule 4 (inblock -> .) ]

    downlevel                      shift and go to state 31
    list                           shift and go to state 32
    element                        shift and go to state 2
    term                           shift and go to state 19
    application                    shift and go to state 4
    input                          shift and go to state 6
    str                            shift and go to state 37
    print                          shift and go to state 38
    var                            shift and go to state 46
    block                          shift and go to state 35
    alg3                           shift and go to state 42
    loop                           shift and go to state 40
    while                          shift and go to state 8
    float                          shift and go to state 7
    func                           shift and go to state 3
    exectext                       shift and go to state 49
    alg0                           shift and go to state 11
    divider                        shift and go to state 43
    deffunc                        shift and go to state 15
    exprnoalg                      shift and go to state 16
    execfile                       shift and go to state 47
    expr                           shift and go to state 48
    alg2                           shift and go to state 18
    return                         shift and go to state 24
    inblock                        shift and go to state 87
    equal                          shift and go to state 50
    metaexpr                       shift and go to state 52
    define                         shift and go to state 53
    alg1                           shift and go to state 23
    if                             shift and go to state 29
    int                            shift and go to state 55
    module                         shift and go to state 25
    python                         shift and go to state 56
    declare                        shift and go to state 57
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 44

    (55) return -> RETURN . expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 88
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 45

    (13) define -> DEFINE . WORD expr

    WORD            shift and go to state 89


state 46

    (59) term -> var .

    LBRACKET        reduce using rule 59 (term -> var .)
    DIVIDER         reduce using rule 59 (term -> var .)
    $end            reduce using rule 59 (term -> var .)
    COLON           reduce using rule 59 (term -> var .)
    QUESTION        reduce using rule 59 (term -> var .)
    RBRACKET        reduce using rule 59 (term -> var .)
    COMMA           reduce using rule 59 (term -> var .)
    RBRACE          reduce using rule 59 (term -> var .)
    RPAREN          reduce using rule 59 (term -> var .)
    DPROD           reduce using rule 59 (term -> var .)
    DIVMUL          reduce using rule 59 (term -> var .)
    PLUSMINUS       reduce using rule 59 (term -> var .)


state 47

    (45) expr -> execfile .

    LBRACKET        reduce using rule 45 (expr -> execfile .)
    RBRACKET        reduce using rule 45 (expr -> execfile .)
    COMMA           reduce using rule 45 (expr -> execfile .)
    RPAREN          reduce using rule 45 (expr -> execfile .)
    COLON           reduce using rule 45 (expr -> execfile .)
    DIVIDER         reduce using rule 45 (expr -> execfile .)
    $end            reduce using rule 45 (expr -> execfile .)
    RBRACE          reduce using rule 45 (expr -> execfile .)
    QUESTION        reduce using rule 45 (expr -> execfile .)


state 48

    (19) metaexpr -> expr .
    (67) element -> expr . LBRACKET expr RBRACKET

    RBRACE          reduce using rule 19 (metaexpr -> expr .)
    DIVIDER         reduce using rule 19 (metaexpr -> expr .)
    $end            reduce using rule 19 (metaexpr -> expr .)
    LBRACKET        shift and go to state 90


state 49

    (47) expr -> exectext .

    LBRACKET        reduce using rule 47 (expr -> exectext .)
    RBRACKET        reduce using rule 47 (expr -> exectext .)
    COMMA           reduce using rule 47 (expr -> exectext .)
    RPAREN          reduce using rule 47 (expr -> exectext .)
    COLON           reduce using rule 47 (expr -> exectext .)
    DIVIDER         reduce using rule 47 (expr -> exectext .)
    $end            reduce using rule 47 (expr -> exectext .)
    RBRACE          reduce using rule 47 (expr -> exectext .)
    QUESTION        reduce using rule 47 (expr -> exectext .)


state 50

    (48) expr -> equal .

    LBRACKET        reduce using rule 48 (expr -> equal .)
    RBRACKET        reduce using rule 48 (expr -> equal .)
    COMMA           reduce using rule 48 (expr -> equal .)
    RPAREN          reduce using rule 48 (expr -> equal .)
    COLON           reduce using rule 48 (expr -> equal .)
    DIVIDER         reduce using rule 48 (expr -> equal .)
    $end            reduce using rule 48 (expr -> equal .)
    RBRACE          reduce using rule 48 (expr -> equal .)
    QUESTION        reduce using rule 48 (expr -> equal .)


state 51

    (34) break -> BREAK .

    LBRACKET        reduce using rule 34 (break -> BREAK .)
    RBRACKET        reduce using rule 34 (break -> BREAK .)
    COMMA           reduce using rule 34 (break -> BREAK .)
    RPAREN          reduce using rule 34 (break -> BREAK .)
    DIVIDER         reduce using rule 34 (break -> BREAK .)
    $end            reduce using rule 34 (break -> BREAK .)
    COLON           reduce using rule 34 (break -> BREAK .)
    QUESTION        reduce using rule 34 (break -> BREAK .)
    RBRACE          reduce using rule 34 (break -> BREAK .)


state 52

    (5) inblock -> metaexpr .

    RBRACE          reduce using rule 5 (inblock -> metaexpr .)
    DIVIDER         reduce using rule 5 (inblock -> metaexpr .)
    $end            reduce using rule 5 (inblock -> metaexpr .)


state 53

    (24) metaexpr -> define .

    RBRACE          reduce using rule 24 (metaexpr -> define .)
    DIVIDER         reduce using rule 24 (metaexpr -> define .)
    $end            reduce using rule 24 (metaexpr -> define .)


state 54

    (0) S' -> inblock .
    (6) inblock -> inblock . divider metaexpr
    (8) inblock -> inblock . divider
    (16) divider -> . DIVIDER

    DIVIDER         shift and go to state 5

    divider                        shift and go to state 91

state 55

    (58) term -> int .

    LBRACKET        reduce using rule 58 (term -> int .)
    DIVIDER         reduce using rule 58 (term -> int .)
    $end            reduce using rule 58 (term -> int .)
    COLON           reduce using rule 58 (term -> int .)
    QUESTION        reduce using rule 58 (term -> int .)
    RBRACKET        reduce using rule 58 (term -> int .)
    COMMA           reduce using rule 58 (term -> int .)
    RBRACE          reduce using rule 58 (term -> int .)
    RPAREN          reduce using rule 58 (term -> int .)
    DPROD           reduce using rule 58 (term -> int .)
    DIVMUL          reduce using rule 58 (term -> int .)
    PLUSMINUS       reduce using rule 58 (term -> int .)


state 56

    (44) expr -> python .

    LBRACKET        reduce using rule 44 (expr -> python .)
    RBRACKET        reduce using rule 44 (expr -> python .)
    COMMA           reduce using rule 44 (expr -> python .)
    RPAREN          reduce using rule 44 (expr -> python .)
    COLON           reduce using rule 44 (expr -> python .)
    DIVIDER         reduce using rule 44 (expr -> python .)
    $end            reduce using rule 44 (expr -> python .)
    RBRACE          reduce using rule 44 (expr -> python .)
    QUESTION        reduce using rule 44 (expr -> python .)


state 57

    (23) metaexpr -> declare .

    RBRACE          reduce using rule 23 (metaexpr -> declare .)
    DIVIDER         reduce using rule 23 (metaexpr -> declare .)
    $end            reduce using rule 23 (metaexpr -> declare .)


state 58

    (43) expr -> variables .

    LBRACKET        reduce using rule 43 (expr -> variables .)
    RBRACKET        reduce using rule 43 (expr -> variables .)
    COMMA           reduce using rule 43 (expr -> variables .)
    RPAREN          reduce using rule 43 (expr -> variables .)
    COLON           reduce using rule 43 (expr -> variables .)
    DIVIDER         reduce using rule 43 (expr -> variables .)
    $end            reduce using rule 43 (expr -> variables .)
    RBRACE          reduce using rule 43 (expr -> variables .)
    QUESTION        reduce using rule 43 (expr -> variables .)


state 59

    (17) input -> INPUT .

    DIVIDER         reduce using rule 17 (input -> INPUT .)
    $end            reduce using rule 17 (input -> INPUT .)
    RBRACE          reduce using rule 17 (input -> INPUT .)


state 60

    (3) block -> LBRACE . inblock RBRACE
    (4) inblock -> .
    (5) inblock -> . metaexpr
    (6) inblock -> . inblock divider metaexpr
    (7) inblock -> . divider inblock
    (8) inblock -> . inblock divider
    (19) metaexpr -> . expr
    (20) metaexpr -> . deffunc
    (21) metaexpr -> . module
    (22) metaexpr -> . application
    (23) metaexpr -> . declare
    (24) metaexpr -> . define
    (25) metaexpr -> . downlevel
    (26) metaexpr -> . if
    (27) metaexpr -> . while
    (28) metaexpr -> . loop
    (29) metaexpr -> . input
    (16) divider -> . DIVIDER
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (11) deffunc -> . DEFFUNC func COLON dblock
    (10) module -> . MODULE WORD COLON dblock
    (12) application -> . APPLICATION WORD COLON dblock
    (14) declare -> . WORD COLON expr
    (13) define -> . DEFINE WORD expr
    (64) downlevel -> . DOWNLEVEL expr
    (15) if -> . IF expr QUESTION expr COLON expr
    (32) while -> . WHILE expr COLON expr
    (33) loop -> . LOOP COLON expr
    (17) input -> . INPUT
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

  ! shift/reduce conflict for DIVIDER resolved as shift
    RBRACE          reduce using rule 4 (inblock -> .)
    DIVIDER         shift and go to state 5
    DEFFUNC         shift and go to state 21
    MODULE          shift and go to state 9
    APPLICATION     shift and go to state 26
    WORD            shift and go to state 34
    DEFINE          shift and go to state 45
    DOWNLEVEL       shift and go to state 41
    IF              shift and go to state 20
    WHILE           shift and go to state 10
    LOOP            shift and go to state 27
    INPUT           shift and go to state 59
    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

  ! DIVIDER         [ reduce using rule 4 (inblock -> .) ]

    downlevel                      shift and go to state 31
    list                           shift and go to state 32
    element                        shift and go to state 2
    term                           shift and go to state 19
    application                    shift and go to state 4
    input                          shift and go to state 6
    str                            shift and go to state 37
    print                          shift and go to state 38
    var                            shift and go to state 46
    block                          shift and go to state 35
    alg3                           shift and go to state 42
    loop                           shift and go to state 40
    while                          shift and go to state 8
    float                          shift and go to state 7
    func                           shift and go to state 3
    exectext                       shift and go to state 49
    alg0                           shift and go to state 11
    divider                        shift and go to state 43
    deffunc                        shift and go to state 15
    exprnoalg                      shift and go to state 16
    execfile                       shift and go to state 47
    expr                           shift and go to state 48
    alg2                           shift and go to state 18
    return                         shift and go to state 24
    inblock                        shift and go to state 92
    equal                          shift and go to state 50
    metaexpr                       shift and go to state 52
    define                         shift and go to state 53
    alg1                           shift and go to state 23
    if                             shift and go to state 29
    int                            shift and go to state 55
    module                         shift and go to state 25
    python                         shift and go to state 56
    declare                        shift and go to state 57
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 61

    (10) module -> MODULE WORD . COLON dblock

    COLON           shift and go to state 93


state 62

    (39) equal -> WORD . EQUALS expr
    (18) func -> WORD . LPAREN args RPAREN
    (68) var -> WORD .

    EQUALS          shift and go to state 81
    LPAREN          shift and go to state 80
    LBRACKET        reduce using rule 68 (var -> WORD .)
    RBRACKET        reduce using rule 68 (var -> WORD .)
    COMMA           reduce using rule 68 (var -> WORD .)
    RPAREN          reduce using rule 68 (var -> WORD .)
    DPROD           reduce using rule 68 (var -> WORD .)
    DIVMUL          reduce using rule 68 (var -> WORD .)
    PLUSMINUS       reduce using rule 68 (var -> WORD .)
    DIVIDER         reduce using rule 68 (var -> WORD .)
    $end            reduce using rule 68 (var -> WORD .)
    RBRACE          reduce using rule 68 (var -> WORD .)
    COLON           reduce using rule 68 (var -> WORD .)
    QUESTION        reduce using rule 68 (var -> WORD .)


state 63

    (32) while -> WHILE expr . COLON expr
    (67) element -> expr . LBRACKET expr RBRACKET

    COLON           shift and go to state 94
    LBRACKET        shift and go to state 90


state 64

    (71) alg0 -> alg0 PLUSMINUS . alg1
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD

    WORD            shift and go to state 83
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    exprnoalg                      shift and go to state 84
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    list                           shift and go to state 32
    float                          shift and go to state 7
    alg1                           shift and go to state 95
    term                           shift and go to state 19
    int                            shift and go to state 55
    func                           shift and go to state 3
    alg2                           shift and go to state 18
    var                            shift and go to state 46

state 65

    (62) execfile -> EXECFILE str .

    LBRACKET        reduce using rule 62 (execfile -> EXECFILE str .)
    DIVIDER         reduce using rule 62 (execfile -> EXECFILE str .)
    $end            reduce using rule 62 (execfile -> EXECFILE str .)
    RBRACE          reduce using rule 62 (execfile -> EXECFILE str .)
    COLON           reduce using rule 62 (execfile -> EXECFILE str .)
    QUESTION        reduce using rule 62 (execfile -> EXECFILE str .)
    RBRACKET        reduce using rule 62 (execfile -> EXECFILE str .)
    COMMA           reduce using rule 62 (execfile -> EXECFILE str .)
    RPAREN          reduce using rule 62 (execfile -> EXECFILE str .)


state 66

    (69) variables -> VARIABLES expr .
    (67) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 69 (variables -> VARIABLES expr .)
    $end            reduce using rule 69 (variables -> VARIABLES expr .)
    RBRACE          reduce using rule 69 (variables -> VARIABLES expr .)
    COMMA           reduce using rule 69 (variables -> VARIABLES expr .)
    RPAREN          reduce using rule 69 (variables -> VARIABLES expr .)
    COLON           reduce using rule 69 (variables -> VARIABLES expr .)
    QUESTION        reduce using rule 69 (variables -> VARIABLES expr .)
    RBRACKET        reduce using rule 69 (variables -> VARIABLES expr .)
    LBRACKET        shift and go to state 90

  ! LBRACKET        [ reduce using rule 69 (variables -> VARIABLES expr .) ]


state 67

    (9) print -> PRINT expr .
    (67) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 9 (print -> PRINT expr .)
    $end            reduce using rule 9 (print -> PRINT expr .)
    COLON           reduce using rule 9 (print -> PRINT expr .)
    QUESTION        reduce using rule 9 (print -> PRINT expr .)
    RBRACKET        reduce using rule 9 (print -> PRINT expr .)
    COMMA           reduce using rule 9 (print -> PRINT expr .)
    RBRACE          reduce using rule 9 (print -> PRINT expr .)
    RPAREN          reduce using rule 9 (print -> PRINT expr .)
    LBRACKET        shift and go to state 90

  ! LBRACKET        [ reduce using rule 9 (print -> PRINT expr .) ]


state 68

    (76) alg2 -> alg2 DPROD . alg3
    (77) alg3 -> . exprnoalg
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD

    WORD            shift and go to state 83
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    exprnoalg                      shift and go to state 84
    alg3                           shift and go to state 96
    block                          shift and go to state 35
    str                            shift and go to state 37
    var                            shift and go to state 46
    float                          shift and go to state 7
    term                           shift and go to state 19
    int                            shift and go to state 55
    func                           shift and go to state 3

state 69

    (15) if -> IF expr . QUESTION expr COLON expr
    (67) element -> expr . LBRACKET expr RBRACKET

    QUESTION        shift and go to state 97
    LBRACKET        shift and go to state 90


state 70

    (18) func -> WORD . LPAREN args RPAREN

    LPAREN          shift and go to state 80


state 71

    (11) deffunc -> DEFFUNC func . COLON dblock

    COLON           shift and go to state 98


state 72

    (31) list -> LBRACKET RBRACKET .

    LBRACKET        reduce using rule 31 (list -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 31 (list -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 31 (list -> LBRACKET RBRACKET .)
    DPROD           reduce using rule 31 (list -> LBRACKET RBRACKET .)
    DIVMUL          reduce using rule 31 (list -> LBRACKET RBRACKET .)
    PLUSMINUS       reduce using rule 31 (list -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 31 (list -> LBRACKET RBRACKET .)
    DIVIDER         reduce using rule 31 (list -> LBRACKET RBRACKET .)
    $end            reduce using rule 31 (list -> LBRACKET RBRACKET .)
    COLON           reduce using rule 31 (list -> LBRACKET RBRACKET .)
    QUESTION        reduce using rule 31 (list -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 31 (list -> LBRACKET RBRACKET .)


state 73

    (30) list -> LBRACKET comms . RBRACKET
    (38) comms -> comms . COMMA expr

    RBRACKET        shift and go to state 100
    COMMA           shift and go to state 99


state 74

    (37) comms -> expr .
    (67) element -> expr . LBRACKET expr RBRACKET

    RBRACKET        reduce using rule 37 (comms -> expr .)
    COMMA           reduce using rule 37 (comms -> expr .)
    RPAREN          reduce using rule 37 (comms -> expr .)
    LBRACKET        shift and go to state 90


state 75

    (74) alg1 -> alg1 DIVMUL . alg2
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD

    WORD            shift and go to state 83
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    exprnoalg                      shift and go to state 84
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    list                           shift and go to state 32
    float                          shift and go to state 7
    term                           shift and go to state 19
    int                            shift and go to state 55
    func                           shift and go to state 3
    alg2                           shift and go to state 101
    var                            shift and go to state 46

state 76

    (12) application -> APPLICATION WORD . COLON dblock

    COLON           shift and go to state 102


state 77

    (33) loop -> LOOP COLON . expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 103
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 78

    (63) exectext -> EXECTEXT str .

    LBRACKET        reduce using rule 63 (exectext -> EXECTEXT str .)
    DIVIDER         reduce using rule 63 (exectext -> EXECTEXT str .)
    $end            reduce using rule 63 (exectext -> EXECTEXT str .)
    COLON           reduce using rule 63 (exectext -> EXECTEXT str .)
    QUESTION        reduce using rule 63 (exectext -> EXECTEXT str .)
    RBRACKET        reduce using rule 63 (exectext -> EXECTEXT str .)
    COMMA           reduce using rule 63 (exectext -> EXECTEXT str .)
    RBRACE          reduce using rule 63 (exectext -> EXECTEXT str .)
    RPAREN          reduce using rule 63 (exectext -> EXECTEXT str .)


state 79

    (14) declare -> WORD COLON . expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 104
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 80

    (18) func -> WORD LPAREN . args RPAREN
    (35) args -> .
    (36) args -> . comms
    (37) comms -> . expr
    (38) comms -> . comms COMMA expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    RPAREN          reduce using rule 35 (args -> .)
    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    args                           shift and go to state 105
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 74
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    comms                          shift and go to state 106
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 81

    (39) equal -> WORD EQUALS . expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 107
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 82

    (61) python -> PYTHON str .

    LBRACKET        reduce using rule 61 (python -> PYTHON str .)
    DIVIDER         reduce using rule 61 (python -> PYTHON str .)
    $end            reduce using rule 61 (python -> PYTHON str .)
    RBRACE          reduce using rule 61 (python -> PYTHON str .)
    COLON           reduce using rule 61 (python -> PYTHON str .)
    QUESTION        reduce using rule 61 (python -> PYTHON str .)
    RBRACKET        reduce using rule 61 (python -> PYTHON str .)
    COMMA           reduce using rule 61 (python -> PYTHON str .)
    RPAREN          reduce using rule 61 (python -> PYTHON str .)


state 83

    (18) func -> WORD . LPAREN args RPAREN
    (68) var -> WORD .

    LPAREN          shift and go to state 80
    DPROD           reduce using rule 68 (var -> WORD .)
    DIVMUL          reduce using rule 68 (var -> WORD .)
    PLUSMINUS       reduce using rule 68 (var -> WORD .)
    LBRACKET        reduce using rule 68 (var -> WORD .)
    DIVIDER         reduce using rule 68 (var -> WORD .)
    $end            reduce using rule 68 (var -> WORD .)
    COLON           reduce using rule 68 (var -> WORD .)
    QUESTION        reduce using rule 68 (var -> WORD .)
    RBRACKET        reduce using rule 68 (var -> WORD .)
    COMMA           reduce using rule 68 (var -> WORD .)
    RBRACE          reduce using rule 68 (var -> WORD .)
    RPAREN          reduce using rule 68 (var -> WORD .)


state 84

    (77) alg3 -> exprnoalg .

    DPROD           reduce using rule 77 (alg3 -> exprnoalg .)
    DIVMUL          reduce using rule 77 (alg3 -> exprnoalg .)
    PLUSMINUS       reduce using rule 77 (alg3 -> exprnoalg .)
    LBRACKET        reduce using rule 77 (alg3 -> exprnoalg .)
    DIVIDER         reduce using rule 77 (alg3 -> exprnoalg .)
    $end            reduce using rule 77 (alg3 -> exprnoalg .)
    COLON           reduce using rule 77 (alg3 -> exprnoalg .)
    QUESTION        reduce using rule 77 (alg3 -> exprnoalg .)
    RBRACKET        reduce using rule 77 (alg3 -> exprnoalg .)
    COMMA           reduce using rule 77 (alg3 -> exprnoalg .)
    RBRACE          reduce using rule 77 (alg3 -> exprnoalg .)
    RPAREN          reduce using rule 77 (alg3 -> exprnoalg .)


state 85

    (72) alg0 -> PLUSMINUS alg1 .
    (74) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 72 (alg0 -> PLUSMINUS alg1 .)
    RBRACKET        reduce using rule 72 (alg0 -> PLUSMINUS alg1 .)
    LBRACKET        reduce using rule 72 (alg0 -> PLUSMINUS alg1 .)
    DIVIDER         reduce using rule 72 (alg0 -> PLUSMINUS alg1 .)
    $end            reduce using rule 72 (alg0 -> PLUSMINUS alg1 .)
    RBRACE          reduce using rule 72 (alg0 -> PLUSMINUS alg1 .)
    COLON           reduce using rule 72 (alg0 -> PLUSMINUS alg1 .)
    QUESTION        reduce using rule 72 (alg0 -> PLUSMINUS alg1 .)
    COMMA           reduce using rule 72 (alg0 -> PLUSMINUS alg1 .)
    RPAREN          reduce using rule 72 (alg0 -> PLUSMINUS alg1 .)
    DIVMUL          shift and go to state 75


state 86

    (64) downlevel -> DOWNLEVEL expr .
    (67) element -> expr . LBRACKET expr RBRACKET

    DIVIDER         reduce using rule 64 (downlevel -> DOWNLEVEL expr .)
    $end            reduce using rule 64 (downlevel -> DOWNLEVEL expr .)
    RBRACE          reduce using rule 64 (downlevel -> DOWNLEVEL expr .)
    LBRACKET        shift and go to state 90


state 87

    (7) inblock -> divider inblock .
    (6) inblock -> inblock . divider metaexpr
    (8) inblock -> inblock . divider
    (16) divider -> . DIVIDER

  ! shift/reduce conflict for DIVIDER resolved as shift
    RBRACE          reduce using rule 7 (inblock -> divider inblock .)
    $end            reduce using rule 7 (inblock -> divider inblock .)
    DIVIDER         shift and go to state 5

  ! DIVIDER         [ reduce using rule 7 (inblock -> divider inblock .) ]

    divider                        shift and go to state 91

state 88

    (55) return -> RETURN expr .
    (67) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 55 (return -> RETURN expr .)
    $end            reduce using rule 55 (return -> RETURN expr .)
    COLON           reduce using rule 55 (return -> RETURN expr .)
    QUESTION        reduce using rule 55 (return -> RETURN expr .)
    RBRACKET        reduce using rule 55 (return -> RETURN expr .)
    COMMA           reduce using rule 55 (return -> RETURN expr .)
    RBRACE          reduce using rule 55 (return -> RETURN expr .)
    RPAREN          reduce using rule 55 (return -> RETURN expr .)
    LBRACKET        shift and go to state 90

  ! LBRACKET        [ reduce using rule 55 (return -> RETURN expr .) ]


state 89

    (13) define -> DEFINE WORD . expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 108
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 90

    (67) element -> expr LBRACKET . expr RBRACKET
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 109
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 91

    (6) inblock -> inblock divider . metaexpr
    (8) inblock -> inblock divider .
    (19) metaexpr -> . expr
    (20) metaexpr -> . deffunc
    (21) metaexpr -> . module
    (22) metaexpr -> . application
    (23) metaexpr -> . declare
    (24) metaexpr -> . define
    (25) metaexpr -> . downlevel
    (26) metaexpr -> . if
    (27) metaexpr -> . while
    (28) metaexpr -> . loop
    (29) metaexpr -> . input
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (11) deffunc -> . DEFFUNC func COLON dblock
    (10) module -> . MODULE WORD COLON dblock
    (12) application -> . APPLICATION WORD COLON dblock
    (14) declare -> . WORD COLON expr
    (13) define -> . DEFINE WORD expr
    (64) downlevel -> . DOWNLEVEL expr
    (15) if -> . IF expr QUESTION expr COLON expr
    (32) while -> . WHILE expr COLON expr
    (33) loop -> . LOOP COLON expr
    (17) input -> . INPUT
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    RBRACE          reduce using rule 8 (inblock -> inblock divider .)
    DIVIDER         reduce using rule 8 (inblock -> inblock divider .)
    $end            reduce using rule 8 (inblock -> inblock divider .)
    DEFFUNC         shift and go to state 21
    MODULE          shift and go to state 9
    APPLICATION     shift and go to state 26
    WORD            shift and go to state 34
    DEFINE          shift and go to state 45
    DOWNLEVEL       shift and go to state 41
    IF              shift and go to state 20
    WHILE           shift and go to state 10
    LOOP            shift and go to state 27
    INPUT           shift and go to state 59
    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    downlevel                      shift and go to state 31
    list                           shift and go to state 32
    element                        shift and go to state 2
    term                           shift and go to state 19
    application                    shift and go to state 4
    input                          shift and go to state 6
    str                            shift and go to state 37
    print                          shift and go to state 38
    var                            shift and go to state 46
    block                          shift and go to state 35
    alg3                           shift and go to state 42
    loop                           shift and go to state 40
    while                          shift and go to state 8
    float                          shift and go to state 7
    func                           shift and go to state 3
    exectext                       shift and go to state 49
    alg0                           shift and go to state 11
    deffunc                        shift and go to state 15
    exprnoalg                      shift and go to state 16
    execfile                       shift and go to state 47
    expr                           shift and go to state 48
    alg2                           shift and go to state 18
    return                         shift and go to state 24
    equal                          shift and go to state 50
    metaexpr                       shift and go to state 110
    define                         shift and go to state 53
    alg1                           shift and go to state 23
    if                             shift and go to state 29
    int                            shift and go to state 55
    module                         shift and go to state 25
    python                         shift and go to state 56
    declare                        shift and go to state 57
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 92

    (3) block -> LBRACE inblock . RBRACE
    (6) inblock -> inblock . divider metaexpr
    (8) inblock -> inblock . divider
    (16) divider -> . DIVIDER

    RBRACE          shift and go to state 111
    DIVIDER         shift and go to state 5

    divider                        shift and go to state 91

state 93

    (10) module -> MODULE WORD COLON . dblock
    (1) dblock -> . block
    (2) dblock -> . divider block
    (3) block -> . LBRACE inblock RBRACE
    (16) divider -> . DIVIDER

    LBRACE          shift and go to state 60
    DIVIDER         shift and go to state 5

    block                          shift and go to state 113
    dblock                         shift and go to state 112
    divider                        shift and go to state 114

state 94

    (32) while -> WHILE expr COLON . expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 115
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 95

    (71) alg0 -> alg0 PLUSMINUS alg1 .
    (74) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 71 (alg0 -> alg0 PLUSMINUS alg1 .)
    RBRACKET        reduce using rule 71 (alg0 -> alg0 PLUSMINUS alg1 .)
    LBRACKET        reduce using rule 71 (alg0 -> alg0 PLUSMINUS alg1 .)
    DIVIDER         reduce using rule 71 (alg0 -> alg0 PLUSMINUS alg1 .)
    $end            reduce using rule 71 (alg0 -> alg0 PLUSMINUS alg1 .)
    RBRACE          reduce using rule 71 (alg0 -> alg0 PLUSMINUS alg1 .)
    COLON           reduce using rule 71 (alg0 -> alg0 PLUSMINUS alg1 .)
    QUESTION        reduce using rule 71 (alg0 -> alg0 PLUSMINUS alg1 .)
    COMMA           reduce using rule 71 (alg0 -> alg0 PLUSMINUS alg1 .)
    RPAREN          reduce using rule 71 (alg0 -> alg0 PLUSMINUS alg1 .)
    DIVMUL          shift and go to state 75


state 96

    (76) alg2 -> alg2 DPROD alg3 .

    DPROD           reduce using rule 76 (alg2 -> alg2 DPROD alg3 .)
    DIVMUL          reduce using rule 76 (alg2 -> alg2 DPROD alg3 .)
    PLUSMINUS       reduce using rule 76 (alg2 -> alg2 DPROD alg3 .)
    LBRACKET        reduce using rule 76 (alg2 -> alg2 DPROD alg3 .)
    RBRACE          reduce using rule 76 (alg2 -> alg2 DPROD alg3 .)
    DIVIDER         reduce using rule 76 (alg2 -> alg2 DPROD alg3 .)
    COLON           reduce using rule 76 (alg2 -> alg2 DPROD alg3 .)
    RBRACKET        reduce using rule 76 (alg2 -> alg2 DPROD alg3 .)
    COMMA           reduce using rule 76 (alg2 -> alg2 DPROD alg3 .)
    RPAREN          reduce using rule 76 (alg2 -> alg2 DPROD alg3 .)
    $end            reduce using rule 76 (alg2 -> alg2 DPROD alg3 .)
    QUESTION        reduce using rule 76 (alg2 -> alg2 DPROD alg3 .)


state 97

    (15) if -> IF expr QUESTION . expr COLON expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 116
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 98

    (11) deffunc -> DEFFUNC func COLON . dblock
    (1) dblock -> . block
    (2) dblock -> . divider block
    (3) block -> . LBRACE inblock RBRACE
    (16) divider -> . DIVIDER

    LBRACE          shift and go to state 60
    DIVIDER         shift and go to state 5

    block                          shift and go to state 113
    dblock                         shift and go to state 117
    divider                        shift and go to state 114

state 99

    (38) comms -> comms COMMA . expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 118
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 100

    (30) list -> LBRACKET comms RBRACKET .

    LBRACKET        reduce using rule 30 (list -> LBRACKET comms RBRACKET .)
    COMMA           reduce using rule 30 (list -> LBRACKET comms RBRACKET .)
    RPAREN          reduce using rule 30 (list -> LBRACKET comms RBRACKET .)
    DPROD           reduce using rule 30 (list -> LBRACKET comms RBRACKET .)
    DIVMUL          reduce using rule 30 (list -> LBRACKET comms RBRACKET .)
    PLUSMINUS       reduce using rule 30 (list -> LBRACKET comms RBRACKET .)
    RBRACKET        reduce using rule 30 (list -> LBRACKET comms RBRACKET .)
    DIVIDER         reduce using rule 30 (list -> LBRACKET comms RBRACKET .)
    $end            reduce using rule 30 (list -> LBRACKET comms RBRACKET .)
    COLON           reduce using rule 30 (list -> LBRACKET comms RBRACKET .)
    QUESTION        reduce using rule 30 (list -> LBRACKET comms RBRACKET .)
    RBRACE          reduce using rule 30 (list -> LBRACKET comms RBRACKET .)


state 101

    (74) alg1 -> alg1 DIVMUL alg2 .
    (76) alg2 -> alg2 . DPROD alg3

    DIVMUL          reduce using rule 74 (alg1 -> alg1 DIVMUL alg2 .)
    PLUSMINUS       reduce using rule 74 (alg1 -> alg1 DIVMUL alg2 .)
    LBRACKET        reduce using rule 74 (alg1 -> alg1 DIVMUL alg2 .)
    DIVIDER         reduce using rule 74 (alg1 -> alg1 DIVMUL alg2 .)
    $end            reduce using rule 74 (alg1 -> alg1 DIVMUL alg2 .)
    RBRACE          reduce using rule 74 (alg1 -> alg1 DIVMUL alg2 .)
    COLON           reduce using rule 74 (alg1 -> alg1 DIVMUL alg2 .)
    QUESTION        reduce using rule 74 (alg1 -> alg1 DIVMUL alg2 .)
    RBRACKET        reduce using rule 74 (alg1 -> alg1 DIVMUL alg2 .)
    COMMA           reduce using rule 74 (alg1 -> alg1 DIVMUL alg2 .)
    RPAREN          reduce using rule 74 (alg1 -> alg1 DIVMUL alg2 .)
    DPROD           shift and go to state 68


state 102

    (12) application -> APPLICATION WORD COLON . dblock
    (1) dblock -> . block
    (2) dblock -> . divider block
    (3) block -> . LBRACE inblock RBRACE
    (16) divider -> . DIVIDER

    LBRACE          shift and go to state 60
    DIVIDER         shift and go to state 5

    block                          shift and go to state 113
    dblock                         shift and go to state 119
    divider                        shift and go to state 114

state 103

    (33) loop -> LOOP COLON expr .
    (67) element -> expr . LBRACKET expr RBRACKET

    DIVIDER         reduce using rule 33 (loop -> LOOP COLON expr .)
    $end            reduce using rule 33 (loop -> LOOP COLON expr .)
    RBRACE          reduce using rule 33 (loop -> LOOP COLON expr .)
    LBRACKET        shift and go to state 90


state 104

    (14) declare -> WORD COLON expr .
    (67) element -> expr . LBRACKET expr RBRACKET

    DIVIDER         reduce using rule 14 (declare -> WORD COLON expr .)
    $end            reduce using rule 14 (declare -> WORD COLON expr .)
    RBRACE          reduce using rule 14 (declare -> WORD COLON expr .)
    LBRACKET        shift and go to state 90


state 105

    (18) func -> WORD LPAREN args . RPAREN

    RPAREN          shift and go to state 120


state 106

    (36) args -> comms .
    (38) comms -> comms . COMMA expr

    RPAREN          reduce using rule 36 (args -> comms .)
    COMMA           shift and go to state 99


state 107

    (39) equal -> WORD EQUALS expr .
    (67) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    COLON           reduce using rule 39 (equal -> WORD EQUALS expr .)
    RBRACE          reduce using rule 39 (equal -> WORD EQUALS expr .)
    DIVIDER         reduce using rule 39 (equal -> WORD EQUALS expr .)
    $end            reduce using rule 39 (equal -> WORD EQUALS expr .)
    QUESTION        reduce using rule 39 (equal -> WORD EQUALS expr .)
    RBRACKET        reduce using rule 39 (equal -> WORD EQUALS expr .)
    COMMA           reduce using rule 39 (equal -> WORD EQUALS expr .)
    RPAREN          reduce using rule 39 (equal -> WORD EQUALS expr .)
    LBRACKET        shift and go to state 90

  ! LBRACKET        [ reduce using rule 39 (equal -> WORD EQUALS expr .) ]


state 108

    (13) define -> DEFINE WORD expr .
    (67) element -> expr . LBRACKET expr RBRACKET

    DIVIDER         reduce using rule 13 (define -> DEFINE WORD expr .)
    $end            reduce using rule 13 (define -> DEFINE WORD expr .)
    RBRACE          reduce using rule 13 (define -> DEFINE WORD expr .)
    LBRACKET        shift and go to state 90


state 109

    (67) element -> expr LBRACKET expr . RBRACKET
    (67) element -> expr . LBRACKET expr RBRACKET

    RBRACKET        shift and go to state 121
    LBRACKET        shift and go to state 90


state 110

    (6) inblock -> inblock divider metaexpr .

    RBRACE          reduce using rule 6 (inblock -> inblock divider metaexpr .)
    DIVIDER         reduce using rule 6 (inblock -> inblock divider metaexpr .)
    $end            reduce using rule 6 (inblock -> inblock divider metaexpr .)


state 111

    (3) block -> LBRACE inblock RBRACE .

    DIVIDER         reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    $end            reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    RBRACE          reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    LBRACKET        reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    DPROD           reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    DIVMUL          reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    PLUSMINUS       reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    COLON           reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    QUESTION        reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    RBRACKET        reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    COMMA           reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    RPAREN          reduce using rule 3 (block -> LBRACE inblock RBRACE .)


state 112

    (10) module -> MODULE WORD COLON dblock .

    DIVIDER         reduce using rule 10 (module -> MODULE WORD COLON dblock .)
    $end            reduce using rule 10 (module -> MODULE WORD COLON dblock .)
    RBRACE          reduce using rule 10 (module -> MODULE WORD COLON dblock .)


state 113

    (1) dblock -> block .

    DIVIDER         reduce using rule 1 (dblock -> block .)
    $end            reduce using rule 1 (dblock -> block .)
    RBRACE          reduce using rule 1 (dblock -> block .)


state 114

    (2) dblock -> divider . block
    (3) block -> . LBRACE inblock RBRACE

    LBRACE          shift and go to state 60

    block                          shift and go to state 122

state 115

    (32) while -> WHILE expr COLON expr .
    (67) element -> expr . LBRACKET expr RBRACKET

    DIVIDER         reduce using rule 32 (while -> WHILE expr COLON expr .)
    $end            reduce using rule 32 (while -> WHILE expr COLON expr .)
    RBRACE          reduce using rule 32 (while -> WHILE expr COLON expr .)
    LBRACKET        shift and go to state 90


state 116

    (15) if -> IF expr QUESTION expr . COLON expr
    (67) element -> expr . LBRACKET expr RBRACKET

    COLON           shift and go to state 123
    LBRACKET        shift and go to state 90


state 117

    (11) deffunc -> DEFFUNC func COLON dblock .

    DIVIDER         reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)
    $end            reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)
    RBRACE          reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)


state 118

    (38) comms -> comms COMMA expr .
    (67) element -> expr . LBRACKET expr RBRACKET

    RBRACKET        reduce using rule 38 (comms -> comms COMMA expr .)
    COMMA           reduce using rule 38 (comms -> comms COMMA expr .)
    RPAREN          reduce using rule 38 (comms -> comms COMMA expr .)
    LBRACKET        shift and go to state 90


state 119

    (12) application -> APPLICATION WORD COLON dblock .

    DIVIDER         reduce using rule 12 (application -> APPLICATION WORD COLON dblock .)
    $end            reduce using rule 12 (application -> APPLICATION WORD COLON dblock .)
    RBRACE          reduce using rule 12 (application -> APPLICATION WORD COLON dblock .)


state 120

    (18) func -> WORD LPAREN args RPAREN .

    LBRACKET        reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    DIVIDER         reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    $end            reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    COLON           reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    QUESTION        reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    RBRACKET        reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    COMMA           reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    RBRACE          reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    RPAREN          reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    DPROD           reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    DIVMUL          reduce using rule 18 (func -> WORD LPAREN args RPAREN .)
    PLUSMINUS       reduce using rule 18 (func -> WORD LPAREN args RPAREN .)


state 121

    (67) element -> expr LBRACKET expr RBRACKET .

    LBRACKET        reduce using rule 67 (element -> expr LBRACKET expr RBRACKET .)
    DIVIDER         reduce using rule 67 (element -> expr LBRACKET expr RBRACKET .)
    $end            reduce using rule 67 (element -> expr LBRACKET expr RBRACKET .)
    RBRACE          reduce using rule 67 (element -> expr LBRACKET expr RBRACKET .)
    COLON           reduce using rule 67 (element -> expr LBRACKET expr RBRACKET .)
    QUESTION        reduce using rule 67 (element -> expr LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 67 (element -> expr LBRACKET expr RBRACKET .)
    COMMA           reduce using rule 67 (element -> expr LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 67 (element -> expr LBRACKET expr RBRACKET .)


state 122

    (2) dblock -> divider block .

    DIVIDER         reduce using rule 2 (dblock -> divider block .)
    $end            reduce using rule 2 (dblock -> divider block .)
    RBRACE          reduce using rule 2 (dblock -> divider block .)


state 123

    (15) if -> IF expr QUESTION expr COLON . expr
    (40) expr -> . exprnoalg
    (41) expr -> . alg0
    (42) expr -> . print
    (43) expr -> . variables
    (44) expr -> . python
    (45) expr -> . execfile
    (46) expr -> . break
    (47) expr -> . exectext
    (48) expr -> . equal
    (49) expr -> . element
    (50) expr -> . return
    (51) exprnoalg -> . term
    (52) exprnoalg -> . func
    (53) exprnoalg -> . block
    (54) exprnoalg -> . list
    (70) alg0 -> . alg1
    (71) alg0 -> . alg0 PLUSMINUS alg1
    (72) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (69) variables -> . VARIABLES expr
    (61) python -> . PYTHON str
    (62) execfile -> . EXECFILE str
    (34) break -> . BREAK
    (63) exectext -> . EXECTEXT str
    (39) equal -> . WORD EQUALS expr
    (67) element -> . expr LBRACKET expr RBRACKET
    (55) return -> . RETURN expr
    (56) term -> . str
    (57) term -> . float
    (58) term -> . int
    (59) term -> . var
    (18) func -> . WORD LPAREN args RPAREN
    (3) block -> . LBRACE inblock RBRACE
    (30) list -> . LBRACKET comms RBRACKET
    (31) list -> . LBRACKET RBRACKET
    (73) alg1 -> . alg2
    (74) alg1 -> . alg1 DIVMUL alg2
    (66) str -> . STRING
    (65) float -> . FLOAT
    (60) int -> . NUMBER
    (68) var -> . WORD
    (75) alg2 -> . alg3
    (76) alg2 -> . alg2 DPROD alg3
    (77) alg3 -> . exprnoalg

    PLUSMINUS       shift and go to state 39
    PRINT           shift and go to state 17
    VARIABLES       shift and go to state 14
    PYTHON          shift and go to state 36
    EXECFILE        shift and go to state 13
    BREAK           shift and go to state 51
    EXECTEXT        shift and go to state 33
    WORD            shift and go to state 62
    RETURN          shift and go to state 44
    LBRACE          shift and go to state 60
    LBRACKET        shift and go to state 22
    STRING          shift and go to state 28
    FLOAT           shift and go to state 12
    NUMBER          shift and go to state 1

    list                           shift and go to state 32
    element                        shift and go to state 2
    alg3                           shift and go to state 42
    block                          shift and go to state 35
    str                            shift and go to state 37
    print                          shift and go to state 38
    float                          shift and go to state 7
    func                           shift and go to state 3
    alg0                           shift and go to state 11
    exprnoalg                      shift and go to state 16
    var                            shift and go to state 46
    execfile                       shift and go to state 47
    expr                           shift and go to state 124
    return                         shift and go to state 24
    exectext                       shift and go to state 49
    equal                          shift and go to state 50
    alg1                           shift and go to state 23
    term                           shift and go to state 19
    int                            shift and go to state 55
    python                         shift and go to state 56
    alg2                           shift and go to state 18
    variables                      shift and go to state 58
    break                          shift and go to state 30

state 124

    (15) if -> IF expr QUESTION expr COLON expr .
    (67) element -> expr . LBRACKET expr RBRACKET

    DIVIDER         reduce using rule 15 (if -> IF expr QUESTION expr COLON expr .)
    $end            reduce using rule 15 (if -> IF expr QUESTION expr COLON expr .)
    RBRACE          reduce using rule 15 (if -> IF expr QUESTION expr COLON expr .)
    LBRACKET        shift and go to state 90

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DIVIDER in state 0 resolved as shift
WARNING: shift/reduce conflict for DIVIDER in state 43 resolved as shift
WARNING: shift/reduce conflict for DIVIDER in state 60 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 66 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDER in state 87 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 88 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 107 resolved as shift
WARNING: reduce/reduce conflict in state 16 resolved using rule (expr -> exprnoalg)
WARNING: rejected rule (alg3 -> exprnoalg) in state 16
