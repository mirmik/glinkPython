
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '5C9FCCB97772451F951813B572DF56C5'
    
_lr_action_items = {'MODULE':([0,2,9,36,57,],[1,1,1,-15,1,]),'RBRACE':([2,3,5,7,8,9,10,11,12,13,15,17,18,19,20,21,23,24,25,26,27,29,30,31,32,33,35,36,37,38,41,42,43,46,55,57,59,60,63,64,66,67,70,72,73,74,75,76,78,79,81,82,83,],[-4,-25,-20,-40,-24,-4,-17,-21,-18,-44,-34,-37,-32,-52,-46,-23,-43,-42,-22,-19,-33,-35,-39,-50,-36,-5,-47,-15,-41,-45,-7,-38,-46,63,-9,-8,-49,-54,-3,-13,-26,-31,-14,-48,-53,-6,-51,-10,-1,-11,-16,-12,-2,]),'LBRACE':([0,2,4,9,16,28,36,39,47,50,51,52,54,56,57,58,61,62,65,71,77,],[9,9,9,9,9,9,-15,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'APPLICATION':([0,2,9,36,57,],[22,22,22,-15,22,]),'DIVMUL':([7,13,15,17,18,19,20,23,24,29,30,31,32,35,37,38,43,59,60,63,66,72,73,75,81,],[-40,-44,-34,-37,-54,-52,-46,-43,-42,-35,-39,-50,-36,58,-41,-45,-46,58,-54,-3,-26,58,-53,-51,-16,]),'NUMBER':([0,2,4,9,16,28,36,39,47,50,51,52,54,56,57,58,65,],[23,23,23,23,23,23,-15,23,23,23,23,23,23,23,23,23,23,]),'RETURN':([0,2,9,36,57,],[4,4,4,-15,4,]),'DEFFUNC':([0,2,9,36,57,],[6,6,6,-15,6,]),'LPAREN':([20,43,45,],[51,51,51,]),'RPAREN':([7,13,15,17,18,19,23,24,27,29,30,31,32,35,37,38,43,49,51,59,60,63,66,68,69,72,73,75,80,81,],[-40,-44,-34,-37,-32,-52,-43,-42,-33,-35,-39,-50,-36,-47,-41,-45,-46,-29,-27,-49,-54,-3,-26,81,-28,-48,-53,-51,-30,-16,]),'COMMA':([7,13,15,17,18,19,23,24,27,29,30,31,32,35,37,38,43,48,49,59,60,63,66,69,72,73,75,80,81,],[-40,-44,-34,-37,-32,-52,-43,-42,-33,-35,-39,-50,-36,-47,-41,-45,-46,65,-29,-49,-54,-3,-26,65,-48,-53,-51,-30,-16,]),'$end':([0,2,3,5,7,8,10,11,12,13,15,17,18,19,20,21,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,41,42,43,55,57,59,60,63,64,66,67,70,72,73,74,75,76,78,79,81,82,83,],[-4,-4,-25,-20,-40,-24,-17,-21,-18,-44,-34,-37,-32,-52,-46,-23,-43,-42,-22,-19,-33,-35,-39,-50,-36,-5,0,-47,-15,-41,-45,-7,-38,-46,-9,-8,-49,-54,-3,-13,-26,-31,-14,-48,-53,-6,-51,-10,-1,-11,-16,-12,-2,]),'DPROD':([7,13,15,17,18,19,20,23,24,29,30,31,32,37,38,43,60,63,66,73,75,81,],[-40,-44,-34,-37,-54,-52,-46,-43,-42,-35,-39,56,-36,-41,-45,-46,-54,-3,-26,-53,56,-16,]),'DIVIDER':([0,2,3,5,7,8,9,10,11,12,13,15,17,18,19,20,21,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,41,42,43,46,55,57,59,60,61,62,63,64,66,67,70,71,72,73,74,75,76,78,79,81,82,83,],[36,36,-25,-20,-40,-24,36,-17,-21,-18,-44,-34,-37,-32,-52,-46,-23,-43,-42,-22,-19,-33,-35,-39,-50,-36,-5,36,-47,-15,-41,-45,36,-38,-46,36,-9,-8,-49,-54,36,36,-3,-13,-26,-31,-14,36,-48,-53,-6,-51,-10,-1,-11,-16,-12,-2,]),'RBRACKET':([7,13,15,17,18,19,23,24,27,29,30,31,32,35,37,38,43,48,49,59,60,63,66,72,73,75,80,81,],[-40,-44,-34,-37,-32,-52,-43,-42,-33,-35,-39,-50,-36,-47,-41,-45,-46,66,-29,-49,-54,-3,-26,-48,-53,-51,-30,-16,]),'FLOAT':([0,2,4,9,16,28,36,39,47,50,51,52,54,56,57,58,65,],[13,13,13,13,13,13,-15,13,13,13,13,13,13,13,13,13,13,]),'DEFINE':([0,2,9,36,57,],[14,14,14,-15,14,]),'COLON':([20,40,44,53,81,],[52,61,62,71,-16,]),'WORD':([0,1,2,4,6,9,14,16,22,28,36,39,47,50,51,52,54,56,57,58,65,],[20,40,20,43,45,20,47,43,53,43,-15,43,43,43,43,43,43,43,20,43,43,]),'LBRACKET':([0,2,4,9,16,28,36,39,47,50,51,52,54,56,57,58,65,],[16,16,16,16,16,16,-15,16,16,16,16,16,16,16,16,16,16,]),'EQUALS':([20,],[50,]),'PRINT':([0,2,9,36,57,],[28,28,28,-15,28,]),'STRING':([0,2,4,9,16,28,36,39,47,50,51,52,54,56,57,58,65,],[38,38,38,38,38,38,-15,38,38,38,38,38,38,38,38,38,38,]),'PLUSMINUS':([0,2,4,7,9,13,15,16,17,18,19,20,23,24,27,28,29,30,31,32,35,36,37,38,43,47,50,51,52,57,59,60,63,65,66,72,73,75,81,],[39,39,39,-40,39,-44,-34,39,-37,-54,-52,-46,-43,-42,54,39,-35,-39,-50,-36,-47,-15,-41,-45,-46,39,39,39,39,39,-49,-54,-3,39,-26,-48,-53,-51,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'divider':([0,2,9,34,41,46,61,62,71,],[2,2,2,57,57,57,77,77,77,]),'return':([0,2,9,57,],[3,3,3,3,]),'comms':([16,51,],[48,69,]),'alg2':([0,2,4,9,16,28,39,47,50,51,52,54,57,58,65,],[31,31,31,31,31,31,31,31,31,31,31,31,31,75,31,]),'application':([0,2,9,57,],[5,5,5,5,]),'define':([0,2,9,57,],[25,25,25,25,]),'module':([0,2,9,57,],[26,26,26,26,]),'args':([51,],[68,]),'term':([0,2,4,9,16,28,39,47,50,51,52,54,56,57,58,65,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'int':([0,2,4,9,16,28,39,47,50,51,52,54,56,57,58,65,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'float':([0,2,4,9,16,28,39,47,50,51,52,54,56,57,58,65,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'equal':([0,2,9,57,],[8,8,8,8,]),'alg3':([0,2,4,9,16,28,39,47,50,51,52,54,56,57,58,65,],[19,19,19,19,19,19,19,19,19,19,19,19,73,19,19,19,]),'str':([0,2,4,9,16,28,39,47,50,51,52,54,56,57,58,65,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'var':([0,2,4,9,16,28,39,47,50,51,52,54,56,57,58,65,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'block':([0,2,4,9,16,28,39,47,50,51,52,54,56,57,58,61,62,65,71,77,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,78,78,32,78,83,]),'expr':([0,2,4,9,16,28,47,50,51,52,57,65,],[10,10,42,10,49,55,64,67,49,70,10,80,]),'declare':([0,2,9,57,],[11,11,11,11,]),'deffunc':([0,2,9,57,],[12,12,12,12,]),'metaexpr':([0,2,9,57,],[33,33,33,74,]),'print':([0,2,9,57,],[21,21,21,21,]),'alg1':([0,2,4,9,16,28,39,47,50,51,52,54,57,65,],[35,35,35,35,35,35,59,35,35,35,35,72,35,35,]),'dblock':([61,62,71,],[76,79,82,]),'list':([0,2,4,9,16,28,39,47,50,51,52,54,56,57,58,65,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'exprnoalg':([0,2,4,9,16,28,39,47,50,51,52,54,56,57,58,65,],[18,18,18,18,18,18,60,18,18,18,18,60,60,18,60,18,]),'func':([0,2,4,6,9,16,28,39,47,50,51,52,54,56,57,58,65,],[29,29,29,44,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'inblock':([0,2,9,],[34,41,46,]),'alg0':([0,2,4,9,16,28,47,50,51,52,57,65,],[27,27,27,27,27,27,27,27,27,27,27,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inblock","S'",1,None,None,None),
  ('dblock -> block','dblock',1,'p_dblock','pars.py',39),
  ('dblock -> divider block','dblock',2,'p_dblock','pars.py',40),
  ('block -> LBRACE inblock RBRACE','block',3,'p_block','pars.py',45),
  ('inblock -> <empty>','inblock',0,'p_inblock','pars.py',49),
  ('inblock -> metaexpr','inblock',1,'p_inblock','pars.py',50),
  ('inblock -> inblock divider metaexpr','inblock',3,'p_inblock','pars.py',51),
  ('inblock -> divider inblock','inblock',2,'p_inblock','pars.py',52),
  ('inblock -> inblock divider','inblock',2,'p_inblock','pars.py',53),
  ('print -> PRINT expr','print',2,'p_print','pars.py',63),
  ('module -> MODULE WORD COLON dblock','module',4,'p_module','pars.py',67),
  ('deffunc -> DEFFUNC func COLON dblock','deffunc',4,'p_deffunc','pars.py',71),
  ('application -> APPLICATION WORD COLON dblock','application',4,'p_application','pars.py',75),
  ('define -> DEFINE WORD expr','define',3,'p_define','pars.py',79),
  ('declare -> WORD COLON expr','declare',3,'p_declare','pars.py',83),
  ('divider -> DIVIDER','divider',1,'p_divider','pars.py',87),
  ('func -> WORD LPAREN args RPAREN','func',4,'p_func','pars.py',91),
  ('metaexpr -> expr','metaexpr',1,'p_metaexpr','pars.py',96),
  ('metaexpr -> deffunc','metaexpr',1,'p_metaexpr','pars.py',97),
  ('metaexpr -> module','metaexpr',1,'p_metaexpr','pars.py',98),
  ('metaexpr -> application','metaexpr',1,'p_metaexpr','pars.py',99),
  ('metaexpr -> declare','metaexpr',1,'p_metaexpr','pars.py',100),
  ('metaexpr -> define','metaexpr',1,'p_metaexpr','pars.py',101),
  ('metaexpr -> print','metaexpr',1,'p_metaexpr','pars.py',102),
  ('metaexpr -> equal','metaexpr',1,'p_metaexpr','pars.py',103),
  ('metaexpr -> return','metaexpr',1,'p_metaexpr','pars.py',104),
  ('list -> LBRACKET comms RBRACKET','list',3,'p_list','pars.py',109),
  ('args -> <empty>','args',0,'p_args','pars.py',117),
  ('args -> comms','args',1,'p_args','pars.py',118),
  ('comms -> expr','comms',1,'p_comms','pars.py',123),
  ('comms -> comms COMMA expr','comms',3,'p_comms','pars.py',124),
  ('equal -> WORD EQUALS expr','equal',3,'p_equal','pars.py',131),
  ('expr -> exprnoalg','expr',1,'p_expr','pars.py',136),
  ('expr -> alg0','expr',1,'p_expr','pars.py',137),
  ('exprnoalg -> term','exprnoalg',1,'p_exprnoalg','pars.py',142),
  ('exprnoalg -> func','exprnoalg',1,'p_exprnoalg','pars.py',143),
  ('exprnoalg -> block','exprnoalg',1,'p_exprnoalg','pars.py',144),
  ('exprnoalg -> list','exprnoalg',1,'p_exprnoalg','pars.py',145),
  ('return -> RETURN expr','return',2,'p_return','pars.py',149),
  ('term -> str','term',1,'p_term','pars.py',153),
  ('term -> float','term',1,'p_term','pars.py',154),
  ('term -> int','term',1,'p_term','pars.py',155),
  ('term -> var','term',1,'p_term','pars.py',156),
  ('int -> NUMBER','int',1,'p_int','pars.py',160),
  ('float -> FLOAT','float',1,'p_float','pars.py',165),
  ('str -> STRING','str',1,'p_str','pars.py',169),
  ('var -> WORD','var',1,'p_var','pars.py',173),
  ('alg0 -> alg1','alg0',1,'p_alg0','pars.py',185),
  ('alg0 -> alg0 PLUSMINUS alg1','alg0',3,'p_alg0','pars.py',186),
  ('alg0 -> PLUSMINUS alg1','alg0',2,'p_alg0','pars.py',187),
  ('alg1 -> alg2','alg1',1,'p_alg1','pars.py',196),
  ('alg1 -> alg1 DIVMUL alg2','alg1',3,'p_alg1','pars.py',197),
  ('alg2 -> alg3','alg2',1,'p_alg2','pars.py',204),
  ('alg2 -> alg2 DPROD alg3','alg2',3,'p_alg2','pars.py',205),
  ('alg3 -> exprnoalg','alg3',1,'p_alg3','pars.py',212),
]
