
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '3C2FF387E95FA6AC0D3AA06CA06B5049'
    
_lr_action_items = {'LPAREN':([34,62,70,83,],[80,80,80,80,]),'MODULE':([0,5,43,60,91,],[9,-16,9,9,9,]),'NUMBER':([0,5,10,14,17,20,22,39,41,43,44,60,64,68,75,77,79,80,81,89,90,91,94,97,99,123,],[1,-16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'EXECTEXT':([0,5,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[33,-16,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'WORD':([0,5,9,10,14,17,20,21,22,26,39,41,43,44,45,60,64,68,75,77,79,80,81,89,90,91,94,97,99,123,],[34,-16,61,62,62,62,62,70,62,76,83,62,34,62,89,34,83,83,83,62,62,62,62,62,62,34,62,62,62,62,]),'PRINT':([0,5,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[17,-16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'DIVIDER':([0,1,2,3,4,5,6,7,8,11,12,15,16,18,19,23,24,25,28,29,30,31,32,34,35,37,38,40,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,65,66,67,72,78,82,83,84,85,86,87,88,91,92,93,95,96,98,100,101,102,103,104,107,108,110,111,112,113,115,117,119,120,121,122,124,],[5,-60,-49,-52,-22,-16,-29,-57,-27,-41,-65,-20,-40,-73,-51,-70,-50,-21,-66,-26,-46,-25,-54,-68,-53,-56,-42,-28,-75,5,-59,-45,-19,-47,-48,-34,-5,-24,5,-58,-44,-23,-43,-17,5,-68,-62,-69,-9,-31,-63,-61,-68,-77,-72,-64,5,-55,-8,5,5,-71,-76,5,-30,-74,5,-33,-14,-39,-13,-6,-3,-10,-1,-32,-11,-12,-18,-67,-2,-15,]),'STRING':([0,5,10,13,14,17,20,22,33,36,39,41,43,44,60,64,68,75,77,79,80,81,89,90,91,94,97,99,123,],[28,-16,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'PYTHON':([0,5,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[36,-16,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'PLUSMINUS':([0,1,3,5,7,10,11,12,14,16,17,18,19,20,22,23,28,32,34,35,37,41,42,43,44,46,55,60,62,72,77,79,80,81,83,84,85,89,90,91,94,95,96,97,99,100,101,111,120,123,],[39,-60,-52,-16,-57,39,64,-65,39,-77,39,-73,-51,39,39,-70,-66,-54,-68,-53,-56,39,-75,39,39,-59,-58,39,-68,-31,39,39,39,39,-68,-77,-72,39,39,39,39,-71,-76,39,39,-30,-74,-3,-18,39,]),'COLON':([1,2,3,7,11,12,16,18,19,23,24,27,28,30,32,34,35,37,38,42,46,47,49,50,51,55,56,58,61,62,63,65,66,67,71,72,76,78,82,83,84,85,88,95,96,100,101,107,111,116,120,121,],[-60,-49,-52,-57,-41,-65,-40,-73,-51,-70,-50,77,-66,-46,-54,79,-53,-56,-42,-75,-59,-45,-47,-48,-34,-58,-44,-43,93,-68,94,-62,-69,-9,98,-31,102,-63,-61,-68,-77,-72,-55,-71,-76,-30,-74,-39,-3,123,-18,-67,]),'DOWNLEVEL':([0,5,43,60,91,],[41,-16,41,41,41,]),'RBRACKET':([1,2,3,7,11,12,16,18,19,22,23,24,28,30,32,35,37,38,42,46,47,49,50,51,55,56,58,62,65,66,67,72,73,74,78,82,83,84,85,88,95,96,100,101,107,109,111,118,120,121,],[-60,-49,-52,-57,-41,-65,-40,-73,-51,72,-70,-50,-66,-46,-54,-53,-56,-42,-75,-59,-45,-47,-48,-34,-58,-44,-43,-68,-62,-69,-9,-31,100,-37,-63,-61,-68,-77,-72,-55,-71,-76,-30,-74,-39,121,-3,-38,-18,-67,]),'WHILE':([0,5,43,60,91,],[10,-16,10,10,10,]),'COMMA':([1,2,3,7,11,12,16,18,19,23,24,28,30,32,35,37,38,42,46,47,49,50,51,55,56,58,62,65,66,67,72,73,74,78,82,83,84,85,88,95,96,100,101,106,107,111,118,120,121,],[-60,-49,-52,-57,-41,-65,-40,-73,-51,-70,-50,-66,-46,-54,-53,-56,-42,-75,-59,-45,-47,-48,-34,-58,-44,-43,-68,-62,-69,-9,-31,99,-37,-63,-61,-68,-77,-72,-55,-71,-76,-30,-74,99,-39,-3,-38,-18,-67,]),'VARIABLES':([0,5,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[14,-16,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'QUESTION':([1,2,3,7,11,12,16,18,19,23,24,28,30,32,35,37,38,42,46,47,49,50,51,55,56,58,62,65,66,67,69,72,78,82,83,84,85,88,95,96,100,101,107,111,120,121,],[-60,-49,-52,-57,-41,-65,-40,-73,-51,-70,-50,-66,-46,-54,-53,-56,-42,-75,-59,-45,-47,-48,-34,-58,-44,-43,-68,-62,-69,-9,97,-31,-63,-61,-68,-77,-72,-55,-71,-76,-30,-74,-39,-3,-18,-67,]),'EXECFILE':([0,5,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[13,-16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LBRACKET':([0,1,2,3,5,7,10,11,12,14,16,17,18,19,20,22,23,24,28,30,32,34,35,37,38,39,41,42,43,44,46,47,48,49,50,51,55,56,58,60,62,63,64,65,66,67,68,69,72,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,94,95,96,97,99,100,101,103,104,107,108,109,111,115,116,118,120,121,123,124,],[22,-60,-49,-52,-16,-57,22,-41,-65,22,-40,22,-73,-51,22,22,-70,-50,-66,-46,-54,-68,-53,-56,-42,22,22,-75,22,22,-59,-45,90,-47,-48,-34,-58,-44,-43,22,-68,90,22,-62,90,90,22,90,-31,90,22,22,-63,22,22,22,-61,-68,-77,-72,90,90,22,22,22,22,-71,-76,22,22,-30,-74,90,90,90,90,90,-3,90,90,90,-18,-67,22,90,]),'RETURN':([0,5,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[44,-16,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'DEFINE':([0,5,43,60,91,],[45,-16,45,45,45,]),'DPROD':([1,3,7,12,16,18,19,28,32,34,35,37,42,46,55,62,72,83,84,96,100,101,111,120,],[-60,-52,-57,-65,-77,68,-51,-66,-54,-68,-53,-56,-75,-59,-58,-68,-31,-68,-77,-76,-30,68,-3,-18,]),'$end':([0,1,2,3,4,5,6,7,8,11,12,15,16,18,19,23,24,25,28,29,30,31,32,34,35,37,38,40,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,65,66,67,72,78,82,83,84,85,86,87,88,91,95,96,100,101,103,104,107,108,110,111,112,113,115,117,119,120,121,122,124,],[-4,-60,-49,-52,-22,-16,-29,-57,-27,-41,-65,-20,-40,-73,-51,-70,-50,-21,-66,-26,-46,-25,-54,-68,-53,-56,-42,-28,-75,-4,-59,-45,-19,-47,-48,-34,-5,-24,0,-58,-44,-23,-43,-17,-68,-62,-69,-9,-31,-63,-61,-68,-77,-72,-64,-7,-55,-8,-71,-76,-30,-74,-33,-14,-39,-13,-6,-3,-10,-1,-32,-11,-12,-18,-67,-2,-15,]),'IF':([0,5,43,60,91,],[20,-16,20,20,20,]),'DIVMUL':([1,3,7,12,16,18,19,23,28,32,34,35,37,42,46,55,62,72,83,84,85,95,96,100,101,111,120,],[-60,-52,-57,-65,-77,-73,-51,75,-66,-54,-68,-53,-56,-75,-59,-58,-68,-31,-68,-77,75,75,-76,-30,-74,-3,-18,]),'DEFFUNC':([0,5,43,60,91,],[21,-16,21,21,21,]),'FLOAT':([0,5,10,14,17,20,22,39,41,43,44,60,64,68,75,77,79,80,81,89,90,91,94,97,99,123,],[12,-16,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'BREAK':([0,5,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[51,-16,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'RBRACE':([1,2,3,4,5,6,7,8,11,12,15,16,18,19,23,24,25,28,29,30,31,32,34,35,37,38,40,42,43,46,47,48,49,50,51,52,53,55,56,57,58,59,60,62,65,66,67,72,78,82,83,84,85,86,87,88,91,92,95,96,100,101,103,104,107,108,110,111,112,113,115,117,119,120,121,122,124,],[-60,-49,-52,-22,-16,-29,-57,-27,-41,-65,-20,-40,-73,-51,-70,-50,-21,-66,-26,-46,-25,-54,-68,-53,-56,-42,-28,-75,-4,-59,-45,-19,-47,-48,-34,-5,-24,-58,-44,-23,-43,-17,-4,-68,-62,-69,-9,-31,-63,-61,-68,-77,-72,-64,-7,-55,-8,111,-71,-76,-30,-74,-33,-14,-39,-13,-6,-3,-10,-1,-32,-11,-12,-18,-67,-2,-15,]),'EQUALS':([34,62,],[81,81,]),'APPLICATION':([0,5,43,60,91,],[26,-16,26,26,26,]),'LOOP':([0,5,43,60,91,],[27,-16,27,27,27,]),'INPUT':([0,5,43,60,91,],[59,-16,59,59,59,]),'RPAREN':([1,2,3,7,11,12,16,18,19,23,24,28,30,32,35,37,38,42,46,47,49,50,51,55,56,58,62,65,66,67,72,74,78,80,82,83,84,85,88,95,96,100,101,105,106,107,111,118,120,121,],[-60,-49,-52,-57,-41,-65,-40,-73,-51,-70,-50,-66,-46,-54,-53,-56,-42,-75,-59,-45,-47,-48,-34,-58,-44,-43,-68,-62,-69,-9,-31,-37,-63,-35,-61,-68,-77,-72,-55,-71,-76,-30,-74,120,-36,-39,-3,-38,-18,-67,]),'LBRACE':([0,5,10,14,17,20,22,39,41,43,44,60,64,68,75,77,79,80,81,89,90,91,93,94,97,98,99,102,114,123,],[60,-16,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'downlevel':([0,43,60,91,],[31,31,31,31,]),'list':([0,10,14,17,20,22,39,41,43,44,60,64,68,75,77,79,80,81,89,90,91,94,97,99,123,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'element':([0,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'application':([0,43,60,91,],[4,4,4,4,]),'dblock':([93,98,102,],[112,117,119,]),'input':([0,43,60,91,],[6,6,6,6,]),'str':([0,10,13,14,17,20,22,33,36,39,41,43,44,60,64,68,75,77,79,80,81,89,90,91,94,97,99,123,],[37,37,65,37,37,37,37,78,82,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'print':([0,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'alg3':([0,10,14,17,20,22,39,41,43,44,60,64,68,75,77,79,80,81,89,90,91,94,97,99,123,],[42,42,42,42,42,42,42,42,42,42,42,42,96,42,42,42,42,42,42,42,42,42,42,42,42,]),'float':([0,10,14,17,20,22,39,41,43,44,60,64,68,75,77,79,80,81,89,90,91,94,97,99,123,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'args':([80,],[105,]),'loop':([0,43,60,91,],[40,40,40,40,]),'while':([0,43,60,91,],[8,8,8,8,]),'func':([0,10,14,17,20,21,22,39,41,43,44,60,64,68,75,77,79,80,81,89,90,91,94,97,99,123,],[3,3,3,3,3,71,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'exectext':([0,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'alg0':([0,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'divider':([0,43,54,60,87,92,93,98,102,],[43,43,91,43,91,91,114,114,114,]),'deffunc':([0,43,60,91,],[15,15,15,15,]),'exprnoalg':([0,10,14,17,20,22,39,41,43,44,60,64,68,75,77,79,80,81,89,90,91,94,97,99,123,],[16,16,16,16,16,16,84,16,16,16,16,84,84,84,16,16,16,16,16,16,16,16,16,16,16,]),'var':([0,10,14,17,20,22,39,41,43,44,60,64,68,75,77,79,80,81,89,90,91,94,97,99,123,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'execfile':([0,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'expr':([0,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[48,63,66,67,69,74,86,48,88,48,103,104,74,107,108,109,48,115,116,118,124,]),'block':([0,10,14,17,20,22,39,41,43,44,60,64,68,75,77,79,80,81,89,90,91,93,94,97,98,99,102,114,123,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,113,35,35,113,35,113,122,35,]),'term':([0,10,14,17,20,22,39,41,43,44,60,64,68,75,77,79,80,81,89,90,91,94,97,99,123,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'inblock':([0,43,60,],[54,87,92,]),'equal':([0,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'metaexpr':([0,43,60,91,],[52,52,52,110,]),'define':([0,43,60,91,],[53,53,53,53,]),'alg1':([0,10,14,17,20,22,39,41,43,44,60,64,77,79,80,81,89,90,91,94,97,99,123,],[23,23,23,23,23,23,85,23,23,23,23,95,23,23,23,23,23,23,23,23,23,23,23,]),'return':([0,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'int':([0,10,14,17,20,22,39,41,43,44,60,64,68,75,77,79,80,81,89,90,91,94,97,99,123,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'comms':([22,80,],[73,106,]),'module':([0,43,60,91,],[25,25,25,25,]),'python':([0,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'declare':([0,43,60,91,],[57,57,57,57,]),'variables':([0,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'if':([0,43,60,91,],[29,29,29,29,]),'alg2':([0,10,14,17,20,22,39,41,43,44,60,64,75,77,79,80,81,89,90,91,94,97,99,123,],[18,18,18,18,18,18,18,18,18,18,18,18,101,18,18,18,18,18,18,18,18,18,18,18,]),'break':([0,10,14,17,20,22,41,43,44,60,77,79,80,81,89,90,91,94,97,99,123,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inblock","S'",1,None,None,None),
  ('dblock -> block','dblock',1,'p_dblock','pars.py',39),
  ('dblock -> divider block','dblock',2,'p_dblock','pars.py',40),
  ('block -> LBRACE inblock RBRACE','block',3,'p_block','pars.py',45),
  ('inblock -> <empty>','inblock',0,'p_inblock','pars.py',49),
  ('inblock -> metaexpr','inblock',1,'p_inblock','pars.py',50),
  ('inblock -> inblock divider metaexpr','inblock',3,'p_inblock','pars.py',51),
  ('inblock -> divider inblock','inblock',2,'p_inblock','pars.py',52),
  ('inblock -> inblock divider','inblock',2,'p_inblock','pars.py',53),
  ('print -> PRINT expr','print',2,'p_print','pars.py',63),
  ('module -> MODULE WORD COLON dblock','module',4,'p_module','pars.py',67),
  ('deffunc -> DEFFUNC func COLON dblock','deffunc',4,'p_deffunc','pars.py',71),
  ('application -> APPLICATION WORD COLON dblock','application',4,'p_application','pars.py',75),
  ('define -> DEFINE WORD expr','define',3,'p_define','pars.py',79),
  ('declare -> WORD COLON expr','declare',3,'p_declare','pars.py',83),
  ('if -> IF expr QUESTION expr COLON expr','if',6,'p_if','pars.py',87),
  ('divider -> DIVIDER','divider',1,'p_divider','pars.py',91),
  ('input -> INPUT','input',1,'p_input','pars.py',95),
  ('func -> WORD LPAREN args RPAREN','func',4,'p_func','pars.py',99),
  ('metaexpr -> expr','metaexpr',1,'p_metaexpr','pars.py',104),
  ('metaexpr -> deffunc','metaexpr',1,'p_metaexpr','pars.py',105),
  ('metaexpr -> module','metaexpr',1,'p_metaexpr','pars.py',106),
  ('metaexpr -> application','metaexpr',1,'p_metaexpr','pars.py',107),
  ('metaexpr -> declare','metaexpr',1,'p_metaexpr','pars.py',108),
  ('metaexpr -> define','metaexpr',1,'p_metaexpr','pars.py',109),
  ('metaexpr -> downlevel','metaexpr',1,'p_metaexpr','pars.py',110),
  ('metaexpr -> if','metaexpr',1,'p_metaexpr','pars.py',111),
  ('metaexpr -> while','metaexpr',1,'p_metaexpr','pars.py',112),
  ('metaexpr -> loop','metaexpr',1,'p_metaexpr','pars.py',113),
  ('metaexpr -> input','metaexpr',1,'p_metaexpr','pars.py',114),
  ('list -> LBRACKET comms RBRACKET','list',3,'p_list','pars.py',119),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','pars.py',120),
  ('while -> WHILE expr COLON expr','while',4,'p_while','pars.py',131),
  ('loop -> LOOP COLON expr','loop',3,'p_loop','pars.py',135),
  ('break -> BREAK','break',1,'p_break','pars.py',139),
  ('args -> <empty>','args',0,'p_args','pars.py',143),
  ('args -> comms','args',1,'p_args','pars.py',144),
  ('comms -> expr','comms',1,'p_comms','pars.py',149),
  ('comms -> comms COMMA expr','comms',3,'p_comms','pars.py',150),
  ('equal -> WORD EQUALS expr','equal',3,'p_equal','pars.py',157),
  ('expr -> exprnoalg','expr',1,'p_expr','pars.py',162),
  ('expr -> alg0','expr',1,'p_expr','pars.py',163),
  ('expr -> print','expr',1,'p_expr','pars.py',164),
  ('expr -> variables','expr',1,'p_expr','pars.py',165),
  ('expr -> python','expr',1,'p_expr','pars.py',166),
  ('expr -> execfile','expr',1,'p_expr','pars.py',167),
  ('expr -> break','expr',1,'p_expr','pars.py',168),
  ('expr -> exectext','expr',1,'p_expr','pars.py',169),
  ('expr -> equal','expr',1,'p_expr','pars.py',170),
  ('expr -> element','expr',1,'p_expr','pars.py',171),
  ('expr -> return','expr',1,'p_expr','pars.py',172),
  ('exprnoalg -> term','exprnoalg',1,'p_exprnoalg','pars.py',177),
  ('exprnoalg -> func','exprnoalg',1,'p_exprnoalg','pars.py',178),
  ('exprnoalg -> block','exprnoalg',1,'p_exprnoalg','pars.py',179),
  ('exprnoalg -> list','exprnoalg',1,'p_exprnoalg','pars.py',180),
  ('return -> RETURN expr','return',2,'p_return','pars.py',184),
  ('term -> str','term',1,'p_term','pars.py',188),
  ('term -> float','term',1,'p_term','pars.py',189),
  ('term -> int','term',1,'p_term','pars.py',190),
  ('term -> var','term',1,'p_term','pars.py',191),
  ('int -> NUMBER','int',1,'p_int','pars.py',195),
  ('python -> PYTHON str','python',2,'p_python','pars.py',199),
  ('execfile -> EXECFILE str','execfile',2,'p_execfile','pars.py',203),
  ('exectext -> EXECTEXT str','exectext',2,'p_exectext','pars.py',207),
  ('downlevel -> DOWNLEVEL expr','downlevel',2,'p_downlevel','pars.py',211),
  ('float -> FLOAT','float',1,'p_float','pars.py',215),
  ('str -> STRING','str',1,'p_str','pars.py',219),
  ('element -> expr LBRACKET expr RBRACKET','element',4,'p_element','pars.py',223),
  ('var -> WORD','var',1,'p_var','pars.py',227),
  ('variables -> VARIABLES expr','variables',2,'p_variables','pars.py',231),
  ('alg0 -> alg1','alg0',1,'p_alg0','pars.py',242),
  ('alg0 -> alg0 PLUSMINUS alg1','alg0',3,'p_alg0','pars.py',243),
  ('alg0 -> PLUSMINUS alg1','alg0',2,'p_alg0','pars.py',244),
  ('alg1 -> alg2','alg1',1,'p_alg1','pars.py',253),
  ('alg1 -> alg1 DIVMUL alg2','alg1',3,'p_alg1','pars.py',254),
  ('alg2 -> alg3','alg2',1,'p_alg2','pars.py',261),
  ('alg2 -> alg2 DPROD alg3','alg2',3,'p_alg2','pars.py',262),
  ('alg3 -> exprnoalg','alg3',1,'p_alg3','pars.py',269),
]
