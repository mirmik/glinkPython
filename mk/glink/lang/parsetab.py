
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '8033510A5928BD293ED4169F6F2B9248'
    
_lr_action_items = {'NUMBER':([0,6,12,17,18,19,24,33,44,46,47,50,52,60,62,63,64,65,68,80,90,101,],[21,21,21,21,21,-16,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'QUESTION':([1,3,8,10,11,13,15,16,20,21,22,25,26,27,28,30,32,38,41,43,48,51,56,57,59,61,72,73,74,75,76,78,81,82,88,91,96,],[-53,-35,-38,-41,-46,-34,-48,-54,-42,-50,-40,-36,-62,-60,-47,-43,-37,-44,-57,-39,-49,-51,-55,80,-9,-45,-55,-59,-64,-56,-58,-3,-63,-33,-61,-28,-18,]),'EQUALS':([36,56,],[62,62,]),'LPAREN':([36,56,67,72,],[63,63,63,63,]),'DEFFUNC':([0,6,12,19,52,],[40,40,40,-16,40,]),'COMMA':([1,3,8,10,11,13,15,16,20,21,22,25,26,27,28,30,32,38,41,43,48,51,56,59,61,70,71,72,73,74,75,76,78,81,82,83,88,91,96,99,],[-53,-35,-38,-41,-46,-34,-48,-54,-42,-50,-40,-36,-62,-60,-47,-43,-37,-44,-57,-39,-49,-51,-55,-9,-45,90,-31,-55,-59,-64,-56,-58,-3,-63,-33,90,-61,-28,-18,-32,]),'INPUT':([0,6,12,19,52,],[34,34,34,-16,34,]),'RBRACE':([1,2,3,6,7,8,10,11,12,13,14,15,16,19,20,21,22,23,25,26,27,28,29,30,31,32,34,35,36,37,38,41,43,45,48,49,51,52,53,55,56,58,59,61,72,73,74,75,76,77,78,81,82,85,86,88,91,92,93,96,97,98,100,102,],[-53,-22,-35,-4,-27,-38,-41,-46,-4,-34,-23,-48,-54,-16,-42,-50,-40,-26,-36,-62,-60,-47,-21,-43,-20,-37,-17,-24,-55,-19,-44,-57,-39,-5,-49,-25,-51,-8,78,-7,-55,-52,-9,-45,-55,-59,-64,-56,-58,-6,-3,-63,-33,-14,-13,-61,-28,-10,-1,-18,-11,-12,-2,-15,]),'LBRACKET':([0,6,12,17,18,19,24,33,44,46,47,50,52,60,62,63,64,65,68,80,90,101,],[44,44,44,44,44,-16,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'RBRACKET':([1,3,8,10,11,13,15,16,20,21,22,25,26,27,28,30,32,38,41,43,48,51,56,59,61,70,71,72,73,74,75,76,78,81,82,88,91,96,99,],[-53,-35,-38,-41,-46,-34,-48,-54,-42,-50,-40,-36,-62,-60,-47,-43,-37,-44,-57,-39,-49,-51,-55,-9,-45,91,-31,-55,-59,-64,-56,-58,-3,-63,-33,-61,-28,-18,-32,]),'WORD':([0,6,9,12,17,18,19,24,33,39,40,42,44,46,47,50,52,60,62,63,64,65,68,80,90,101,],[36,36,54,36,56,56,-16,56,56,65,67,69,56,72,56,72,36,72,56,56,56,56,72,56,56,56,]),'IMPORT':([0,6,12,17,18,19,24,33,44,47,52,62,63,64,65,80,90,101,],[4,4,4,4,4,-16,4,4,4,4,4,4,4,4,4,4,4,4,]),'DPROD':([1,10,11,13,15,16,20,21,26,27,28,30,36,38,48,56,72,74,78,81,88,91,96,],[-53,-41,-46,-64,-48,-54,-42,-50,-62,60,-47,-43,-55,-44,-49,-55,-55,-64,-3,-63,60,-28,-18,]),'MODULE':([0,6,12,19,52,],[9,9,9,-16,9,]),'STRING':([0,4,6,12,17,18,19,24,33,44,46,47,50,52,60,62,63,64,65,68,80,90,101,],[16,16,16,16,16,16,-16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'DEFINE':([0,6,12,19,52,],[39,39,39,-16,39,]),'RETURN':([0,6,12,17,18,19,24,33,44,47,52,62,63,64,65,80,90,101,],[33,33,33,33,33,-16,33,33,33,33,33,33,33,33,33,33,33,33,]),'APPLICATION':([0,6,12,19,52,],[42,42,42,-16,42,]),'RPAREN':([1,3,8,10,11,13,15,16,20,21,22,25,26,27,28,30,32,38,41,43,48,51,56,59,61,63,71,72,73,74,75,76,78,81,82,83,84,88,91,96,99,],[-53,-35,-38,-41,-46,-34,-48,-54,-42,-50,-40,-36,-62,-60,-47,-43,-37,-44,-57,-39,-49,-51,-55,-9,-45,-29,-31,-55,-59,-64,-56,-58,-3,-63,-33,-30,96,-61,-28,-18,-32,]),'FLOAT':([0,6,12,17,18,19,24,33,44,46,47,50,52,60,62,63,64,65,68,80,90,101,],[1,1,1,1,1,-16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'DIVMUL':([1,10,11,13,15,16,20,21,26,27,28,30,36,38,41,48,56,72,73,74,76,78,81,88,91,96,],[-53,-41,-46,-64,-48,-54,-42,-50,-62,-60,-47,-43,-55,-44,68,-49,-55,-55,68,-64,68,-3,-63,-61,-28,-18,]),'PLUSMINUS':([0,1,3,6,10,11,12,13,15,16,17,18,19,20,21,24,26,27,28,30,33,36,38,41,44,47,48,52,56,62,63,64,65,72,73,74,76,78,80,81,88,90,91,96,101,],[46,-53,50,46,-41,-46,46,-64,-48,-54,46,46,-16,-42,-50,46,-62,-60,-47,-43,46,-55,-44,-57,46,46,-49,46,-55,46,46,46,46,-55,-59,-64,-58,-3,46,-63,-61,46,-28,-18,46,]),'IF':([0,6,12,19,52,],[17,17,17,-16,17,]),'DOWNLEVEL':([0,6,12,19,52,],[18,18,18,-16,18,]),'VARIABLES':([0,6,12,17,18,19,24,33,44,47,52,62,63,64,65,80,90,101,],[47,47,47,47,47,-16,47,47,47,47,47,47,47,47,47,47,47,47,]),'COLON':([1,3,8,10,11,13,15,16,20,21,22,25,26,27,28,30,32,36,38,41,43,48,51,54,56,59,61,66,69,72,73,74,75,76,78,81,82,88,91,95,96,],[-53,-35,-38,-41,-46,-34,-48,-54,-42,-50,-40,-36,-62,-60,-47,-43,-37,64,-44,-57,-39,-49,-51,79,-55,-9,-45,87,89,-55,-59,-64,-56,-58,-3,-63,-33,-61,-28,101,-18,]),'DIVIDER':([0,1,2,3,5,6,7,8,10,11,12,13,14,15,16,19,20,21,22,23,25,26,27,28,29,30,31,32,34,35,36,37,38,41,43,45,48,49,51,52,53,55,56,58,59,61,72,73,74,75,76,77,78,79,81,82,85,86,87,88,89,91,92,93,96,97,98,100,102,],[19,-53,-22,-35,19,19,-27,-38,-41,-46,19,-34,-23,-48,-54,-16,-42,-50,-40,-26,-36,-62,-60,-47,-21,-43,-20,-37,-17,-24,-55,-19,-44,-57,-39,-5,-49,-25,-51,-8,19,19,-55,-52,-9,-45,-55,-59,-64,-56,-58,-6,-3,19,-63,-33,-14,-13,19,-61,19,-28,-10,-1,-18,-11,-12,-2,-15,]),'LBRACE':([0,6,12,17,18,19,24,33,44,46,47,50,52,60,62,63,64,65,68,79,80,87,89,90,94,101,],[6,6,6,6,6,-16,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'$end':([0,1,2,3,5,7,8,10,11,12,13,14,15,16,19,20,21,22,23,25,26,27,28,29,30,31,32,34,35,36,37,38,41,43,45,48,49,51,52,55,56,58,59,61,72,73,74,75,76,77,78,81,82,85,86,88,91,92,93,96,97,98,100,102,],[-4,-53,-22,-35,0,-27,-38,-41,-46,-4,-34,-23,-48,-54,-16,-42,-50,-40,-26,-36,-62,-60,-47,-21,-43,-20,-37,-17,-24,-55,-19,-44,-57,-39,-5,-49,-25,-51,-8,-7,-55,-52,-9,-45,-55,-59,-64,-56,-58,-6,-3,-63,-33,-14,-13,-61,-28,-10,-1,-18,-11,-12,-2,-15,]),'PRINT':([0,6,12,17,18,19,24,33,44,47,52,62,63,64,65,80,90,101,],[24,24,24,24,24,-16,24,24,24,24,24,24,24,24,24,24,24,24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'alg2':([0,6,12,17,18,24,33,44,46,47,50,52,62,63,64,65,68,80,90,101,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,88,27,27,27,]),'float':([0,6,12,17,18,24,33,44,46,47,50,52,60,62,63,64,65,68,80,90,101,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'module':([0,6,12,52,],[29,29,29,29,]),'block':([0,6,12,17,18,24,33,44,46,47,50,52,60,62,63,64,65,68,79,80,87,89,90,94,101,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,93,30,93,93,30,100,30,]),'application':([0,6,12,52,],[2,2,2,2,]),'alg0':([0,6,12,17,18,24,33,44,47,52,62,63,64,65,80,90,101,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'variables':([0,6,12,17,18,24,33,44,47,52,62,63,64,65,80,90,101,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'expr':([0,6,12,17,18,24,33,44,47,52,62,63,64,65,80,90,101,],[37,37,37,57,58,59,61,71,75,37,82,71,85,86,95,99,102,]),'comms':([44,63,],[70,83,]),'inblock':([0,6,12,],[5,53,55,]),'define':([0,6,12,52,],[35,35,35,35,]),'input':([0,6,12,52,],[7,7,7,7,]),'divider':([0,5,6,12,53,55,79,87,89,],[12,52,12,12,52,52,94,94,94,]),'import':([0,6,12,17,18,24,33,44,47,52,62,63,64,65,80,90,101,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'list':([0,6,12,17,18,24,33,44,46,47,50,52,60,62,63,64,65,68,80,90,101,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'func':([0,6,12,17,18,24,33,40,44,46,47,50,52,60,62,63,64,65,68,80,90,101,],[20,20,20,20,20,20,20,66,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'term':([0,6,12,17,18,24,33,44,46,47,50,52,60,62,63,64,65,68,80,90,101,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'str':([0,4,6,12,17,18,24,33,44,46,47,50,52,60,62,63,64,65,68,80,90,101,],[11,51,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'dblock':([79,87,89,],[92,97,98,]),'alg1':([0,6,12,17,18,24,33,44,46,47,50,52,62,63,64,65,80,90,101,],[41,41,41,41,41,41,41,41,73,41,76,41,41,41,41,41,41,41,41,]),'exprnoalg':([0,6,12,17,18,24,33,44,46,47,50,52,60,62,63,64,65,68,80,90,101,],[13,13,13,13,13,13,13,13,74,13,74,13,74,13,13,13,13,74,13,13,13,]),'declare':([0,6,12,52,],[14,14,14,14,]),'equal':([0,6,12,17,18,24,33,44,47,52,62,63,64,65,80,90,101,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'int':([0,6,12,17,18,24,33,44,46,47,50,52,60,62,63,64,65,68,80,90,101,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'metaexpr':([0,6,12,52,],[45,45,45,77,]),'var':([0,6,12,17,18,24,33,44,46,47,50,52,60,62,63,64,65,68,80,90,101,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'deffunc':([0,6,12,52,],[31,31,31,31,]),'downlevel':([0,6,12,52,],[49,49,49,49,]),'return':([0,6,12,17,18,24,33,44,47,52,62,63,64,65,80,90,101,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'if':([0,6,12,52,],[23,23,23,23,]),'args':([63,],[84,]),'print':([0,6,12,17,18,24,33,44,47,52,62,63,64,65,80,90,101,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'alg3':([0,6,12,17,18,24,33,44,46,47,50,52,60,62,63,64,65,68,80,90,101,],[26,26,26,26,26,26,26,26,26,26,26,26,81,26,26,26,26,26,26,26,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inblock","S'",1,None,None,None),
  ('dblock -> block','dblock',1,'p_dblock','pars.py',39),
  ('dblock -> divider block','dblock',2,'p_dblock','pars.py',40),
  ('block -> LBRACE inblock RBRACE','block',3,'p_block','pars.py',45),
  ('inblock -> <empty>','inblock',0,'p_inblock','pars.py',49),
  ('inblock -> metaexpr','inblock',1,'p_inblock','pars.py',50),
  ('inblock -> inblock divider metaexpr','inblock',3,'p_inblock','pars.py',51),
  ('inblock -> divider inblock','inblock',2,'p_inblock','pars.py',52),
  ('inblock -> inblock divider','inblock',2,'p_inblock','pars.py',53),
  ('print -> PRINT expr','print',2,'p_print','pars.py',63),
  ('module -> MODULE WORD COLON dblock','module',4,'p_module','pars.py',67),
  ('deffunc -> DEFFUNC func COLON dblock','deffunc',4,'p_deffunc','pars.py',71),
  ('application -> APPLICATION WORD COLON dblock','application',4,'p_application','pars.py',75),
  ('define -> DEFINE WORD expr','define',3,'p_define','pars.py',79),
  ('declare -> WORD COLON expr','declare',3,'p_declare','pars.py',83),
  ('if -> IF expr QUESTION expr COLON expr','if',6,'p_if','pars.py',87),
  ('divider -> DIVIDER','divider',1,'p_divider','pars.py',91),
  ('input -> INPUT','input',1,'p_input','pars.py',95),
  ('func -> WORD LPAREN args RPAREN','func',4,'p_func','pars.py',99),
  ('metaexpr -> expr','metaexpr',1,'p_metaexpr','pars.py',104),
  ('metaexpr -> deffunc','metaexpr',1,'p_metaexpr','pars.py',105),
  ('metaexpr -> module','metaexpr',1,'p_metaexpr','pars.py',106),
  ('metaexpr -> application','metaexpr',1,'p_metaexpr','pars.py',107),
  ('metaexpr -> declare','metaexpr',1,'p_metaexpr','pars.py',108),
  ('metaexpr -> define','metaexpr',1,'p_metaexpr','pars.py',109),
  ('metaexpr -> downlevel','metaexpr',1,'p_metaexpr','pars.py',110),
  ('metaexpr -> if','metaexpr',1,'p_metaexpr','pars.py',111),
  ('metaexpr -> input','metaexpr',1,'p_metaexpr','pars.py',112),
  ('list -> LBRACKET comms RBRACKET','list',3,'p_list','pars.py',117),
  ('args -> <empty>','args',0,'p_args','pars.py',125),
  ('args -> comms','args',1,'p_args','pars.py',126),
  ('comms -> expr','comms',1,'p_comms','pars.py',131),
  ('comms -> comms COMMA expr','comms',3,'p_comms','pars.py',132),
  ('equal -> WORD EQUALS expr','equal',3,'p_equal','pars.py',139),
  ('expr -> exprnoalg','expr',1,'p_expr','pars.py',144),
  ('expr -> alg0','expr',1,'p_expr','pars.py',145),
  ('expr -> print','expr',1,'p_expr','pars.py',146),
  ('expr -> variables','expr',1,'p_expr','pars.py',147),
  ('expr -> import','expr',1,'p_expr','pars.py',148),
  ('expr -> equal','expr',1,'p_expr','pars.py',149),
  ('expr -> return','expr',1,'p_expr','pars.py',150),
  ('exprnoalg -> term','exprnoalg',1,'p_exprnoalg','pars.py',155),
  ('exprnoalg -> func','exprnoalg',1,'p_exprnoalg','pars.py',156),
  ('exprnoalg -> block','exprnoalg',1,'p_exprnoalg','pars.py',157),
  ('exprnoalg -> list','exprnoalg',1,'p_exprnoalg','pars.py',158),
  ('return -> RETURN expr','return',2,'p_return','pars.py',162),
  ('term -> str','term',1,'p_term','pars.py',166),
  ('term -> float','term',1,'p_term','pars.py',167),
  ('term -> int','term',1,'p_term','pars.py',168),
  ('term -> var','term',1,'p_term','pars.py',169),
  ('int -> NUMBER','int',1,'p_int','pars.py',173),
  ('import -> IMPORT str','import',2,'p_import','pars.py',177),
  ('downlevel -> DOWNLEVEL expr','downlevel',2,'p_downlevel','pars.py',181),
  ('float -> FLOAT','float',1,'p_float','pars.py',185),
  ('str -> STRING','str',1,'p_str','pars.py',189),
  ('var -> WORD','var',1,'p_var','pars.py',193),
  ('variables -> VARIABLES expr','variables',2,'p_variables','pars.py',197),
  ('alg0 -> alg1','alg0',1,'p_alg0','pars.py',208),
  ('alg0 -> alg0 PLUSMINUS alg1','alg0',3,'p_alg0','pars.py',209),
  ('alg0 -> PLUSMINUS alg1','alg0',2,'p_alg0','pars.py',210),
  ('alg1 -> alg2','alg1',1,'p_alg1','pars.py',219),
  ('alg1 -> alg1 DIVMUL alg2','alg1',3,'p_alg1','pars.py',220),
  ('alg2 -> alg3','alg2',1,'p_alg2','pars.py',227),
  ('alg2 -> alg2 DPROD alg3','alg2',3,'p_alg2','pars.py',228),
  ('alg3 -> exprnoalg','alg3',1,'p_alg3','pars.py',235),
]
